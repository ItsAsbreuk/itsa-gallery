YUI(yuiconfig).use('node', 'gallery-itsapanel', 'gallery-itsastatusbar', 'model', 'gallery-itsamodelsyncpromise', 'promise', 'gallerycss-itsa-base', function(Y) {

    // 'gallerycss-itsa-base' is loaded to give the pure-buttons a border
    var mystatusbar = new Y.ITSAStatusbar(),
        btnLoadModel1 = Y.one('#btnLoadModel1'),
        btnLoadModel2 = Y.one('#btnLoadModel2'),
        countrymodel1, countrymodel2, mypanel;

    mystatusbar.handleModelSync();

    Y.CountryModel = Y.Base.create('countryModel', Y.Model, [], {
        syncPromise: function(action, options) {
            if (action==='read') {
                // simulating loaddelay through Y.later:
                return new Y.Promise(function (resolve, reject) {
                    Y.later(
                        3000,
                        null,
                        function() {
                            resolve({Country: "Netherlands"});
                        }
                    );
                });
            }
            // do not forget to reject the promise in case an invalid 'action' is defined
            return new Y.Promise(function (resolve, reject) {
                reject(new Error('The syncPromise()-method was is called with undefined action: '+action));
            });
        }
    });

    countrymodel1 = new Y.CountryModel();
    countrymodel2 = new Y.CountryModel();

    mypanel = new Y.ITSAPanel({
        boundingBox: '#itsapanel',
        title: 'Information',
        statusBar: true,
        body: 'This panel handles syncmessages from Model 2',
        floated: false,
        width: 320,
        visible: true
    }).render();
    countrymodel2.addMessageTarget(mypanel);

    btnLoadModel1.on(
        'click',
        function() {
            countrymodel1.load(); // <-- uses default syncmessage
        }
    );

    btnLoadModel2.on(
        'click',
        function() {
            countrymodel2.load({syncmessage: 'I am loading...'});
        }
    );

});
