YUI(yuiconfig).use('node', 'base-build', 'gallery-itsamodelsyncpromise', 'model', function(Y) {

    Y.ArtistModel = Y.Base.create('artistmodel', Y.Model, [], {
        sync: function (action, options, callback) {
            var instance = this;
            switch (action) {
              case 'delete':
                Y.later(1500, null, function() {
                    callback();
                });
                return;
              default:
                callback('Invalid action');
            }
        }
    }, {
        ATTRS: {
            name: {
                value: 'U2'
            }
        }
    });
    var mymodel = new Y.ArtistModel({
        name: 'Marco'
    });
    var mymodel2 = new Y.ArtistModel({
        name: 'Marco'
    });

    mymodel.on('destroy', function(e){
        console.log('model 1 '+mymodel.get('name'));

   //     e.preventDefault();
    });

    mymodel2.on('destroy', function(e){
        console.log('model 2 '+mymodel.get('name'));

   //     e.preventDefault();
    });

    mymodel.after('destroy', function() {
        console.log('model 1: after destroy subscriber');
    });

    mymodel2.after('destroy', function() {
        console.log('model 2: after destroy subscriber');
    });


    mymodel.destroy({remove: true});


});