<style type="text/css">
{{>index-css}}
</style>

<div class="intro">
    <p>
    *Summary Goes Here*
    </p>
</div>

{{>getting-started}}

<h2>Description</h2>
<p>By adding this module, you have some classnames at your proposal, which can be used to create icons. The best way to create an icon, is by defining a <code>li-element</code> and add the right class to it. Typically the icons are inside a <code>button-element</code> but this is not required.
</p>
<p>
    Be aware of the load-delay: if you use progressive enhancement, you might want the nodes to be invisible until loading has finished.
</p>

<h2>Available iconclasses</h2>
    <ul>
        <li><i class="itsaicon-abort"></i><code>itsaicon-abort</code></li>
        <li><i class="itsaicon-cancel"></i><code>itsaicon-cancel</code></li>
        <li><i class="itsaicon-destroy"></i><code>itsaicon-destroy</code></li>
        <li><i class="itsaicon-ignore"></i><code>itsaicon-ignore</code></li>
        <li><i class="itsaicon-load"></i><code>itsaicon-load</code></li>
        <li><i class="itsaicon-no"></i><code>itsaicon-no</code></li>
        <li><i class="itsaicon-ok"></i><code>itsaicon-ok</code></li>
        <li><i class="itsaicon-remove"></i><code>itsaicon-remove</code></li>
        <li><i class="itsaicon-reset"></i><code>itsaicon-reset</code></li>
        <li><i class="itsaicon-retry"></i><code>itsaicon-retry</code></li>
        <li><i class="itsaicon-save"></i><code>itsaicon-save</code></li>
        <li><i class="itsaicon-submit"></i><code>itsaicon-submit</code></li>
        <li><i class="itsaicon-yes"></i><code>itsaicon-yes</code></li>
    </ul>

<h2>Usage</h2>
```html
<button class="pure-button"><i class="itsaicon-save"></i><code>Save</button>
```

```js
YUI(yuiconfig).use('gallerycss-itsa-form', function(Y) {
    // by loading the module, the css will be available
    // be aware of the load-delay: if you use progressive enhancement, you might want
    // the nodes to be invisible until loading has finished.

});
```
<h3>Changing size</h3>
<p>Iconfonts are handled as regular characters. The font size is detemined by the calculated font-size value of the element. To change the icon-size, you need to change the font-size.
</p>
<p>
The iconfont has its definition inside <code>.itsaicon-iconname:before</code>. You can set a fontsize here, or at a ancestor-node, depending what needs to be set.
</p>
```css
button {
    font-size: 120%;
}
itsaicon-yes:before {
    font-size: 150%;
}
```

<h3>Changing color</h3>
<p>Iconfonts are handled as regular characters. The iconcolor is detemined by the calculated color-value of the element. To change the icon-color, you need to change the color of the icon.
</p>
<p>
The icon-color has its definition inside <code>.itsaicon-iconname:before</code>. You can set a color here, or at a ancestor-node, depending what needs to be set.
</p>
```css
button {
    color: #F00;
}
itsaicon-yes:before {
    color: #0F0;
}
```

<script>
{{>init-loaderconfig-js}}
{{>loaderconfig-js}}
{{>index-js}}
</script>