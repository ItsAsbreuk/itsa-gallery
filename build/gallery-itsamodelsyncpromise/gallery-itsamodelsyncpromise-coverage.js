if (typeof __coverage__ === 'undefined') { __coverage__ = {}; }
if (!__coverage__['build/gallery-itsamodelsyncpromise/gallery-itsamodelsyncpromise.js']) {
   __coverage__['build/gallery-itsamodelsyncpromise/gallery-itsamodelsyncpromise.js'] = {"path":"build/gallery-itsamodelsyncpromise/gallery-itsamodelsyncpromise.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":40},"end":{"line":1,"column":59}}},"2":{"name":"(anonymous_2)","line":80,"loc":{"start":{"line":80,"column":13},"end":{"line":80,"column":33}}},"3":{"name":"ITSAModelSyncPromise","line":98,"loc":{"start":{"line":98,"column":4},"end":{"line":98,"column":36}}},"4":{"name":"(anonymous_4)","line":125,"loc":{"start":{"line":125,"column":30},"end":{"line":125,"column":56}}},"5":{"name":"(anonymous_5)","line":131,"loc":{"start":{"line":131,"column":44},"end":{"line":131,"column":71}}},"6":{"name":"(anonymous_6)","line":155,"loc":{"start":{"line":155,"column":23},"end":{"line":155,"column":41}}},"7":{"name":"(anonymous_7)","line":159,"loc":{"start":{"line":159,"column":33},"end":{"line":159,"column":60}}},"8":{"name":"(anonymous_8)","line":164,"loc":{"start":{"line":164,"column":26},"end":{"line":164,"column":40}}},"9":{"name":"(anonymous_9)","line":170,"loc":{"start":{"line":170,"column":30},"end":{"line":170,"column":49}}},"10":{"name":"(anonymous_10)","line":190,"loc":{"start":{"line":190,"column":53},"end":{"line":190,"column":78}}},"11":{"name":"(anonymous_11)","line":220,"loc":{"start":{"line":220,"column":21},"end":{"line":220,"column":40}}},"12":{"name":"(anonymous_12)","line":224,"loc":{"start":{"line":224,"column":33},"end":{"line":224,"column":60}}},"13":{"name":"(anonymous_13)","line":229,"loc":{"start":{"line":229,"column":26},"end":{"line":229,"column":40}}},"14":{"name":"(anonymous_14)","line":235,"loc":{"start":{"line":235,"column":30},"end":{"line":235,"column":49}}},"15":{"name":"(anonymous_15)","line":263,"loc":{"start":{"line":263,"column":51},"end":{"line":263,"column":76}}},"16":{"name":"(anonymous_16)","line":294,"loc":{"start":{"line":294,"column":21},"end":{"line":294,"column":40}}},"17":{"name":"(anonymous_17)","line":298,"loc":{"start":{"line":298,"column":33},"end":{"line":298,"column":60}}},"18":{"name":"(anonymous_18)","line":303,"loc":{"start":{"line":303,"column":54},"end":{"line":303,"column":77}}},"19":{"name":"(anonymous_19)","line":311,"loc":{"start":{"line":311,"column":34},"end":{"line":311,"column":48}}},"20":{"name":"(anonymous_20)","line":317,"loc":{"start":{"line":317,"column":38},"end":{"line":317,"column":57}}},"21":{"name":"(anonymous_21)","line":346,"loc":{"start":{"line":346,"column":63},"end":{"line":346,"column":88}}},"22":{"name":"(anonymous_22)","line":377,"loc":{"start":{"line":377,"column":24},"end":{"line":377,"column":43}}},"23":{"name":"(anonymous_23)","line":381,"loc":{"start":{"line":381,"column":33},"end":{"line":381,"column":60}}},"24":{"name":"(anonymous_24)","line":383,"loc":{"start":{"line":383,"column":25},"end":{"line":383,"column":36}}},"25":{"name":"(anonymous_25)","line":384,"loc":{"start":{"line":384,"column":57},"end":{"line":384,"column":73}}},"26":{"name":"(anonymous_26)","line":389,"loc":{"start":{"line":389,"column":30},"end":{"line":389,"column":44}}},"27":{"name":"(anonymous_27)","line":398,"loc":{"start":{"line":398,"column":34},"end":{"line":398,"column":53}}},"28":{"name":"(anonymous_28)","line":410,"loc":{"start":{"line":410,"column":57},"end":{"line":410,"column":82}}},"29":{"name":"(anonymous_29)","line":424,"loc":{"start":{"line":424,"column":16},"end":{"line":424,"column":27}}},"30":{"name":"(anonymous_30)","line":439,"loc":{"start":{"line":439,"column":30},"end":{"line":439,"column":47}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":457,"column":118}},"2":{"start":{"line":30,"column":3},"end":{"line":94,"column":6}},"3":{"start":{"line":81,"column":8},"end":{"line":92,"column":9}},"4":{"start":{"line":82,"column":12},"end":{"line":91,"column":13}},"5":{"start":{"line":83,"column":16},"end":{"line":83,"column":46}},"6":{"start":{"line":85,"column":16},"end":{"line":89,"column":19}},"7":{"start":{"line":90,"column":16},"end":{"line":90,"column":28}},"8":{"start":{"line":93,"column":8},"end":{"line":93,"column":24}},"9":{"start":{"line":98,"column":4},"end":{"line":98,"column":38}},"10":{"start":{"line":99,"column":4},"end":{"line":451,"column":13}},"11":{"start":{"line":126,"column":12},"end":{"line":127,"column":30}},"12":{"start":{"line":129,"column":12},"end":{"line":129,"column":64}},"13":{"start":{"line":130,"column":12},"end":{"line":135,"column":13}},"14":{"start":{"line":131,"column":16},"end":{"line":134,"column":19}},"15":{"start":{"line":132,"column":20},"end":{"line":132,"column":126}},"16":{"start":{"line":133,"column":20},"end":{"line":133,"column":52}},"17":{"start":{"line":136,"column":12},"end":{"line":136,"column":31}},"18":{"start":{"line":156,"column":12},"end":{"line":156,"column":32}},"19":{"start":{"line":158,"column":12},"end":{"line":158,"column":36}},"20":{"start":{"line":159,"column":12},"end":{"line":199,"column":15}},"21":{"start":{"line":160,"column":16},"end":{"line":163,"column":24}},"22":{"start":{"line":164,"column":16},"end":{"line":169,"column":18}},"23":{"start":{"line":165,"column":20},"end":{"line":165,"column":39}},"24":{"start":{"line":166,"column":20},"end":{"line":166,"column":59}},"25":{"start":{"line":167,"column":20},"end":{"line":167,"column":57}},"26":{"start":{"line":168,"column":20},"end":{"line":168,"column":43}},"27":{"start":{"line":170,"column":16},"end":{"line":180,"column":18}},"28":{"start":{"line":172,"column":20},"end":{"line":176,"column":21}},"29":{"start":{"line":173,"column":24},"end":{"line":175,"column":27}},"30":{"start":{"line":177,"column":20},"end":{"line":177,"column":47}},"31":{"start":{"line":178,"column":20},"end":{"line":178,"column":54}},"32":{"start":{"line":179,"column":20},"end":{"line":179,"column":38}},"33":{"start":{"line":181,"column":16},"end":{"line":198,"column":17}},"34":{"start":{"line":183,"column":20},"end":{"line":186,"column":22}},"35":{"start":{"line":190,"column":20},"end":{"line":197,"column":23}},"36":{"start":{"line":191,"column":24},"end":{"line":196,"column":25}},"37":{"start":{"line":192,"column":28},"end":{"line":192,"column":41}},"38":{"start":{"line":195,"column":28},"end":{"line":195,"column":50}},"39":{"start":{"line":221,"column":12},"end":{"line":221,"column":32}},"40":{"start":{"line":223,"column":12},"end":{"line":223,"column":36}},"41":{"start":{"line":224,"column":12},"end":{"line":272,"column":15}},"42":{"start":{"line":225,"column":16},"end":{"line":228,"column":24}},"43":{"start":{"line":229,"column":16},"end":{"line":234,"column":18}},"44":{"start":{"line":230,"column":20},"end":{"line":230,"column":39}},"45":{"start":{"line":231,"column":20},"end":{"line":231,"column":57}},"46":{"start":{"line":232,"column":20},"end":{"line":232,"column":57}},"47":{"start":{"line":233,"column":20},"end":{"line":233,"column":43}},"48":{"start":{"line":235,"column":16},"end":{"line":254,"column":18}},"49":{"start":{"line":236,"column":20},"end":{"line":236,"column":31}},"50":{"start":{"line":238,"column":20},"end":{"line":242,"column":21}},"51":{"start":{"line":239,"column":24},"end":{"line":241,"column":27}},"52":{"start":{"line":243,"column":20},"end":{"line":243,"column":47}},"53":{"start":{"line":244,"column":20},"end":{"line":244,"column":46}},"54":{"start":{"line":245,"column":20},"end":{"line":248,"column":21}},"55":{"start":{"line":247,"column":24},"end":{"line":247,"column":53}},"56":{"start":{"line":249,"column":20},"end":{"line":249,"column":43}},"57":{"start":{"line":250,"column":20},"end":{"line":250,"column":55}},"58":{"start":{"line":251,"column":20},"end":{"line":251,"column":42}},"59":{"start":{"line":252,"column":20},"end":{"line":252,"column":52}},"60":{"start":{"line":253,"column":20},"end":{"line":253,"column":38}},"61":{"start":{"line":255,"column":16},"end":{"line":271,"column":17}},"62":{"start":{"line":257,"column":20},"end":{"line":260,"column":22}},"63":{"start":{"line":263,"column":20},"end":{"line":270,"column":23}},"64":{"start":{"line":264,"column":24},"end":{"line":269,"column":25}},"65":{"start":{"line":265,"column":28},"end":{"line":265,"column":41}},"66":{"start":{"line":268,"column":28},"end":{"line":268,"column":50}},"67":{"start":{"line":295,"column":12},"end":{"line":295,"column":32}},"68":{"start":{"line":297,"column":12},"end":{"line":297,"column":36}},"69":{"start":{"line":298,"column":12},"end":{"line":357,"column":15}},"70":{"start":{"line":299,"column":16},"end":{"line":302,"column":24}},"71":{"start":{"line":303,"column":16},"end":{"line":356,"column":19}},"72":{"start":{"line":304,"column":20},"end":{"line":355,"column":21}},"73":{"start":{"line":305,"column":24},"end":{"line":305,"column":51}},"74":{"start":{"line":306,"column":24},"end":{"line":306,"column":70}},"75":{"start":{"line":307,"column":24},"end":{"line":307,"column":61}},"76":{"start":{"line":308,"column":24},"end":{"line":308,"column":55}},"77":{"start":{"line":311,"column":24},"end":{"line":316,"column":26}},"78":{"start":{"line":312,"column":28},"end":{"line":312,"column":47}},"79":{"start":{"line":313,"column":28},"end":{"line":313,"column":65}},"80":{"start":{"line":314,"column":28},"end":{"line":314,"column":65}},"81":{"start":{"line":315,"column":28},"end":{"line":315,"column":51}},"82":{"start":{"line":317,"column":24},"end":{"line":336,"column":26}},"83":{"start":{"line":318,"column":28},"end":{"line":318,"column":39}},"84":{"start":{"line":320,"column":28},"end":{"line":324,"column":29}},"85":{"start":{"line":321,"column":32},"end":{"line":323,"column":35}},"86":{"start":{"line":325,"column":28},"end":{"line":325,"column":55}},"87":{"start":{"line":326,"column":28},"end":{"line":326,"column":54}},"88":{"start":{"line":327,"column":28},"end":{"line":330,"column":29}},"89":{"start":{"line":329,"column":32},"end":{"line":329,"column":61}},"90":{"start":{"line":331,"column":28},"end":{"line":331,"column":51}},"91":{"start":{"line":332,"column":28},"end":{"line":332,"column":63}},"92":{"start":{"line":333,"column":28},"end":{"line":333,"column":50}},"93":{"start":{"line":334,"column":28},"end":{"line":334,"column":60}},"94":{"start":{"line":335,"column":28},"end":{"line":335,"column":46}},"95":{"start":{"line":337,"column":24},"end":{"line":337,"column":76}},"96":{"start":{"line":338,"column":24},"end":{"line":354,"column":25}},"97":{"start":{"line":340,"column":28},"end":{"line":343,"column":30}},"98":{"start":{"line":346,"column":28},"end":{"line":353,"column":31}},"99":{"start":{"line":347,"column":32},"end":{"line":352,"column":33}},"100":{"start":{"line":348,"column":36},"end":{"line":348,"column":49}},"101":{"start":{"line":351,"column":36},"end":{"line":351,"column":58}},"102":{"start":{"line":378,"column":12},"end":{"line":378,"column":32}},"103":{"start":{"line":380,"column":12},"end":{"line":380,"column":36}},"104":{"start":{"line":381,"column":12},"end":{"line":428,"column":14}},"105":{"start":{"line":382,"column":16},"end":{"line":382,"column":49}},"106":{"start":{"line":383,"column":16},"end":{"line":387,"column":18}},"107":{"start":{"line":384,"column":20},"end":{"line":386,"column":23}},"108":{"start":{"line":385,"column":24},"end":{"line":385,"column":55}},"109":{"start":{"line":388,"column":16},"end":{"line":422,"column":17}},"110":{"start":{"line":389,"column":20},"end":{"line":397,"column":22}},"111":{"start":{"line":390,"column":24},"end":{"line":394,"column":26}},"112":{"start":{"line":395,"column":24},"end":{"line":395,"column":61}},"113":{"start":{"line":396,"column":24},"end":{"line":396,"column":47}},"114":{"start":{"line":398,"column":20},"end":{"line":401,"column":22}},"115":{"start":{"line":399,"column":24},"end":{"line":399,"column":33}},"116":{"start":{"line":400,"column":24},"end":{"line":400,"column":42}},"117":{"start":{"line":402,"column":20},"end":{"line":418,"column":21}},"118":{"start":{"line":404,"column":24},"end":{"line":407,"column":26}},"119":{"start":{"line":410,"column":24},"end":{"line":417,"column":27}},"120":{"start":{"line":411,"column":28},"end":{"line":416,"column":29}},"121":{"start":{"line":412,"column":32},"end":{"line":412,"column":45}},"122":{"start":{"line":415,"column":32},"end":{"line":415,"column":54}},"123":{"start":{"line":420,"column":20},"end":{"line":420,"column":29}},"124":{"start":{"line":421,"column":20},"end":{"line":421,"column":30}},"125":{"start":{"line":426,"column":20},"end":{"line":426,"column":62}},"126":{"start":{"line":440,"column":12},"end":{"line":440,"column":32}},"127":{"start":{"line":443,"column":12},"end":{"line":447,"column":13}},"128":{"start":{"line":444,"column":16},"end":{"line":446,"column":19}},"129":{"start":{"line":448,"column":12},"end":{"line":448,"column":45}},"130":{"start":{"line":453,"column":4},"end":{"line":453,"column":50}},"131":{"start":{"line":455,"column":4},"end":{"line":455,"column":48}}},"branchMap":{"1":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":8},"end":{"line":81,"column":8}},{"start":{"line":81,"column":8},"end":{"line":81,"column":8}}]},"2":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":12},"end":{"line":130,"column":12}},{"start":{"line":130,"column":12},"end":{"line":130,"column":12}}]},"3":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":22},"end":{"line":158,"column":29}},{"start":{"line":158,"column":33},"end":{"line":158,"column":35}}]},"4":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":20},"end":{"line":172,"column":20}},{"start":{"line":172,"column":20},"end":{"line":172,"column":20}}]},"5":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":16},"end":{"line":181,"column":16}},{"start":{"line":181,"column":16},"end":{"line":181,"column":16}}]},"6":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":24},"end":{"line":191,"column":24}},{"start":{"line":191,"column":24},"end":{"line":191,"column":24}}]},"7":{"line":223,"type":"binary-expr","locations":[{"start":{"line":223,"column":22},"end":{"line":223,"column":29}},{"start":{"line":223,"column":33},"end":{"line":223,"column":35}}]},"8":{"line":238,"type":"if","locations":[{"start":{"line":238,"column":20},"end":{"line":238,"column":20}},{"start":{"line":238,"column":20},"end":{"line":238,"column":20}}]},"9":{"line":245,"type":"if","locations":[{"start":{"line":245,"column":20},"end":{"line":245,"column":20}},{"start":{"line":245,"column":20},"end":{"line":245,"column":20}}]},"10":{"line":255,"type":"if","locations":[{"start":{"line":255,"column":16},"end":{"line":255,"column":16}},{"start":{"line":255,"column":16},"end":{"line":255,"column":16}}]},"11":{"line":264,"type":"if","locations":[{"start":{"line":264,"column":24},"end":{"line":264,"column":24}},{"start":{"line":264,"column":24},"end":{"line":264,"column":24}}]},"12":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":22},"end":{"line":297,"column":29}},{"start":{"line":297,"column":33},"end":{"line":297,"column":35}}]},"13":{"line":304,"type":"if","locations":[{"start":{"line":304,"column":20},"end":{"line":304,"column":20}},{"start":{"line":304,"column":20},"end":{"line":304,"column":20}}]},"14":{"line":320,"type":"if","locations":[{"start":{"line":320,"column":28},"end":{"line":320,"column":28}},{"start":{"line":320,"column":28},"end":{"line":320,"column":28}}]},"15":{"line":327,"type":"if","locations":[{"start":{"line":327,"column":28},"end":{"line":327,"column":28}},{"start":{"line":327,"column":28},"end":{"line":327,"column":28}}]},"16":{"line":337,"type":"cond-expr","locations":[{"start":{"line":337,"column":56},"end":{"line":337,"column":64}},{"start":{"line":337,"column":67},"end":{"line":337,"column":75}}]},"17":{"line":338,"type":"if","locations":[{"start":{"line":338,"column":24},"end":{"line":338,"column":24}},{"start":{"line":338,"column":24},"end":{"line":338,"column":24}}]},"18":{"line":347,"type":"if","locations":[{"start":{"line":347,"column":32},"end":{"line":347,"column":32}},{"start":{"line":347,"column":32},"end":{"line":347,"column":32}}]},"19":{"line":380,"type":"binary-expr","locations":[{"start":{"line":380,"column":22},"end":{"line":380,"column":29}},{"start":{"line":380,"column":33},"end":{"line":380,"column":35}}]},"20":{"line":388,"type":"if","locations":[{"start":{"line":388,"column":16},"end":{"line":388,"column":16}},{"start":{"line":388,"column":16},"end":{"line":388,"column":16}}]},"21":{"line":388,"type":"binary-expr","locations":[{"start":{"line":388,"column":20},"end":{"line":388,"column":34}},{"start":{"line":388,"column":38},"end":{"line":388,"column":55}}]},"22":{"line":402,"type":"if","locations":[{"start":{"line":402,"column":20},"end":{"line":402,"column":20}},{"start":{"line":402,"column":20},"end":{"line":402,"column":20}}]},"23":{"line":411,"type":"if","locations":[{"start":{"line":411,"column":28},"end":{"line":411,"column":28}},{"start":{"line":411,"column":28},"end":{"line":411,"column":28}}]},"24":{"line":443,"type":"if","locations":[{"start":{"line":443,"column":12},"end":{"line":443,"column":12}},{"start":{"line":443,"column":12},"end":{"line":443,"column":12}}]}},"code":["(function () { YUI.add('gallery-itsamodelsyncpromise', function (Y, NAME) {","","'use strict';","","/**"," *"," * Extention ITSAModelSyncPromise"," *"," *"," * Extends Y.Model with Promised sync-methods. The synclayer can be made just as usual. But instead of calling"," * Model.load and Model.save and Model.destroy, you can use:"," *"," * <b>Model.loadPromise</b>"," * <b>Model.savePromise</b>"," * <b>Model.submitPromise</b>"," * <b>Model.destroyPromise</b>"," *"," * <b>The sync-layer MUST call the callback-function of its related promise-method, otherwise the promises are not resolved.</b>"," *"," * @module gallery-itsamodelsyncpromise"," * @class Y.Model"," * @constructor"," * @since 0.1"," *"," * <i>Copyright (c) 2013 Marco Asbreuk - http://itsasbreuk.nl</i>"," * YUI BSD License - http://developer.yahoo.com/yui/license.html"," *","*/","","   var YArray = Y.Array,","","   /**","     * Fired when an error occurs, such as when an attribute (or property) doesn't validate or when","     * the sync layer submit-function returns an error.","     * @event error","     * @param e {EventFacade} Event Facade including:","     * @param e.error {any} Error message.","     * @param e.src {String} Source of the error. May be one of the following (or any","     *                     custom error source defined by a Model subclass):","     *","     * `submit`: An error submitting the model from within a sync layer.","     *","     * `attributevalidation`: An error validating an attribute (or property). The attribute (or objectproperty)","     *                        that failed validation will be provided as the `attribute` property on the event facade.","     *","     * @param e.attribute {String} The attribute/property that failed validation.","     * @param e.validationerror {String} The errormessage in case of attribute-validation error.","    **/","    EVT_ERROR = 'error',","   /**","     * Fired after model is submitted from the sync layer.","     * @event submit","     * @param e {EventFacade} Event Facade including:","     * @param [e.options] {Object} The options=object that was passed to the sync-layer, if there was one.","     * @param [e.parsed] {Object} The parsed version of the sync layer's response to the submit-request, if there was a response.","     * @param [e.response] {any} The sync layer's raw, unparsed response to the submit-request, if there was one.","     * @since 0.1","    **/","    EVT_SUBMIT = 'submit',","   /**","     * Fired after model is read from the sync layer.","     * @event load","     * @param e {EventFacade} Event Facade including:","     * @param [e.options] {Object} The options=object that was passed to the sync-layer, if there was one.","     * @param [e.response] {any} The sync layer's raw, unparsed response to the submit-request, if there was one.","     * @since 0.1","    **/","    EVT_LOAD = 'load',","   /**","     * Fired after model is saved through the sync layer.","     * @event submit","     * @param e {EventFacade} Event Facade including:","     * @param [e.options] {Object} The options=object that was passed to the sync-layer, if there was one.","     * @param [e.parsed] {Object} The parsed version of the sync layer's response to the submit-request, if there was a response.","     * @param [e.response] {any} The sync layer's raw, unparsed response to the submit-request, if there was one.","     * @since 0.1","    **/","    EVT_SAVE = 'save',","","    PARSED = function (response) {","        if (typeof response === 'string') {","            try {","                return Y.JSON.parse(response);","            } catch (ex) {","                this.fire(EVT_ERROR, {","                    error   : ex,","                    response: response,","                    src     : 'parse'","                });","                return null;","            }","        }","        return response;","    };","","    // -- Mixing extra Methods to Y.Model -----------------------------------","","    function ITSAModelSyncPromise() {}","    Y.mix(ITSAModelSyncPromise.prototype, {","","       /**","         * This method can be defined in descendend classes.<br />","         * If syncPromise is defined, then the syncPromise() definition will be used instead of sync() definition.<br />","         * In case an invalid 'action' is defined, the promise will be rejected.","         *","         * @method syncPromise","         * @param action {String} The sync-action to perform.","         * @param [options] {Object} Sync options. The custom synclayer should pass through all options-properties to the server.","         * @return {Y.Promise} returned response for each 'action' --> response --> resolve(dataobject) OR reject(reason).","         * The returned 'dataobject' might be an object or a string that can be turned into a json-object","        */","","        /**","         * This method is used internally and returns syncPromise() that is called with 'action'.","         * If 'action' is not handled as a Promise -inside syncPromise- then this method will reject the promisi.","         *","         * @method _syncTimeoutPromise","         * @param action {String} The sync-action to perform.","         * @param [options] {Object} Sync options. The custom synclayer should pass through all options-properties to the server.","         * @return {Y.Promise} returned response for each 'action' --> response --> resolve(dataobject) OR reject(reason).","         * The returned 'dataobject' might be an object or a string that can be turned into a json-object","         * @private","         * @since 0.2","        */","        _syncTimeoutPromise : function(action, options) {","            var instance = this,","                  syncpromise;","","            syncpromise = instance.syncPromise(action, options);","            if (!(syncpromise instanceof Y.Promise)) {","                syncpromise = new Y.Promise(function (resolve, reject) {","                    var errormessage = 'syncPromise is rejected --> '+action+' not defined as a Promise inside syncPromise()';","                    reject(new Error(errormessage));","                });","            }","            return syncpromise;","        },","","       /**","         * Submits this model to the server.","         *","         * This method delegates to the `sync()` method to perform the actual submit","         * operation, which is Y.Promise. Read the Promise.then() and look for resolve(response) OR reject(reason).","         *","         * A successful submit-operation will also fire a `submit` event, while an unsuccessful","         * submit operation will fire an `error` event with the `src` value \"submit\".","         *","         * <b>CAUTION</b> The sync-method MUST call its callback-function to make the promised resolved.","         *","         * @method submitPromise","         * @param {Object} [options] Options to be passed to `sync()`. It's up to the custom sync","         *                 implementation to determine what options it supports or requires, if any.","         * @return {Y.Promise} promised response --> resolve(response) OR reject(reason).","        **/","        submitPromise: function(options) {","            var instance = this;","","            options = options || {};","            return new Y.Promise(function (resolve, reject) {","                var errFunc, successFunc,","                      facade = {","                          options : options","                      };","                errFunc = function(err) {","                    facade.error = err;","                    facade.src   = 'Model.submitPromise()';","                    instance._lazyFireErrorEvent(facade);","                    reject(new Error(err));","                };","                successFunc = function(response) {","                    // Lazy publish.","                    if (!instance._submitEvent) {","                        instance._submitEvent = instance.publish(EVT_SUBMIT, {","                            preventable: false","                        });","                    }","                    facade.response = response;","                    instance.fire(EVT_SUBMIT, facade);","                    resolve(response);","                };","                if (instance.syncPromise) {","                    // use the syncPromise-layer","                    instance._syncTimeoutPromise('submit', options).then(","                        successFunc,","                        errFunc","                    );","                }","                else {","                    // use the sync-layer","                    instance.sync('submit', options, function (err, response) {","                        if (err) {","                            errFunc(err);","                        }","                        else {","                            successFunc(response);","                        }","                    });","                }","            });","        },","","","        /**","         * Loads this model from the server.","         *","         * This method delegates to the `sync()` method to perform the actual load","         * operation, which is an asynchronous action. Specify a _callback_ function to","         * be notified of success or failure.","         *","         * A successful load operation will fire a `load` event, while an unsuccessful","         * load operation will fire an `error` event with the `src` value \"load\".","         *","         * If the load operation succeeds and one or more of the loaded attributes","         * differ from this model's current attributes, a `change` event will be fired.","         * @method loadPromise","         * @param {Object} [options] Options to be passed to `sync()`. It's up to the custom sync","         *                 implementation to determine what options it supports or requires, if any.","         * @return {Y.Promise} promised response --> resolve(response) OR reject(reason).","        **/","        loadPromise: function (options) {","            var instance = this;","","            options = options || {};","            return new Y.Promise(function (resolve, reject) {","                var errFunc, successFunc,","                      facade = {","                          options : options","                      };","                errFunc = function(err) {","                    facade.error = err;","                    facade.src   = 'Model.loadPromise()';","                    instance._lazyFireErrorEvent(facade);","                    reject(new Error(err));","                };","                successFunc = function(response) {","                    var parsed;","                    // Lazy publish.","                    if (!instance._loadEvent) {","                        instance._loadEvent = instance.publish(EVT_LOAD, {","                            preventable: false","                        });","                    }","                    facade.response = response;","                    parsed = PARSED(response);","                    if (parsed.responseText) {","                        // XMLHttpRequest","                        parsed = parsed.responseText;","                    }","                    facade.parsed = parsed;","                    instance.setAttrs(parsed, options);","                    instance.changed = {};","                    instance.fire(EVT_LOAD, facade);","                    resolve(response);","                };","                if (instance.syncPromise) {","                    // use the syncPromise-layer","                    instance._syncTimeoutPromise('read', options).then(","                        successFunc,","                        errFunc","                    );","                }","                else {","                    instance.sync('read', options, function (err, response) {","                        if (err) {","                            errFunc(err);","                        }","                        else {","                            successFunc(response);","                        }","                    });","                }","            });","        },","","       /**","        * Saves this model to the server.","        *","        * This method delegates to the `sync()` method to perform the actual save","        * operation, which is an asynchronous action. Specify a _callback_ function to","        * be notified of success or failure.","        *","        * A successful save operation will fire a `save` event, while an unsuccessful","        * save operation will fire an `error` event with the `src` value \"save\".","        *","        * If the save operation succeeds and one or more of the attributes returned in","        * the server's response differ from this model's current attributes, a","        * `change` event will be fired.","        *","        * @method savePromise","         * @param {Object} [options] Options to be passed to `sync()`. It's up to the custom sync","         *                 implementation to determine what options it supports or requires, if any.","         * @return {Y.Promise} promised response --> resolve(response) OR reject(reason).","        **/","        savePromise: function (options) {","            var instance = this;","","            options = options || {};","            return new Y.Promise(function (resolve, reject) {","                var errFunc, successFunc, usedmethod,","                      facade = {","                          options : options","                      };","                instance._validate(instance.toJSON(), function (validateErr) {","                    if (validateErr) {","                        facade.error = validateErr;","                        facade.src = 'Model.savePromise() - validate';","                        instance._lazyFireErrorEvent(facade);","                        reject(new Error(validateErr));","                    }","                    else {","                        errFunc = function(err) {","                            facade.error = err;","                            facade.src   = 'Model.savePromise()';","                            instance._lazyFireErrorEvent(facade);","                            reject(new Error(err));","                        };","                        successFunc = function(response) {","                            var parsed;","                            // Lazy publish.","                            if (!instance._saveEvent) {","                                instance._saveEvent = instance.publish(EVT_SAVE, {","                                    preventable: false","                                });","                            }","                            facade.response = response;","                            parsed = PARSED(response);","                            if (parsed.responseText) {","                                // XMLHttpRequest","                                parsed = parsed.responseText;","                            }","                            facade.parsed = parsed;","                            instance.setAttrs(parsed, options);","                            instance.changed = {};","                            instance.fire(EVT_SAVE, facade);","                            resolve(response);","                        };","                        usedmethod = instance.isNew() ? 'create' : 'update';","                        if (instance.syncPromise) {","                            // use the syncPromise-layer","                            instance._syncTimeoutPromise(usedmethod, options).then(","                                successFunc,","                                errFunc","                            );","                        }","                        else {","                            instance.sync(usedmethod, options, function (err, response) {","                                if (err) {","                                    errFunc(err);","                                }","                                else {","                                    successFunc(response);","                                }","                            });","                        }","                    }","                });","            });","        },","","      /**","         * Destroys this model instance and removes it from its containing lists, if any.","         *","         * The _callback_, if one is provided, will be called after the model is","         * destroyed.","         *","         * If `options.remove` is `true`, then this method delegates to the `sync()`","         * method to delete the model from the persistence layer, which is an","         * asynchronous action. In this case, the _callback_ (if provided) will be","         * called after the sync layer indicates success or failure of the delete","         * operation.","         *","         * @method destroyPromise","         * @param {Object} [options] Options to be passed to `sync()`. It's up to the custom sync","         *                 implementation to determine what options it supports or requires, if any.","         * @return {Y.Promise} promised response --> resolve(response) OR reject(reason).","        **/","        destroyPromise: function (options) {","            var instance = this;","","            options = options || {};","            return new Y.Promise(function (resolve, reject) {","                var errFunc, successFunc, finish;","                finish = function() {","                    YArray.each(instance.lists.concat(), function (list) {","                        list.remove(instance, options);","                    });","                };","                if (options.remove || options['delete']) {","                    errFunc = function(err) {","                        var facade = {","                            error   : err,","                            src     : 'Model.destroyPromise()',","                            options : options","                        };","                        instance._lazyFireErrorEvent(facade);","                        reject(new Error(err));","                    };","                    successFunc = function(response) {","                        finish();","                        resolve(response);","                    };","                    if (instance.syncPromise) {","                        // use the syncPromise-layer","                        instance._syncTimeoutPromise('delete', options).then(","                            successFunc,","                            errFunc","                        );","                    }","                    else {","                        instance.sync('delete', options, function (err, response) {","                            if (err) {","                                errFunc(err);","                            }","                            else {","                                successFunc(response);","                            }","                        });","                    }","                } else {","                    finish();","                    resolve();","                }","            }).then(","                function() {","                    // if succeeded, destroy the Model's instance","                    Y.Model.superclass.destroy.call(instance);","                }","            );","        },","","       /**","        * Fires the 'error'-event and -if not published yet- publish it broadcasted to Y.","        * Because the error-event is broadcasted to Y, it can be catched by gallery-itsaerrorreporter.","        *","        * @method _lazyFireErrorEvent","         * @param {Object} [facade] eventfacade.","         * @private","        **/","        _lazyFireErrorEvent : function(facade) {","            var instance = this;","","            // lazy publish","            if (!instance._errorEvent) {","                instance._errorEvent = instance.publish(EVT_ERROR, {","                    broadcast: 1","                });","            }","            instance.fire(EVT_ERROR, facade);","        }","","    }, true);","","    Y.ITSAModelSyncPromise = ITSAModelSyncPromise;","","    Y.Base.mix(Y.Model, [ITSAModelSyncPromise]);","","}, '@VERSION@', {\"requires\": [\"yui-base\", \"base-base\", \"base-build\", \"node-base\", \"json-parse\", \"promise\", \"model\"]});","","}());"]};
}
var __cov_XDpPLj7Fz_gPyxqtPO4DtQ = __coverage__['build/gallery-itsamodelsyncpromise/gallery-itsamodelsyncpromise.js'];
__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['1']++;YUI.add('gallery-itsamodelsyncpromise',function(Y,NAME){'use strict';__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['1']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['2']++;var YArray=Y.Array,EVT_ERROR='error',EVT_SUBMIT='submit',EVT_LOAD='load',EVT_SAVE='save',PARSED=function(response){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['2']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['3']++;if(typeof response==='string'){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['1'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['4']++;try{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['5']++;return Y.JSON.parse(response);}catch(ex){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['6']++;this.fire(EVT_ERROR,{error:ex,response:response,src:'parse'});__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['7']++;return null;}}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['1'][1]++;}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['8']++;return response;};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['9']++;function ITSAModelSyncPromise(){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['3']++;}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['10']++;Y.mix(ITSAModelSyncPromise.prototype,{_syncTimeoutPromise:function(action,options){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['4']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['11']++;var instance=this,syncpromise;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['12']++;syncpromise=instance.syncPromise(action,options);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['13']++;if(!(syncpromise instanceof Y.Promise)){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['2'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['14']++;syncpromise=new Y.Promise(function(resolve,reject){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['5']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['15']++;var errormessage='syncPromise is rejected --> '+action+' not defined as a Promise inside syncPromise()';__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['16']++;reject(new Error(errormessage));});}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['2'][1]++;}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['17']++;return syncpromise;},submitPromise:function(options){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['6']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['18']++;var instance=this;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['19']++;options=(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['3'][0]++,options)||(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['3'][1]++,{});__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['20']++;return new Y.Promise(function(resolve,reject){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['7']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['21']++;var errFunc,successFunc,facade={options:options};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['22']++;errFunc=function(err){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['8']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['23']++;facade.error=err;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['24']++;facade.src='Model.submitPromise()';__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['25']++;instance._lazyFireErrorEvent(facade);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['26']++;reject(new Error(err));};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['27']++;successFunc=function(response){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['9']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['28']++;if(!instance._submitEvent){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['4'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['29']++;instance._submitEvent=instance.publish(EVT_SUBMIT,{preventable:false});}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['4'][1]++;}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['30']++;facade.response=response;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['31']++;instance.fire(EVT_SUBMIT,facade);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['32']++;resolve(response);};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['33']++;if(instance.syncPromise){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['5'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['34']++;instance._syncTimeoutPromise('submit',options).then(successFunc,errFunc);}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['5'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['35']++;instance.sync('submit',options,function(err,response){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['10']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['36']++;if(err){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['6'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['37']++;errFunc(err);}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['6'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['38']++;successFunc(response);}});}});},loadPromise:function(options){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['11']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['39']++;var instance=this;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['40']++;options=(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['7'][0]++,options)||(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['7'][1]++,{});__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['41']++;return new Y.Promise(function(resolve,reject){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['12']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['42']++;var errFunc,successFunc,facade={options:options};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['43']++;errFunc=function(err){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['13']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['44']++;facade.error=err;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['45']++;facade.src='Model.loadPromise()';__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['46']++;instance._lazyFireErrorEvent(facade);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['47']++;reject(new Error(err));};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['48']++;successFunc=function(response){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['14']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['49']++;var parsed;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['50']++;if(!instance._loadEvent){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['8'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['51']++;instance._loadEvent=instance.publish(EVT_LOAD,{preventable:false});}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['8'][1]++;}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['52']++;facade.response=response;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['53']++;parsed=PARSED(response);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['54']++;if(parsed.responseText){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['9'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['55']++;parsed=parsed.responseText;}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['9'][1]++;}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['56']++;facade.parsed=parsed;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['57']++;instance.setAttrs(parsed,options);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['58']++;instance.changed={};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['59']++;instance.fire(EVT_LOAD,facade);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['60']++;resolve(response);};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['61']++;if(instance.syncPromise){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['10'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['62']++;instance._syncTimeoutPromise('read',options).then(successFunc,errFunc);}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['10'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['63']++;instance.sync('read',options,function(err,response){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['15']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['64']++;if(err){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['11'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['65']++;errFunc(err);}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['11'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['66']++;successFunc(response);}});}});},savePromise:function(options){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['16']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['67']++;var instance=this;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['68']++;options=(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['12'][0]++,options)||(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['12'][1]++,{});__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['69']++;return new Y.Promise(function(resolve,reject){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['17']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['70']++;var errFunc,successFunc,usedmethod,facade={options:options};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['71']++;instance._validate(instance.toJSON(),function(validateErr){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['18']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['72']++;if(validateErr){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['13'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['73']++;facade.error=validateErr;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['74']++;facade.src='Model.savePromise() - validate';__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['75']++;instance._lazyFireErrorEvent(facade);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['76']++;reject(new Error(validateErr));}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['13'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['77']++;errFunc=function(err){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['19']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['78']++;facade.error=err;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['79']++;facade.src='Model.savePromise()';__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['80']++;instance._lazyFireErrorEvent(facade);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['81']++;reject(new Error(err));};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['82']++;successFunc=function(response){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['20']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['83']++;var parsed;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['84']++;if(!instance._saveEvent){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['14'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['85']++;instance._saveEvent=instance.publish(EVT_SAVE,{preventable:false});}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['14'][1]++;}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['86']++;facade.response=response;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['87']++;parsed=PARSED(response);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['88']++;if(parsed.responseText){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['15'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['89']++;parsed=parsed.responseText;}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['15'][1]++;}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['90']++;facade.parsed=parsed;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['91']++;instance.setAttrs(parsed,options);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['92']++;instance.changed={};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['93']++;instance.fire(EVT_SAVE,facade);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['94']++;resolve(response);};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['95']++;usedmethod=instance.isNew()?(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['16'][0]++,'create'):(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['16'][1]++,'update');__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['96']++;if(instance.syncPromise){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['17'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['97']++;instance._syncTimeoutPromise(usedmethod,options).then(successFunc,errFunc);}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['17'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['98']++;instance.sync(usedmethod,options,function(err,response){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['21']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['99']++;if(err){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['18'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['100']++;errFunc(err);}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['18'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['101']++;successFunc(response);}});}}});});},destroyPromise:function(options){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['22']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['102']++;var instance=this;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['103']++;options=(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['19'][0]++,options)||(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['19'][1]++,{});__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['104']++;return new Y.Promise(function(resolve,reject){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['23']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['105']++;var errFunc,successFunc,finish;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['106']++;finish=function(){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['24']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['107']++;YArray.each(instance.lists.concat(),function(list){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['25']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['108']++;list.remove(instance,options);});};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['109']++;if((__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['21'][0]++,options.remove)||(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['21'][1]++,options['delete'])){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['20'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['110']++;errFunc=function(err){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['26']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['111']++;var facade={error:err,src:'Model.destroyPromise()',options:options};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['112']++;instance._lazyFireErrorEvent(facade);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['113']++;reject(new Error(err));};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['114']++;successFunc=function(response){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['27']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['115']++;finish();__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['116']++;resolve(response);};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['117']++;if(instance.syncPromise){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['22'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['118']++;instance._syncTimeoutPromise('delete',options).then(successFunc,errFunc);}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['22'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['119']++;instance.sync('delete',options,function(err,response){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['28']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['120']++;if(err){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['23'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['121']++;errFunc(err);}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['23'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['122']++;successFunc(response);}});}}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['20'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['123']++;finish();__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['124']++;resolve();}}).then(function(){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['29']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['125']++;Y.Model.superclass.destroy.call(instance);});},_lazyFireErrorEvent:function(facade){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['30']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['126']++;var instance=this;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['127']++;if(!instance._errorEvent){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['24'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['128']++;instance._errorEvent=instance.publish(EVT_ERROR,{broadcast:1});}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['24'][1]++;}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['129']++;instance.fire(EVT_ERROR,facade);}},true);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['130']++;Y.ITSAModelSyncPromise=ITSAModelSyncPromise;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['131']++;Y.Base.mix(Y.Model,[ITSAModelSyncPromise]);},'@VERSION@',{'requires':['yui-base','base-base','base-build','node-base','json-parse','promise','model']});
