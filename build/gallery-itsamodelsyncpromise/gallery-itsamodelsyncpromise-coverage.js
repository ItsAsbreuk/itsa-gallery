if (typeof __coverage__ === 'undefined') { __coverage__ = {}; }
if (!__coverage__['build/gallery-itsamodelsyncpromise/gallery-itsamodelsyncpromise.js']) {
   __coverage__['build/gallery-itsamodelsyncpromise/gallery-itsamodelsyncpromise.js'] = {"path":"build/gallery-itsamodelsyncpromise/gallery-itsamodelsyncpromise.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":40},"end":{"line":1,"column":59}}},"2":{"name":"(anonymous_2)","line":106,"loc":{"start":{"line":106,"column":9},"end":{"line":106,"column":29}}},"3":{"name":"(anonymous_3)","line":143,"loc":{"start":{"line":143,"column":27},"end":{"line":143,"column":55}}},"4":{"name":"(anonymous_4)","line":147,"loc":{"start":{"line":147,"column":8},"end":{"line":147,"column":27}}},"5":{"name":"(anonymous_5)","line":152,"loc":{"start":{"line":152,"column":8},"end":{"line":152,"column":22}}},"6":{"name":"(anonymous_6)","line":161,"loc":{"start":{"line":161,"column":37},"end":{"line":161,"column":49}}},"7":{"name":"(anonymous_7)","line":167,"loc":{"start":{"line":167,"column":33},"end":{"line":167,"column":45}}},"8":{"name":"(anonymous_8)","line":179,"loc":{"start":{"line":179,"column":13},"end":{"line":179,"column":24}}},"9":{"name":"(anonymous_9)","line":180,"loc":{"start":{"line":180,"column":45},"end":{"line":180,"column":61}}},"10":{"name":"(anonymous_10)","line":186,"loc":{"start":{"line":186,"column":18},"end":{"line":186,"column":32}}},"11":{"name":"(anonymous_11)","line":196,"loc":{"start":{"line":196,"column":22},"end":{"line":196,"column":41}}},"12":{"name":"(anonymous_12)","line":209,"loc":{"start":{"line":209,"column":45},"end":{"line":209,"column":70}}},"13":{"name":"(anonymous_13)","line":243,"loc":{"start":{"line":243,"column":34},"end":{"line":243,"column":53}}},"14":{"name":"(anonymous_14)","line":247,"loc":{"start":{"line":247,"column":28},"end":{"line":247,"column":55}}},"15":{"name":"(anonymous_15)","line":259,"loc":{"start":{"line":259,"column":8},"end":{"line":259,"column":29}}},"16":{"name":"(anonymous_16)","line":300,"loc":{"start":{"line":300,"column":24},"end":{"line":300,"column":52}}},"17":{"name":"(anonymous_17)","line":305,"loc":{"start":{"line":305,"column":8},"end":{"line":305,"column":27}}},"18":{"name":"(anonymous_18)","line":310,"loc":{"start":{"line":310,"column":8},"end":{"line":310,"column":22}}},"19":{"name":"(anonymous_19)","line":339,"loc":{"start":{"line":339,"column":31},"end":{"line":339,"column":50}}},"20":{"name":"(anonymous_20)","line":344,"loc":{"start":{"line":344,"column":28},"end":{"line":344,"column":55}}},"21":{"name":"(anonymous_21)","line":349,"loc":{"start":{"line":349,"column":18},"end":{"line":349,"column":32}}},"22":{"name":"(anonymous_22)","line":355,"loc":{"start":{"line":355,"column":22},"end":{"line":355,"column":41}}},"23":{"name":"(anonymous_23)","line":383,"loc":{"start":{"line":383,"column":43},"end":{"line":383,"column":68}}},"24":{"name":"(anonymous_24)","line":463,"loc":{"start":{"line":463,"column":32},"end":{"line":463,"column":53}}},"25":{"name":"(anonymous_25)","line":467,"loc":{"start":{"line":467,"column":39},"end":{"line":467,"column":58}}},"26":{"name":"(anonymous_26)","line":469,"loc":{"start":{"line":469,"column":22},"end":{"line":469,"column":38}}},"27":{"name":"(anonymous_27)","line":472,"loc":{"start":{"line":472,"column":53},"end":{"line":472,"column":65}}},"28":{"name":"(anonymous_28)","line":493,"loc":{"start":{"line":493,"column":73},"end":{"line":493,"column":88}}},"29":{"name":"(anonymous_29)","line":497,"loc":{"start":{"line":497,"column":65},"end":{"line":497,"column":78}}},"30":{"name":"(anonymous_30)","line":506,"loc":{"start":{"line":506,"column":30},"end":{"line":506,"column":45}}},"31":{"name":"(anonymous_31)","line":510,"loc":{"start":{"line":510,"column":8},"end":{"line":510,"column":25}}},"32":{"name":"(anonymous_32)","line":519,"loc":{"start":{"line":519,"column":23},"end":{"line":519,"column":39}}},"33":{"name":"(anonymous_33)","line":549,"loc":{"start":{"line":549,"column":24},"end":{"line":549,"column":52}}},"34":{"name":"(anonymous_34)","line":554,"loc":{"start":{"line":554,"column":8},"end":{"line":554,"column":27}}},"35":{"name":"(anonymous_35)","line":559,"loc":{"start":{"line":559,"column":8},"end":{"line":559,"column":22}}},"36":{"name":"(anonymous_36)","line":589,"loc":{"start":{"line":589,"column":31},"end":{"line":589,"column":50}}},"37":{"name":"(anonymous_37)","line":595,"loc":{"start":{"line":595,"column":28},"end":{"line":595,"column":55}}},"38":{"name":"(anonymous_38)","line":601,"loc":{"start":{"line":601,"column":46},"end":{"line":601,"column":69}}},"39":{"name":"(anonymous_39)","line":609,"loc":{"start":{"line":609,"column":26},"end":{"line":609,"column":40}}},"40":{"name":"(anonymous_40)","line":615,"loc":{"start":{"line":615,"column":30},"end":{"line":615,"column":49}}},"41":{"name":"(anonymous_41)","line":643,"loc":{"start":{"line":643,"column":55},"end":{"line":643,"column":80}}},"42":{"name":"(anonymous_42)","line":681,"loc":{"start":{"line":681,"column":39},"end":{"line":681,"column":56}}},"43":{"name":"(anonymous_43)","line":705,"loc":{"start":{"line":705,"column":39},"end":{"line":705,"column":65}}},"44":{"name":"(anonymous_44)","line":711,"loc":{"start":{"line":711,"column":36},"end":{"line":711,"column":63}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":719,"column":118}},"2":{"start":{"line":32,"column":0},"end":{"line":120,"column":2}},"3":{"start":{"line":107,"column":4},"end":{"line":118,"column":5}},"4":{"start":{"line":108,"column":8},"end":{"line":117,"column":9}},"5":{"start":{"line":109,"column":12},"end":{"line":109,"column":42}},"6":{"start":{"line":111,"column":12},"end":{"line":115,"column":15}},"7":{"start":{"line":116,"column":12},"end":{"line":116,"column":22}},"8":{"start":{"line":119,"column":4},"end":{"line":119,"column":26}},"9":{"start":{"line":143,"column":0},"end":{"line":159,"column":2}},"10":{"start":{"line":144,"column":4},"end":{"line":144,"column":24}},"11":{"start":{"line":146,"column":4},"end":{"line":157,"column":6}},"12":{"start":{"line":149,"column":12},"end":{"line":149,"column":55}},"13":{"start":{"line":154,"column":12},"end":{"line":154,"column":50}},"14":{"start":{"line":158,"column":4},"end":{"line":158,"column":20}},"15":{"start":{"line":161,"column":0},"end":{"line":164,"column":2}},"16":{"start":{"line":162,"column":0},"end":{"line":162,"column":48}},"17":{"start":{"line":163,"column":4},"end":{"line":163,"column":51}},"18":{"start":{"line":167,"column":0},"end":{"line":225,"column":2}},"19":{"start":{"line":169,"column":4},"end":{"line":169,"column":24}},"20":{"start":{"line":172,"column":4},"end":{"line":177,"column":37}},"21":{"start":{"line":179,"column":4},"end":{"line":183,"column":6}},"22":{"start":{"line":180,"column":8},"end":{"line":182,"column":11}},"23":{"start":{"line":181,"column":12},"end":{"line":181,"column":43}},"24":{"start":{"line":185,"column":4},"end":{"line":223,"column":5}},"25":{"start":{"line":186,"column":8},"end":{"line":195,"column":10}},"26":{"start":{"line":187,"column":12},"end":{"line":191,"column":14}},"27":{"start":{"line":192,"column":12},"end":{"line":192,"column":49}},"28":{"start":{"line":193,"column":0},"end":{"line":193,"column":37}},"29":{"start":{"line":194,"column":12},"end":{"line":194,"column":42}},"30":{"start":{"line":196,"column":8},"end":{"line":200,"column":10}},"31":{"start":{"line":197,"column":12},"end":{"line":197,"column":21}},"32":{"start":{"line":198,"column":0},"end":{"line":198,"column":41}},"33":{"start":{"line":199,"column":12},"end":{"line":199,"column":37}},"34":{"start":{"line":201,"column":8},"end":{"line":218,"column":9}},"35":{"start":{"line":203,"column":12},"end":{"line":206,"column":14}},"36":{"start":{"line":209,"column":12},"end":{"line":217,"column":15}},"37":{"start":{"line":210,"column":0},"end":{"line":210,"column":31}},"38":{"start":{"line":211,"column":16},"end":{"line":216,"column":17}},"39":{"start":{"line":212,"column":20},"end":{"line":212,"column":33}},"40":{"start":{"line":215,"column":20},"end":{"line":215,"column":42}},"41":{"start":{"line":220,"column":8},"end":{"line":220,"column":17}},"42":{"start":{"line":221,"column":0},"end":{"line":221,"column":63}},"43":{"start":{"line":222,"column":8},"end":{"line":222,"column":25}},"44":{"start":{"line":224,"column":4},"end":{"line":224,"column":21}},"45":{"start":{"line":243,"column":0},"end":{"line":273,"column":2}},"46":{"start":{"line":244,"column":4},"end":{"line":245,"column":61}},"47":{"start":{"line":247,"column":4},"end":{"line":250,"column":7}},"48":{"start":{"line":248,"column":8},"end":{"line":248,"column":33}},"49":{"start":{"line":249,"column":8},"end":{"line":249,"column":31}},"50":{"start":{"line":251,"column":4},"end":{"line":255,"column":6}},"51":{"start":{"line":257,"column":4},"end":{"line":262,"column":6}},"52":{"start":{"line":260,"column":12},"end":{"line":260,"column":38}},"53":{"start":{"line":265,"column":4},"end":{"line":270,"column":7}},"54":{"start":{"line":271,"column":4},"end":{"line":271,"column":41}},"55":{"start":{"line":272,"column":4},"end":{"line":272,"column":19}},"56":{"start":{"line":300,"column":0},"end":{"line":317,"column":2}},"57":{"start":{"line":301,"column":4},"end":{"line":301,"column":24}},"58":{"start":{"line":304,"column":4},"end":{"line":315,"column":6}},"59":{"start":{"line":307,"column":12},"end":{"line":307,"column":55}},"60":{"start":{"line":312,"column":12},"end":{"line":312,"column":50}},"61":{"start":{"line":316,"column":4},"end":{"line":316,"column":20}},"62":{"start":{"line":339,"column":0},"end":{"line":395,"column":2}},"63":{"start":{"line":340,"column":4},"end":{"line":341,"column":16}},"64":{"start":{"line":343,"column":4},"end":{"line":343,"column":28}},"65":{"start":{"line":344,"column":4},"end":{"line":392,"column":7}},"66":{"start":{"line":345,"column":8},"end":{"line":348,"column":16}},"67":{"start":{"line":349,"column":8},"end":{"line":354,"column":10}},"68":{"start":{"line":350,"column":12},"end":{"line":350,"column":31}},"69":{"start":{"line":351,"column":12},"end":{"line":351,"column":49}},"70":{"start":{"line":352,"column":12},"end":{"line":352,"column":49}},"71":{"start":{"line":353,"column":12},"end":{"line":353,"column":35}},"72":{"start":{"line":355,"column":8},"end":{"line":374,"column":10}},"73":{"start":{"line":356,"column":12},"end":{"line":356,"column":23}},"74":{"start":{"line":358,"column":12},"end":{"line":362,"column":13}},"75":{"start":{"line":359,"column":16},"end":{"line":361,"column":19}},"76":{"start":{"line":363,"column":12},"end":{"line":363,"column":39}},"77":{"start":{"line":364,"column":12},"end":{"line":364,"column":38}},"78":{"start":{"line":365,"column":12},"end":{"line":368,"column":13}},"79":{"start":{"line":367,"column":16},"end":{"line":367,"column":45}},"80":{"start":{"line":369,"column":12},"end":{"line":369,"column":35}},"81":{"start":{"line":370,"column":12},"end":{"line":370,"column":47}},"82":{"start":{"line":371,"column":12},"end":{"line":371,"column":34}},"83":{"start":{"line":372,"column":12},"end":{"line":372,"column":44}},"84":{"start":{"line":373,"column":12},"end":{"line":373,"column":30}},"85":{"start":{"line":375,"column":8},"end":{"line":391,"column":9}},"86":{"start":{"line":377,"column":12},"end":{"line":380,"column":14}},"87":{"start":{"line":383,"column":12},"end":{"line":390,"column":15}},"88":{"start":{"line":384,"column":16},"end":{"line":389,"column":17}},"89":{"start":{"line":385,"column":20},"end":{"line":385,"column":33}},"90":{"start":{"line":388,"column":20},"end":{"line":388,"column":42}},"91":{"start":{"line":393,"column":4},"end":{"line":393,"column":90}},"92":{"start":{"line":394,"column":4},"end":{"line":394,"column":19}},"93":{"start":{"line":463,"column":0},"end":{"line":522,"column":2}},"94":{"start":{"line":464,"column":4},"end":{"line":465,"column":46}},"95":{"start":{"line":467,"column":4},"end":{"line":467,"column":74}},"96":{"start":{"line":467,"column":60},"end":{"line":467,"column":70}},"97":{"start":{"line":469,"column":4},"end":{"line":517,"column":6}},"98":{"start":{"line":470,"column":8},"end":{"line":470,"column":48}},"99":{"start":{"line":472,"column":8},"end":{"line":516,"column":11}},"100":{"start":{"line":473,"column":12},"end":{"line":473,"column":38}},"101":{"start":{"line":475,"column":12},"end":{"line":478,"column":23}},"102":{"start":{"line":480,"column":16},"end":{"line":480,"column":46}},"103":{"start":{"line":481,"column":16},"end":{"line":481,"column":52}},"104":{"start":{"line":483,"column":12},"end":{"line":488,"column":13}},"105":{"start":{"line":484,"column":16},"end":{"line":487,"column":17}},"106":{"start":{"line":486,"column":20},"end":{"line":486,"column":56}},"107":{"start":{"line":492,"column":12},"end":{"line":508,"column":19}},"108":{"start":{"line":494,"column":20},"end":{"line":494,"column":33}},"109":{"start":{"line":499,"column":20},"end":{"line":499,"column":46}},"110":{"start":{"line":501,"column":20},"end":{"line":503,"column":21}},"111":{"start":{"line":502,"column":24},"end":{"line":502,"column":60}},"112":{"start":{"line":507,"column":20},"end":{"line":507,"column":33}},"113":{"start":{"line":511,"column":12},"end":{"line":514,"column":14}},"114":{"start":{"line":515,"column":12},"end":{"line":515,"column":49}},"115":{"start":{"line":519,"column":4},"end":{"line":521,"column":6}},"116":{"start":{"line":520,"column":8},"end":{"line":520,"column":40}},"117":{"start":{"line":549,"column":0},"end":{"line":566,"column":2}},"118":{"start":{"line":550,"column":4},"end":{"line":550,"column":24}},"119":{"start":{"line":553,"column":4},"end":{"line":564,"column":6}},"120":{"start":{"line":556,"column":12},"end":{"line":556,"column":55}},"121":{"start":{"line":561,"column":12},"end":{"line":561,"column":50}},"122":{"start":{"line":565,"column":4},"end":{"line":565,"column":20}},"123":{"start":{"line":589,"column":0},"end":{"line":657,"column":2}},"124":{"start":{"line":590,"column":4},"end":{"line":592,"column":16}},"125":{"start":{"line":594,"column":4},"end":{"line":594,"column":28}},"126":{"start":{"line":595,"column":4},"end":{"line":654,"column":7}},"127":{"start":{"line":596,"column":8},"end":{"line":600,"column":16}},"128":{"start":{"line":601,"column":8},"end":{"line":653,"column":11}},"129":{"start":{"line":602,"column":12},"end":{"line":652,"column":13}},"130":{"start":{"line":603,"column":16},"end":{"line":603,"column":43}},"131":{"start":{"line":604,"column":16},"end":{"line":604,"column":62}},"132":{"start":{"line":605,"column":16},"end":{"line":605,"column":53}},"133":{"start":{"line":606,"column":16},"end":{"line":606,"column":47}},"134":{"start":{"line":609,"column":16},"end":{"line":614,"column":18}},"135":{"start":{"line":610,"column":20},"end":{"line":610,"column":39}},"136":{"start":{"line":611,"column":20},"end":{"line":611,"column":57}},"137":{"start":{"line":612,"column":20},"end":{"line":612,"column":57}},"138":{"start":{"line":613,"column":20},"end":{"line":613,"column":43}},"139":{"start":{"line":615,"column":16},"end":{"line":634,"column":18}},"140":{"start":{"line":616,"column":20},"end":{"line":616,"column":31}},"141":{"start":{"line":618,"column":20},"end":{"line":622,"column":21}},"142":{"start":{"line":619,"column":24},"end":{"line":621,"column":27}},"143":{"start":{"line":623,"column":20},"end":{"line":623,"column":47}},"144":{"start":{"line":624,"column":20},"end":{"line":624,"column":46}},"145":{"start":{"line":625,"column":20},"end":{"line":628,"column":21}},"146":{"start":{"line":627,"column":24},"end":{"line":627,"column":53}},"147":{"start":{"line":629,"column":20},"end":{"line":629,"column":43}},"148":{"start":{"line":630,"column":20},"end":{"line":630,"column":55}},"149":{"start":{"line":631,"column":20},"end":{"line":631,"column":42}},"150":{"start":{"line":632,"column":20},"end":{"line":632,"column":52}},"151":{"start":{"line":633,"column":20},"end":{"line":633,"column":38}},"152":{"start":{"line":635,"column":16},"end":{"line":651,"column":17}},"153":{"start":{"line":637,"column":20},"end":{"line":640,"column":22}},"154":{"start":{"line":643,"column":20},"end":{"line":650,"column":23}},"155":{"start":{"line":644,"column":24},"end":{"line":649,"column":25}},"156":{"start":{"line":645,"column":28},"end":{"line":645,"column":41}},"157":{"start":{"line":648,"column":28},"end":{"line":648,"column":50}},"158":{"start":{"line":655,"column":4},"end":{"line":655,"column":110}},"159":{"start":{"line":656,"column":4},"end":{"line":656,"column":19}},"160":{"start":{"line":681,"column":0},"end":{"line":691,"column":2}},"161":{"start":{"line":682,"column":4},"end":{"line":682,"column":24}},"162":{"start":{"line":685,"column":4},"end":{"line":689,"column":5}},"163":{"start":{"line":686,"column":8},"end":{"line":688,"column":11}},"164":{"start":{"line":690,"column":4},"end":{"line":690,"column":37}},"165":{"start":{"line":705,"column":0},"end":{"line":717,"column":2}},"166":{"start":{"line":706,"column":4},"end":{"line":707,"column":22}},"167":{"start":{"line":709,"column":4},"end":{"line":709,"column":56}},"168":{"start":{"line":710,"column":4},"end":{"line":715,"column":5}},"169":{"start":{"line":711,"column":8},"end":{"line":714,"column":11}},"170":{"start":{"line":712,"column":12},"end":{"line":712,"column":118}},"171":{"start":{"line":713,"column":12},"end":{"line":713,"column":44}},"172":{"start":{"line":716,"column":4},"end":{"line":716,"column":23}}},"branchMap":{"1":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":4},"end":{"line":107,"column":4}},{"start":{"line":107,"column":4},"end":{"line":107,"column":4}}]},"2":{"line":119,"type":"binary-expr","locations":[{"start":{"line":119,"column":11},"end":{"line":119,"column":19}},{"start":{"line":119,"column":23},"end":{"line":119,"column":25}}]},"3":{"line":149,"type":"binary-expr","locations":[{"start":{"line":149,"column":12},"end":{"line":149,"column":20}},{"start":{"line":149,"column":24},"end":{"line":149,"column":54}}]},"4":{"line":154,"type":"binary-expr","locations":[{"start":{"line":154,"column":12},"end":{"line":154,"column":20}},{"start":{"line":154,"column":24},"end":{"line":154,"column":49}}]},"5":{"line":176,"type":"binary-expr","locations":[{"start":{"line":176,"column":17},"end":{"line":176,"column":25}},{"start":{"line":176,"column":29},"end":{"line":176,"column":40}}]},"6":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":4},"end":{"line":185,"column":4}},{"start":{"line":185,"column":4},"end":{"line":185,"column":4}}]},"7":{"line":201,"type":"if","locations":[{"start":{"line":201,"column":8},"end":{"line":201,"column":8}},{"start":{"line":201,"column":8},"end":{"line":201,"column":8}}]},"8":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":16},"end":{"line":211,"column":16}},{"start":{"line":211,"column":16},"end":{"line":211,"column":16}}]},"9":{"line":257,"type":"binary-expr","locations":[{"start":{"line":257,"column":4},"end":{"line":257,"column":11}},{"start":{"line":257,"column":15},"end":{"line":262,"column":5}}]},"10":{"line":307,"type":"binary-expr","locations":[{"start":{"line":307,"column":12},"end":{"line":307,"column":20}},{"start":{"line":307,"column":24},"end":{"line":307,"column":54}}]},"11":{"line":312,"type":"binary-expr","locations":[{"start":{"line":312,"column":12},"end":{"line":312,"column":20}},{"start":{"line":312,"column":24},"end":{"line":312,"column":49}}]},"12":{"line":343,"type":"binary-expr","locations":[{"start":{"line":343,"column":14},"end":{"line":343,"column":21}},{"start":{"line":343,"column":25},"end":{"line":343,"column":27}}]},"13":{"line":358,"type":"if","locations":[{"start":{"line":358,"column":12},"end":{"line":358,"column":12}},{"start":{"line":358,"column":12},"end":{"line":358,"column":12}}]},"14":{"line":365,"type":"if","locations":[{"start":{"line":365,"column":12},"end":{"line":365,"column":12}},{"start":{"line":365,"column":12},"end":{"line":365,"column":12}}]},"15":{"line":375,"type":"if","locations":[{"start":{"line":375,"column":8},"end":{"line":375,"column":8}},{"start":{"line":375,"column":8},"end":{"line":375,"column":8}}]},"16":{"line":384,"type":"if","locations":[{"start":{"line":384,"column":16},"end":{"line":384,"column":16}},{"start":{"line":384,"column":16},"end":{"line":384,"column":16}}]},"17":{"line":483,"type":"if","locations":[{"start":{"line":483,"column":12},"end":{"line":483,"column":12}},{"start":{"line":483,"column":12},"end":{"line":483,"column":12}}]},"18":{"line":492,"type":"cond-expr","locations":[{"start":{"line":493,"column":16},"end":{"line":495,"column":18}},{"start":{"line":497,"column":16},"end":{"line":508,"column":18}}]},"19":{"line":556,"type":"binary-expr","locations":[{"start":{"line":556,"column":12},"end":{"line":556,"column":20}},{"start":{"line":556,"column":24},"end":{"line":556,"column":54}}]},"20":{"line":561,"type":"binary-expr","locations":[{"start":{"line":561,"column":12},"end":{"line":561,"column":20}},{"start":{"line":561,"column":24},"end":{"line":561,"column":49}}]},"21":{"line":591,"type":"cond-expr","locations":[{"start":{"line":591,"column":40},"end":{"line":591,"column":48}},{"start":{"line":591,"column":51},"end":{"line":591,"column":59}}]},"22":{"line":594,"type":"binary-expr","locations":[{"start":{"line":594,"column":14},"end":{"line":594,"column":21}},{"start":{"line":594,"column":25},"end":{"line":594,"column":27}}]},"23":{"line":602,"type":"if","locations":[{"start":{"line":602,"column":12},"end":{"line":602,"column":12}},{"start":{"line":602,"column":12},"end":{"line":602,"column":12}}]},"24":{"line":618,"type":"if","locations":[{"start":{"line":618,"column":20},"end":{"line":618,"column":20}},{"start":{"line":618,"column":20},"end":{"line":618,"column":20}}]},"25":{"line":625,"type":"if","locations":[{"start":{"line":625,"column":20},"end":{"line":625,"column":20}},{"start":{"line":625,"column":20},"end":{"line":625,"column":20}}]},"26":{"line":635,"type":"if","locations":[{"start":{"line":635,"column":16},"end":{"line":635,"column":16}},{"start":{"line":635,"column":16},"end":{"line":635,"column":16}}]},"27":{"line":644,"type":"if","locations":[{"start":{"line":644,"column":24},"end":{"line":644,"column":24}},{"start":{"line":644,"column":24},"end":{"line":644,"column":24}}]},"28":{"line":685,"type":"if","locations":[{"start":{"line":685,"column":4},"end":{"line":685,"column":4}},{"start":{"line":685,"column":4},"end":{"line":685,"column":4}}]},"29":{"line":710,"type":"if","locations":[{"start":{"line":710,"column":4},"end":{"line":710,"column":4}},{"start":{"line":710,"column":4},"end":{"line":710,"column":4}}]}},"code":["(function () { YUI.add('gallery-itsamodelsyncpromise', function (Y, NAME) {","","'use strict';","","/*jshint maxlen:170 */","","/**"," *"," * Extention ITSAModelSyncPromise"," *"," *"," * Extends Y.Model with Promised sync-methods. The synclayer can be made just as usual. But instead of calling"," * Model.load and Model.save and Model.destroy, you can use:"," *"," * <b>Model.loadPromise</b>"," * <b>Model.savePromise</b>"," * <b>Model.submitPromise</b>"," * <b>Model.destroyPromise</b>"," *"," * <b>The sync-layer MUST call the callback-function of its related promise-method, otherwise the promises are not resolved.</b>"," *"," * @module gallery-itsamodelsyncpromise"," * @class Y.Model"," * @constructor"," * @since 0.1"," *"," * <i>Copyright (c) 2013 Marco Asbreuk - http://itsasbreuk.nl</i>"," * YUI BSD License - http://developer.yahoo.com/yui/license.html"," *","*/","","var YModel = Y.Model,","    YObject = Y.Object,","    YArray = Y.Array,","    START = 'start',","    DESTROY = 'destroy',","/**"," * Fired when an error occurs, such as when an attribute (or property) doesn't validate or when"," * the sync layer submit-function returns an error."," * @event error"," * @param e {EventFacade} Event Facade including:"," * @param e.error {any} Error message."," * @param e.src {String} Source of the error. May be one of the following (or any"," *                     custom error source defined by a Model subclass):"," *"," * `submit`: An error submitting the model from within a sync layer."," *"," * `attributevalidation`: An error validating an attribute (or property). The attribute (or objectproperty)"," *                        that failed validation will be provided as the `attribute` property on the event facade."," *"," * @param e.attribute {String} The attribute/property that failed validation."," * @param e.validationerror {String} The errormessage in case of attribute-validation error.","**/","EVT_ERROR = 'error',","","/**"," * Fired after model is read from the sync layer."," * @event load"," * @param e {EventFacade} Event Facade including:"," * @param [e.options] {Object} The options=object that was passed to the sync-layer, if there was one."," * @param [e.response] {any} The sync layer's raw, unparsed response to the submit-request, if there was one."," * @since 0.1","**/","EVT_LOAD = 'load',","","/**"," * Fired after model is saved through the sync layer."," * @event save"," * @param e {EventFacade} Event Facade including:"," * @param [e.options] {Object} The options=object that was passed to the sync-layer, if there was one."," * @param [e.parsed] {Object} The parsed version of the sync layer's response to the save-request, if there was a response."," * @param [e.response] {any} The sync layer's raw, unparsed response to the save-request, if there was one."," * @since 0.1","**/","EVT_SAVE = 'save',","","/**"," * Fired before the model is read from the sync layer, right after a user calls 'load' or 'loadPromise'."," * If you want to keep track when the load is finished, you should examine e.promise. This is the prefered way above listening to the 'load'-event,"," * because subscribing to the load-event doesn't hold reference to this particular load-call."," *"," * @event loadstart"," * @param e {EventFacade} Event Facade including:"," * @param e.target {Y.Model} instance that fired the event."," * @param e.promise {Y.Promise} returned response --> resolve(response) OR reject(reason). (examine reason.message)."," * @param [e.options] {Object} The options=object that was passed to the sync-layer, if there was one."," * @since 0.2","**/","EVT_LOAD_START = EVT_LOAD+START,","","/**"," * Fired before the model is saved through the sync layer, right after a user calls 'save' or 'savePromise'."," * If you want to keep track when saving is finished, you should examine e.promise. This is the prefered way above listening to the 'save'-event,"," * because subscribing to the save-event doesn't hold reference to this particular save-call."," *"," * @event savestart"," * @param e {EventFacade} Event Facade including:"," * @param e.target {Y.Model} instance that fired the event."," * @param e.promise {Y.Promise} returned response --> resolve(response) OR reject(reason). (examine reason.message)."," * @param e.method {String} either 'create' or 'update', depending on the state of the Model-instance ('create' when isNew())"," * @param [e.options] {Object} The options=object that was passed to the sync-layer, if there was one."," * @since 0.2","**/","EVT_SAVE_START = EVT_SAVE+START,","","PARSED = function (response) {","    if (typeof response === 'string') {","        try {","            return Y.JSON.parse(response);","        } catch (ex) {","            this.fire(EVT_ERROR, {","                error   : ex,","                response: response,","                src     : 'parse'","            });","            return {};","        }","    }","    return response || {};","};","","// -- Mixing extra Methods to Y.Model -----------------------------------","","/**","  * Destroys this model instance and removes it from its containing lists, if any. The 'callback', if one is provided,","  * will be called after the model is destroyed.<br /><br />","  * If `options.remove` is `true`, then this method delegates to the `sync()` method to delete the model from the persistence layer, which is an","  * asynchronous action. In this case, the 'callback' (if provided) will be called after the sync layer indicates success or failure of the delete operation.","  * <br /><br />","  * To keep track of the proccess, it is preferable to use <b>destroyPromise()</b>.<br />","  * This method will fire 2 events: 'destroystart' before syncing and 'destroy' or 'error' after syncing.","  * <br /><br />","  * <b>CAUTION</b> The sync-method with action 'destroy' <b>must call its callback-function</b> in order to work as espected!","  *","  * @method destroy","  * @param {Object} [options] Sync options. It's up to the custom sync implementation to determine what options it supports or requires, if any.","  *   @param {Boolean} [options.remove=false] If `true`, the model will be deleted via the sync layer in addition to the instance being destroyed.","  * @param {callback} [callback] Called after the model has been destroyed (and deleted via the sync layer if `options.remove` is `true`).","  *   @param {Error|null} callback.err If an error occurred, this parameter will contain the error. Otherwise 'err' will be null.","  *   @param {Any} callback.response The server's response. This value will be passed to the `parse()` method, which is expected to parse it and return an attribute hash.","  * @chainable","*/","YModel.prototype.destroy = function(options, callback) {","    var instance = this;","    // by overwriting the default 'save'-method we manage to fire 'destroystart'-event.","    instance.destroyPromise(options).then(","        function(response) {","/*jshint expr:true */","            callback && callback.apply(null, response);","/*jshint expr:false */","        },","        function(err) {","/*jshint expr:true */","            callback && callback.apply(null, err);","/*jshint expr:false */","        }","    );","    return instance;","};","","YModel.prototype._prevDefFnDestroy = function(e) {","console.log('model destroy preventdefaultFunc');","    e.promiseReject(new Error('preventDefaulted'));","};","","//_defDestroyFn is overridden from Y.Base","YModel.prototype._defDestroyFn = function(e) {","    // first the destruction through Base needs to be done","    this._baseDestroy();","","    // now the code typically for Model:","    var instance = this,","        promiseResolve = e.promiseResolve,","        promiseReject = e.promiseReject,","        options = e.options,","        remove = e.remove || e['delete'],","        errFunc, successFunc, finish;","","    finish = function() {","        YArray.each(instance.lists.concat(), function (list) {","            list.remove(instance, options);","        });","    };","    // next the typical Model-destroy-code:","    if (remove) {","        errFunc = function(err) {","            var facade = {","                error   : err,","                src     : 'Model.destroyPromise()',","                options : options","            };","            instance._lazyFireErrorEvent(facade);","console.log('model destroy error..');","            promiseReject(new Error(err));","        };","        successFunc = function(response) {","            finish();","console.log('resoving model destroy...');","            promiseResolve(response);","        };","        if (instance.syncPromise) {","            // use the syncPromise-layer","            instance._syncTimeoutPromise('delete', options).then(","                successFunc,","                errFunc","            );","        }","        else {","            instance.sync('delete', options, function (err, response) {","console.log('callback delete');","                if (err) {","                    errFunc(err);","                }","                else {","                    successFunc(response);","                }","            });","        }","    } else {","        finish();","console.log('model destroy about to resolve without remove..');","        promiseResolve();","    }","    return e.promise;","};","","/**"," * Destroys this model instance and removes it from its containing lists, if any."," * <br /><br />"," * If `options.remove` is `true`, then this method delegates to the `sync()`"," * method to delete the model from the persistence layer, which is an"," * asynchronous action."," * <br /><br />"," * This method will also fire 2 events: 'destroystart' before syncing and 'destroy' or 'error' after syncing.<br />"," * <br /><br />"," * <b>CAUTION</b> The sync-method with action 'destroy' <b>must call its callback-function</b> in order to work as espected!"," *"," * @method destroyPromise"," * @param {Object} [options] Options to be passed to `sync()`. It's up to the custom sync"," *                 implementation to determine what options it supports or requires, if any."," * @return {Y.Promise} promised response --> resolve(response) OR reject(reason). (examine reason.message).","**/","YModel.prototype.destroyPromise = function (options) {","    var instance = this,","        promise, promiseResolve, promiseReject, extraOptions;","","    promise = new Y.Promise(function (resolve, reject) {","        promiseResolve = resolve;","        promiseReject = reject;","    });","    extraOptions = {","        promise: promise,","        promiseResolve: promiseResolve,","        promiseReject: promiseReject","    };","/*jshint expr:true */","    options && YObject.each(","        options,","        function(value, key) {","            extraOptions[key] = value;","        }","    );","/*jshint expr:false */","    // lazy publish the destroy-event","    instance.publishAsync(DESTROY, {","        defaultTargetOnly: true,","        emitFacade: true,","        defaultFn: instance._defDestroyFn,","        preventedFn: instance._prevDefFnDestroy","    });","    instance.fire(DESTROY, extraOptions);","    return promise;","};","","/**","  * Loads this model from the server.<br />","  * This method delegates to the `sync()` method to perform the actual load","  * operation, which is an asynchronous action. Specify a 'callback' function to","  * be notified of success or failure.","  * <br /><br />","  * A successful load operation will fire a `load` event, while an unsuccessful","  * load operation will fire an `error` event with the `src` value \"load\".","  * <br /><br />","  * If the load operation succeeds and one or more of the loaded attributes","  * differ from this model's current attributes, a `change` event will be fired.","  * <br /><br />","  * To keep track of the proccess, it is preferable to use <b>loadPromise()</b>.<br />","  * This method will fire 2 events: 'loadstart' before syncing and 'load' or 'error' after syncing.","  * <br /><br />","  * <b>CAUTION</b> The sync-method with action 'load' <b>must call its callback-function</b> in order to work as espected!","  *","  * @method load","  * @param {Object} [options] Options to be passed to `sync()` and to `set()` when setting the loaded attributes.","  *                           It's up to the custom sync implementation to determine what options it supports or requires, if any.","  * @param {callback} [callback] Called when the sync operation finishes.","  *   @param {Error|null} callback.err If an error occurred, this parameter will contain the error. If the sync operation succeeded, 'err' will be null.","  *   @param {Any} callback.response The server's response. This value will be passed to the `parse()` method, which is expected to parse it and return an attribute hash.","  * @chainable"," */","YModel.prototype.load = function(options, callback) {","    var instance = this;","","    // by overwriting the default 'save'-method we manage to fire 'loadstart'-event.","    instance.loadPromise(options).then(","        function(response) {","/*jshint expr:true */","            callback && callback.apply(null, response);","/*jshint expr:false */","        },","        function(err) {","/*jshint expr:true */","            callback && callback.apply(null, err);","/*jshint expr:false */","        }","    );","    return instance;","};","","/**"," * Loads this model from the server."," * <br /><br />"," * This method delegates to the `sync()` method to perform the actual load"," * operation, which is an asynchronous action."," * <br /><br />"," * This method will also fire 2 events: 'loadstart' before syncing and 'load' or 'error' after syncing.<br />"," * A successful load operation will alsoe fire a `load` event, while an unsuccessful"," * load operation will fire an `error` event with the `src` value \"load\"."," * <br /><br />"," * If the load operation succeeds and one or more of the loaded attributes"," * differ from this model's current attributes, a `change` event will be fired."," * <br /><br />"," * <b>CAUTION</b> The sync-method with action 'load' <b>must call its callback-function</b> in order to work as espected!"," *"," * @method loadPromise"," * @param {Object} [options] Options to be passed to `sync()`. It's up to the custom sync"," *                 implementation to determine what options it supports or requires, if any."," * @return {Y.Promise} promised response --> resolve(response) OR reject(reason) (examine reason.message).","**/","YModel.prototype.loadPromise = function (options) {","    var instance = this,","        promise;","","    options = options || {};","    promise = new Y.Promise(function (resolve, reject) {","        var errFunc, successFunc,","              facade = {","                  options : options","              };","        errFunc = function(err) {","            facade.error = err;","            facade.src   = 'Model.loadPromise()';","            instance._lazyFireErrorEvent(facade);","            reject(new Error(err));","        };","        successFunc = function(response) {","            var parsed;","            // Lazy publish.","            if (!instance._loadEvent) {","                instance._loadEvent = instance.publish(EVT_LOAD, {","                    preventable: false","                });","            }","            facade.response = response;","            parsed = PARSED(response);","            if (parsed.responseText) {","                // XMLHttpRequest","                parsed = parsed.responseText;","            }","            facade.parsed = parsed;","            instance.setAttrs(parsed, options);","            instance.changed = {};","            instance.fire(EVT_LOAD, facade);","            resolve(response);","        };","        if (instance.syncPromise) {","            // use the syncPromise-layer","            instance._syncTimeoutPromise('read', options).then(","                successFunc,","                errFunc","            );","        }","        else {","            instance.sync('read', options, function (err, response) {","                if (err) {","                    errFunc(err);","                }","                else {","                    successFunc(response);","                }","            });","        }","    });","    instance.fire(EVT_LOAD_START, {target: instance, promise: promise, options: options});","    return promise;","};","","/**","     * Creates a new custom event of the specified type.  If a custom event","     * by that name already exists, it will not be re-created.  In either","     * case the custom event is returned.","     *","     * @method publishAsync","     *","     * @param type {String} the type, or name of the event","     * @param opts {object} optional config params.  Valid properties are:","     *","     *  <ul>","     *    <li>","     *   'broadcast': whether or not the YUI instance and YUI global are notified when the event is fired (false)","     *    </li>","     *    <li>","     *   'bubbles': whether or not this event bubbles (true)","     *              Events can only bubble if emitFacade is true.","     *    </li>","     *    <li>","     *   'context': the default execution context for the listeners (this)","     *    </li>","     *    <li>","     *   'defaultFn': the default function to execute when this event fires if preventDefault was not called","     *    </li>","     *    <li>","     *   'emitFacade': whether or not this event emits a facade (false)","     *    </li>","     *    <li>","     *   'prefix': the prefix for this targets events, e.g., 'menu' in 'menu:click'","     *    </li>","     *    <li>","     *   'fireOnce': if an event is configured to fire once, new subscribers after","     *   the fire will be notified immediately.","     *    </li>","     *    <li>","     *   'async': fireOnce event listeners will fire synchronously if the event has already","     *    fired unless async is true.","     *    </li>","     *    <li>","     *   'preventable': whether or not preventDefault() has an effect (true)","     *    </li>","     *    <li>","     *   'preventedFn': a function that is executed when preventDefault is called","     *    </li>","     *    <li>","     *   'queuable': whether or not this event can be queued during bubbling (false)","     *    </li>","     *    <li>","     *   'silent': if silent is true, debug messages are not provided for this event.","     *    </li>","     *    <li>","     *   'stoppedFn': a function that is executed when stopPropagation is called","     *    </li>","     *","     *    <li>","     *   'monitored': specifies whether or not this event should send notifications about","     *   when the event has been attached, detached, or published.","     *    </li>","     *    <li>","     *   'type': the event type (valid option if not provided as the first parameter to publish)","     *    </li>","     *  </ul>","     *","     *  @return {CustomEvent} the custom event","     *","     */","YModel.prototype.publishAsync = function(type, opts) {","    var instance = this,","        asyncEvent = this.publish(type, opts);","","    asyncEvent._firing = new Y.Promise(function (resolve) { resolve(); });","","    asyncEvent.fire = function (data) {","        var args  = Y.Array(arguments, 0, true);","","        asyncEvent._firing = asyncEvent._firing.then(function () {","            asyncEvent.details = args;","            // Execute on() subscribers","            var subs = asyncEvent._subscribers,","                args2 = [],","                e,","                i, len;","","                args2.push.apply(args2, data);","                e = asyncEvent._createFacade(args2);","","            if (subs) {","                for (i = 0, len = subs.length; i < len; ++i) {","                    // TODO: try/catch?","                    subs[i].fn.call(subs[i].context, e);","                }","            }","            // Doesn't support preventedFn","            // Resolve the _firing promise with either false if it was prevented, or with a promise for","            // the result of the defaultFn followed by the execution of the after subs.","            return e.prevented ?","                Y.bind(asyncEvent.preventedFn, instance, e)().then(null, function (err) {","                    return false;","                })","                :","                Y.bind(asyncEvent.defaultFn, instance, e)().then(function (e) {","                    // Execute after() subscribers","                    subs = asyncEvent._afters;","","                    for (i = 0, len = subs.length; i < len; ++i) {","                        subs[i].fn.call(subs[i].context, e);","                    }","                // Catch errors/preventions and reset the promise state to fulfilled for","                // the next call to fire();","                }).then(null, function (err) {","                    return false;","                });","        },","        function(reason) {","            var facade = {","                error   : reason,","                src     : 'Model.publishAsync()'","            };","            instance._lazyFireErrorEvent(facade);","        });","    };","","    asyncEvent._fire = function (args) {","        return asyncEvent.fire(args[0]);","    };","};","","/**"," * Saves this model to the server."," *"," * This method delegates to the `sync()` method to perform the actual save operation, which is an asynchronous action."," * Specify a 'callback' function to be notified of success or failure."," * <br /><br />"," * A successful save operation will fire a `save` event, while an unsuccessful save operation will fire an `error` event with the `src` value \"save\"."," * If the save operation succeeds and one or more of the attributes returned in the server's response differ from this model's current attributes,"," * a `change` event will be fired."," * <br /><br />"," * To keep track of the proccess, it is preferable to use <b>savePromise()</b>.<br />"," * This method will fire 2 events: 'savestart' before syncing and 'save' or 'error' after syncing."," * <br /><br />"," * <b>CAUTION</b> The sync-method with action 'save' <b>must call its callback-function</b> in order to work as espected!"," *"," * @method save"," * @param {Object} [options] Options to be passed to `sync()` and to `set()` when setting synced attributes."," *                           It's up to the custom sync implementation to determine what options it supports or requires, if any."," * @param {Function} [callback] Called when the sync operation finishes."," *   @param {Error|null} callback.err If an error occurred or validation failed, this parameter will contain the error."," *                                    If the sync operation succeeded, 'err' will be null."," *   @param {Any} callback.response The server's response. This value will be passed to the `parse()` method,"," *                                  which is expected to parse it and return an attribute hash."," * @chainable","*/","YModel.prototype.save = function(options, callback) {","    var instance = this;","","    // by overwriting the default 'save'-method we manage to fire 'savestart'-event.","    instance.savePromise(options).then(","        function(response) {","/*jshint expr:true */","            callback && callback.apply(null, response);","/*jshint expr:false */","        },","        function(err) {","/*jshint expr:true */","            callback && callback.apply(null, err);","/*jshint expr:false */","        }","    );","    return instance;","};","","/**"," * Saves this model to the server."," * <br /><br />"," * This method delegates to the `sync()` method to perform the actual save"," * operation, which is an asynchronous action."," * <br /><br />"," * This method will also fire 2 events: 'savestart' before syncing and 'save' or 'error' after syncing.<br />"," * A successful save operation will fire a `save` event, while an unsuccessful"," * save operation will fire an `error` event with the `src` value \"save\"."," * <br /><br />"," * If the save operation succeeds and one or more of the attributes returned in"," * the server's response differ from this model's current attributes, a"," * `change` event will be fired."," * <br /><br />"," * <b>CAUTION</b> The sync-method with action 'save' <b>must call its callback-function</b> in order to work as espected!"," *"," * @method savePromise"," * @param {Object} [options] Options to be passed to `sync()`. It's up to the custom sync"," *                 implementation to determine what options it supports or requires, if any."," * @return {Y.Promise} promised response --> resolve(response) OR reject(reason). (examine reason.message).","**/","YModel.prototype.savePromise = function (options) {","    var instance = this,","        usedmethod = instance.isNew() ? 'create' : 'update',","        promise;","","    options = options || {};","    promise = new Y.Promise(function (resolve, reject) {","        var errFunc, successFunc,","              facade = {","                  options : options,","                  method: usedmethod","              };","        instance._validate(instance.toJSON(), function (validateErr) {","            if (validateErr) {","                facade.error = validateErr;","                facade.src = 'Model.savePromise() - validate';","                instance._lazyFireErrorEvent(facade);","                reject(new Error(validateErr));","            }","            else {","                errFunc = function(err) {","                    facade.error = err;","                    facade.src   = 'Model.savePromise()';","                    instance._lazyFireErrorEvent(facade);","                    reject(new Error(err));","                };","                successFunc = function(response) {","                    var parsed;","                    // Lazy publish.","                    if (!instance._saveEvent) {","                        instance._saveEvent = instance.publish(EVT_SAVE, {","                            preventable: false","                        });","                    }","                    facade.response = response;","                    parsed = PARSED(response);","                    if (parsed.responseText) {","                        // XMLHttpRequest","                        parsed = parsed.responseText;","                    }","                    facade.parsed = parsed;","                    instance.setAttrs(parsed, options);","                    instance.changed = {};","                    instance.fire(EVT_SAVE, facade);","                    resolve(response);","                };","                if (instance.syncPromise) {","                    // use the syncPromise-layer","                    instance._syncTimeoutPromise(usedmethod, options).then(","                        successFunc,","                        errFunc","                    );","                }","                else {","                    instance.sync(usedmethod, options, function (err, response) {","                        if (err) {","                            errFunc(err);","                        }","                        else {","                            successFunc(response);","                        }","                    });","                }","            }","        });","    });","    instance.fire(EVT_SAVE_START, {target: instance, promise: promise, options: options, method: usedmethod});","    return promise;","};","","//===============================================================================================","/**"," * This method can be defined in descendend classes.<br />"," * If syncPromise is defined, then the syncPromise() definition will be used instead of sync() definition.<br />"," * In case an invalid 'action' is defined, the promise will be rejected."," *"," * @method syncPromise"," * @param action {String} The sync-action to perform."," * @param [options] {Object} Sync options. The custom synclayer should pass through all options-properties to the server."," * @return {Y.Promise} returned response for each 'action' --> response --> resolve(dataobject) OR reject(reason)."," * The returned 'dataobject' might be an object or a string that can be turned into a json-object","*/","//===============================================================================================","","/**","* Fires the 'error'-event and -if not published yet- publish it broadcasted to Y.","* Because the error-event is broadcasted to Y, it can be catched by gallery-itsaerrorreporter.","*","* @method _lazyFireErrorEvent"," * @param {Object} [facade] eventfacade."," * @private","**/","YModel.prototype._lazyFireErrorEvent = function(facade) {","    var instance = this;","","    // lazy publish","    if (!instance._errorEvent) {","        instance._errorEvent = instance.publish(EVT_ERROR, {","            broadcast: 1","        });","    }","    instance.fire(EVT_ERROR, facade);","};","","/**"," * This method is used internally and returns syncPromise() that is called with 'action'."," * If 'action' is not handled as a Promise -inside syncPromise- then this method will reject the promisi."," *"," * @method _syncTimeoutPromise"," * @param action {String} The sync-action to perform."," * @param [options] {Object} Sync options. The custom synclayer should pass through all options-properties to the server."," * @return {Y.Promise} returned response for each 'action' --> response --> resolve(dataobject) OR reject(reason)."," * The returned 'dataobject' might be an object or a string that can be turned into a json-object"," * @private"," * @since 0.2","*/","YModel.prototype._syncTimeoutPromise = function(action, options) {","    var instance = this,","          syncpromise;","","    syncpromise = instance.syncPromise(action, options);","    if (!(syncpromise instanceof Y.Promise)) {","        syncpromise = new Y.Promise(function (resolve, reject) {","            var errormessage = 'syncPromise is rejected --> '+action+' not defined as a Promise inside syncPromise()';","            reject(new Error(errormessage));","        });","    }","    return syncpromise;","};","","}, '@VERSION@', {\"requires\": [\"yui-base\", \"base-base\", \"base-build\", \"node-base\", \"json-parse\", \"promise\", \"model\"]});","","}());"]};
}
var __cov_XDpPLj7Fz_gPyxqtPO4DtQ = __coverage__['build/gallery-itsamodelsyncpromise/gallery-itsamodelsyncpromise.js'];
__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['1']++;YUI.add('gallery-itsamodelsyncpromise',function(Y,NAME){'use strict';__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['1']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['2']++;var YModel=Y.Model,YObject=Y.Object,YArray=Y.Array,START='start',DESTROY='destroy',EVT_ERROR='error',EVT_LOAD='load',EVT_SAVE='save',EVT_LOAD_START=EVT_LOAD+START,EVT_SAVE_START=EVT_SAVE+START,PARSED=function(response){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['2']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['3']++;if(typeof response==='string'){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['1'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['4']++;try{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['5']++;return Y.JSON.parse(response);}catch(ex){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['6']++;this.fire(EVT_ERROR,{error:ex,response:response,src:'parse'});__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['7']++;return{};}}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['1'][1]++;}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['8']++;return(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['2'][0]++,response)||(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['2'][1]++,{});};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['9']++;YModel.prototype.destroy=function(options,callback){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['3']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['10']++;var instance=this;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['11']++;instance.destroyPromise(options).then(function(response){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['4']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['12']++;(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['3'][0]++,callback)&&(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['3'][1]++,callback.apply(null,response));},function(err){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['5']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['13']++;(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['4'][0]++,callback)&&(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['4'][1]++,callback.apply(null,err));});__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['14']++;return instance;};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['15']++;YModel.prototype._prevDefFnDestroy=function(e){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['6']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['16']++;console.log('model destroy preventdefaultFunc');__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['17']++;e.promiseReject(new Error('preventDefaulted'));};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['18']++;YModel.prototype._defDestroyFn=function(e){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['7']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['19']++;this._baseDestroy();__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['20']++;var instance=this,promiseResolve=e.promiseResolve,promiseReject=e.promiseReject,options=e.options,remove=(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['5'][0]++,e.remove)||(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['5'][1]++,e['delete']),errFunc,successFunc,finish;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['21']++;finish=function(){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['8']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['22']++;YArray.each(instance.lists.concat(),function(list){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['9']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['23']++;list.remove(instance,options);});};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['24']++;if(remove){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['6'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['25']++;errFunc=function(err){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['10']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['26']++;var facade={error:err,src:'Model.destroyPromise()',options:options};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['27']++;instance._lazyFireErrorEvent(facade);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['28']++;console.log('model destroy error..');__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['29']++;promiseReject(new Error(err));};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['30']++;successFunc=function(response){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['11']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['31']++;finish();__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['32']++;console.log('resoving model destroy...');__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['33']++;promiseResolve(response);};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['34']++;if(instance.syncPromise){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['7'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['35']++;instance._syncTimeoutPromise('delete',options).then(successFunc,errFunc);}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['7'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['36']++;instance.sync('delete',options,function(err,response){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['12']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['37']++;console.log('callback delete');__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['38']++;if(err){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['8'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['39']++;errFunc(err);}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['8'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['40']++;successFunc(response);}});}}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['6'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['41']++;finish();__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['42']++;console.log('model destroy about to resolve without remove..');__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['43']++;promiseResolve();}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['44']++;return e.promise;};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['45']++;YModel.prototype.destroyPromise=function(options){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['13']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['46']++;var instance=this,promise,promiseResolve,promiseReject,extraOptions;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['47']++;promise=new Y.Promise(function(resolve,reject){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['14']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['48']++;promiseResolve=resolve;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['49']++;promiseReject=reject;});__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['50']++;extraOptions={promise:promise,promiseResolve:promiseResolve,promiseReject:promiseReject};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['51']++;(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['9'][0]++,options)&&(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['9'][1]++,YObject.each(options,function(value,key){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['15']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['52']++;extraOptions[key]=value;}));__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['53']++;instance.publishAsync(DESTROY,{defaultTargetOnly:true,emitFacade:true,defaultFn:instance._defDestroyFn,preventedFn:instance._prevDefFnDestroy});__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['54']++;instance.fire(DESTROY,extraOptions);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['55']++;return promise;};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['56']++;YModel.prototype.load=function(options,callback){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['16']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['57']++;var instance=this;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['58']++;instance.loadPromise(options).then(function(response){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['17']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['59']++;(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['10'][0]++,callback)&&(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['10'][1]++,callback.apply(null,response));},function(err){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['18']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['60']++;(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['11'][0]++,callback)&&(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['11'][1]++,callback.apply(null,err));});__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['61']++;return instance;};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['62']++;YModel.prototype.loadPromise=function(options){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['19']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['63']++;var instance=this,promise;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['64']++;options=(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['12'][0]++,options)||(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['12'][1]++,{});__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['65']++;promise=new Y.Promise(function(resolve,reject){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['20']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['66']++;var errFunc,successFunc,facade={options:options};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['67']++;errFunc=function(err){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['21']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['68']++;facade.error=err;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['69']++;facade.src='Model.loadPromise()';__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['70']++;instance._lazyFireErrorEvent(facade);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['71']++;reject(new Error(err));};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['72']++;successFunc=function(response){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['22']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['73']++;var parsed;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['74']++;if(!instance._loadEvent){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['13'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['75']++;instance._loadEvent=instance.publish(EVT_LOAD,{preventable:false});}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['13'][1]++;}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['76']++;facade.response=response;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['77']++;parsed=PARSED(response);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['78']++;if(parsed.responseText){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['14'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['79']++;parsed=parsed.responseText;}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['14'][1]++;}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['80']++;facade.parsed=parsed;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['81']++;instance.setAttrs(parsed,options);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['82']++;instance.changed={};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['83']++;instance.fire(EVT_LOAD,facade);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['84']++;resolve(response);};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['85']++;if(instance.syncPromise){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['15'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['86']++;instance._syncTimeoutPromise('read',options).then(successFunc,errFunc);}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['15'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['87']++;instance.sync('read',options,function(err,response){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['23']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['88']++;if(err){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['16'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['89']++;errFunc(err);}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['16'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['90']++;successFunc(response);}});}});__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['91']++;instance.fire(EVT_LOAD_START,{target:instance,promise:promise,options:options});__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['92']++;return promise;};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['93']++;YModel.prototype.publishAsync=function(type,opts){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['24']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['94']++;var instance=this,asyncEvent=this.publish(type,opts);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['95']++;asyncEvent._firing=new Y.Promise(function(resolve){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['25']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['96']++;resolve();});__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['97']++;asyncEvent.fire=function(data){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['26']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['98']++;var args=Y.Array(arguments,0,true);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['99']++;asyncEvent._firing=asyncEvent._firing.then(function(){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['27']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['100']++;asyncEvent.details=args;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['101']++;var subs=asyncEvent._subscribers,args2=[],e,i,len;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['102']++;args2.push.apply(args2,data);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['103']++;e=asyncEvent._createFacade(args2);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['104']++;if(subs){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['17'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['105']++;for(i=0,len=subs.length;i<len;++i){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['106']++;subs[i].fn.call(subs[i].context,e);}}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['17'][1]++;}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['107']++;return e.prevented?(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['18'][0]++,Y.bind(asyncEvent.preventedFn,instance,e)().then(null,function(err){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['28']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['108']++;return false;})):(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['18'][1]++,Y.bind(asyncEvent.defaultFn,instance,e)().then(function(e){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['29']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['109']++;subs=asyncEvent._afters;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['110']++;for(i=0,len=subs.length;i<len;++i){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['111']++;subs[i].fn.call(subs[i].context,e);}}).then(null,function(err){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['30']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['112']++;return false;}));},function(reason){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['31']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['113']++;var facade={error:reason,src:'Model.publishAsync()'};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['114']++;instance._lazyFireErrorEvent(facade);});};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['115']++;asyncEvent._fire=function(args){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['32']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['116']++;return asyncEvent.fire(args[0]);};};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['117']++;YModel.prototype.save=function(options,callback){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['33']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['118']++;var instance=this;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['119']++;instance.savePromise(options).then(function(response){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['34']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['120']++;(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['19'][0]++,callback)&&(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['19'][1]++,callback.apply(null,response));},function(err){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['35']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['121']++;(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['20'][0]++,callback)&&(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['20'][1]++,callback.apply(null,err));});__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['122']++;return instance;};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['123']++;YModel.prototype.savePromise=function(options){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['36']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['124']++;var instance=this,usedmethod=instance.isNew()?(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['21'][0]++,'create'):(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['21'][1]++,'update'),promise;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['125']++;options=(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['22'][0]++,options)||(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['22'][1]++,{});__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['126']++;promise=new Y.Promise(function(resolve,reject){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['37']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['127']++;var errFunc,successFunc,facade={options:options,method:usedmethod};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['128']++;instance._validate(instance.toJSON(),function(validateErr){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['38']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['129']++;if(validateErr){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['23'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['130']++;facade.error=validateErr;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['131']++;facade.src='Model.savePromise() - validate';__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['132']++;instance._lazyFireErrorEvent(facade);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['133']++;reject(new Error(validateErr));}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['23'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['134']++;errFunc=function(err){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['39']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['135']++;facade.error=err;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['136']++;facade.src='Model.savePromise()';__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['137']++;instance._lazyFireErrorEvent(facade);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['138']++;reject(new Error(err));};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['139']++;successFunc=function(response){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['40']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['140']++;var parsed;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['141']++;if(!instance._saveEvent){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['24'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['142']++;instance._saveEvent=instance.publish(EVT_SAVE,{preventable:false});}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['24'][1]++;}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['143']++;facade.response=response;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['144']++;parsed=PARSED(response);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['145']++;if(parsed.responseText){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['25'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['146']++;parsed=parsed.responseText;}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['25'][1]++;}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['147']++;facade.parsed=parsed;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['148']++;instance.setAttrs(parsed,options);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['149']++;instance.changed={};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['150']++;instance.fire(EVT_SAVE,facade);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['151']++;resolve(response);};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['152']++;if(instance.syncPromise){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['26'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['153']++;instance._syncTimeoutPromise(usedmethod,options).then(successFunc,errFunc);}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['26'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['154']++;instance.sync(usedmethod,options,function(err,response){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['41']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['155']++;if(err){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['27'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['156']++;errFunc(err);}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['27'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['157']++;successFunc(response);}});}}});});__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['158']++;instance.fire(EVT_SAVE_START,{target:instance,promise:promise,options:options,method:usedmethod});__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['159']++;return promise;};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['160']++;YModel.prototype._lazyFireErrorEvent=function(facade){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['42']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['161']++;var instance=this;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['162']++;if(!instance._errorEvent){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['28'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['163']++;instance._errorEvent=instance.publish(EVT_ERROR,{broadcast:1});}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['28'][1]++;}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['164']++;instance.fire(EVT_ERROR,facade);};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['165']++;YModel.prototype._syncTimeoutPromise=function(action,options){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['43']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['166']++;var instance=this,syncpromise;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['167']++;syncpromise=instance.syncPromise(action,options);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['168']++;if(!(syncpromise instanceof Y.Promise)){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['29'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['169']++;syncpromise=new Y.Promise(function(resolve,reject){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['44']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['170']++;var errormessage='syncPromise is rejected --> '+action+' not defined as a Promise inside syncPromise()';__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['171']++;reject(new Error(errormessage));});}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['29'][1]++;}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['172']++;return syncpromise;};},'@VERSION@',{'requires':['yui-base','base-base','base-build','node-base','json-parse','promise','model']});
