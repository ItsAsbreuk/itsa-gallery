if (typeof __coverage__ === 'undefined') { __coverage__ = {}; }
if (!__coverage__['build/gallery-itsamessageviewer/gallery-itsamessageviewer.js']) {
   __coverage__['build/gallery-itsamessageviewer/gallery-itsamessageviewer.js'] = {"path":"build/gallery-itsamessageviewer/gallery-itsamessageviewer.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0},"b":{"1":[0,0,0,0,0],"2":[0,0],"3":[0,0,0,0],"4":[0,0],"5":[0,0,0],"6":[0,0,0],"7":[0,0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0,0,0,0],"18":[0,0],"19":[0,0,0,0,0],"20":[0,0],"21":[0,0,0,0,0],"22":[0,0],"23":[0,0,0,0,0],"24":[0,0],"25":[0,0,0,0,0,0],"26":[0,0,0,0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0,0,0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0,0,0,0,0],"39":[0,0,0,0,0],"40":[0,0,0,0],"41":[0,0],"42":[0,0,0],"43":[0,0,0],"44":[0,0,0],"45":[0,0],"46":[0,0],"47":[0,0,0],"48":[0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":37},"end":{"line":1,"column":56}}},"2":{"name":"ITSAMessageViewer","line":63,"loc":{"start":{"line":63,"column":0},"end":{"line":63,"column":29}}},"3":{"name":"(anonymous_3)","line":76,"loc":{"start":{"line":76,"column":42},"end":{"line":76,"column":53}}},"4":{"name":"(anonymous_4)","line":116,"loc":{"start":{"line":116,"column":44},"end":{"line":116,"column":71}}},"5":{"name":"(anonymous_5)","line":124,"loc":{"start":{"line":124,"column":17},"end":{"line":124,"column":36}}},"6":{"name":"(anonymous_6)","line":130,"loc":{"start":{"line":130,"column":12},"end":{"line":130,"column":34}}},"7":{"name":"(anonymous_7)","line":157,"loc":{"start":{"line":157,"column":42},"end":{"line":157,"column":58}}},"8":{"name":"(anonymous_8)","line":175,"loc":{"start":{"line":175,"column":40},"end":{"line":175,"column":68}}},"9":{"name":"(anonymous_9)","line":187,"loc":{"start":{"line":187,"column":38},"end":{"line":187,"column":66}}},"10":{"name":"(anonymous_10)","line":201,"loc":{"start":{"line":201,"column":42},"end":{"line":201,"column":70}}},"11":{"name":"(anonymous_11)","line":211,"loc":{"start":{"line":211,"column":41},"end":{"line":211,"column":52}}},"12":{"name":"(anonymous_12)","line":240,"loc":{"start":{"line":240,"column":50},"end":{"line":240,"column":66}}},"13":{"name":"(anonymous_13)","line":243,"loc":{"start":{"line":243,"column":8},"end":{"line":243,"column":19}}},"14":{"name":"(anonymous_14)","line":244,"loc":{"start":{"line":244,"column":33},"end":{"line":244,"column":60}}},"15":{"name":"(anonymous_15)","line":257,"loc":{"start":{"line":257,"column":20},"end":{"line":257,"column":42}}},"16":{"name":"(anonymous_16)","line":268,"loc":{"start":{"line":268,"column":20},"end":{"line":268,"column":42}}},"17":{"name":"(anonymous_17)","line":308,"loc":{"start":{"line":308,"column":46},"end":{"line":308,"column":58}}},"18":{"name":"(anonymous_18)","line":332,"loc":{"start":{"line":332,"column":8},"end":{"line":332,"column":30}}},"19":{"name":"(anonymous_19)","line":335,"loc":{"start":{"line":335,"column":57},"end":{"line":335,"column":76}}},"20":{"name":"(anonymous_20)","line":336,"loc":{"start":{"line":336,"column":59},"end":{"line":336,"column":70}}},"21":{"name":"(anonymous_21)","line":356,"loc":{"start":{"line":356,"column":44},"end":{"line":356,"column":60}}},"22":{"name":"(anonymous_22)","line":359,"loc":{"start":{"line":359,"column":20},"end":{"line":359,"column":31}}},"23":{"name":"(anonymous_23)","line":361,"loc":{"start":{"line":361,"column":12},"end":{"line":361,"column":34}}},"24":{"name":"(anonymous_24)","line":370,"loc":{"start":{"line":370,"column":12},"end":{"line":370,"column":26}}},"25":{"name":"(anonymous_25)","line":376,"loc":{"start":{"line":376,"column":24},"end":{"line":376,"column":35}}},"26":{"name":"(anonymous_26)","line":391,"loc":{"start":{"line":391,"column":41},"end":{"line":391,"column":63}}},"27":{"name":"(anonymous_27)","line":412,"loc":{"start":{"line":412,"column":39},"end":{"line":412,"column":61}}},"28":{"name":"(anonymous_28)","line":429,"loc":{"start":{"line":429,"column":43},"end":{"line":429,"column":65}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":824,"column":3}},"2":{"start":{"line":23,"column":0},"end":{"line":61,"column":6}},"3":{"start":{"line":63,"column":0},"end":{"line":65,"column":1}},"4":{"start":{"line":64,"column":4},"end":{"line":64,"column":68}},"5":{"start":{"line":67,"column":0},"end":{"line":67,"column":45}},"6":{"start":{"line":68,"column":0},"end":{"line":68,"column":36}},"7":{"start":{"line":76,"column":0},"end":{"line":114,"column":2}},"8":{"start":{"line":77,"column":4},"end":{"line":77,"column":24}},"9":{"start":{"line":86,"column":4},"end":{"line":86,"column":36}},"10":{"start":{"line":96,"column":4},"end":{"line":96,"column":31}},"11":{"start":{"line":106,"column":4},"end":{"line":106,"column":34}},"12":{"start":{"line":108,"column":4},"end":{"line":108,"column":54}},"13":{"start":{"line":110,"column":4},"end":{"line":110,"column":126}},"14":{"start":{"line":111,"column":4},"end":{"line":111,"column":33}},"15":{"start":{"line":112,"column":4},"end":{"line":112,"column":33}},"16":{"start":{"line":113,"column":4},"end":{"line":113,"column":34}},"17":{"start":{"line":116,"column":0},"end":{"line":147,"column":2}},"18":{"start":{"line":117,"column":4},"end":{"line":122,"column":64}},"19":{"start":{"line":124,"column":4},"end":{"line":140,"column":6}},"20":{"start":{"line":125,"column":8},"end":{"line":127,"column":104}},"21":{"start":{"line":128,"column":8},"end":{"line":138,"column":10}},"22":{"start":{"line":131,"column":16},"end":{"line":131,"column":63}},"23":{"start":{"line":132,"column":16},"end":{"line":132,"column":197}},"24":{"start":{"line":133,"column":16},"end":{"line":133,"column":120}},"25":{"start":{"line":135,"column":16},"end":{"line":135,"column":40}},"26":{"start":{"line":139,"column":8},"end":{"line":139,"column":21}},"27":{"start":{"line":142,"column":4},"end":{"line":142,"column":60}},"28":{"start":{"line":143,"column":4},"end":{"line":143,"column":60}},"29":{"start":{"line":144,"column":4},"end":{"line":144,"column":62}},"30":{"start":{"line":146,"column":4},"end":{"line":146,"column":17}},"31":{"start":{"line":157,"column":0},"end":{"line":165,"column":2}},"32":{"start":{"line":158,"column":4},"end":{"line":158,"column":36}},"33":{"start":{"line":159,"column":4},"end":{"line":164,"column":5}},"34":{"start":{"line":160,"column":8},"end":{"line":160,"column":71}},"35":{"start":{"line":162,"column":8},"end":{"line":162,"column":90}},"36":{"start":{"line":175,"column":0},"end":{"line":177,"column":2}},"37":{"start":{"line":187,"column":0},"end":{"line":189,"column":2}},"38":{"start":{"line":201,"column":0},"end":{"line":203,"column":2}},"39":{"start":{"line":211,"column":0},"end":{"line":227,"column":2}},"40":{"start":{"line":212,"column":4},"end":{"line":215,"column":79}},"41":{"start":{"line":216,"column":4},"end":{"line":216,"column":57}},"42":{"start":{"line":219,"column":4},"end":{"line":219,"column":83}},"43":{"start":{"line":220,"column":4},"end":{"line":220,"column":83}},"44":{"start":{"line":221,"column":4},"end":{"line":221,"column":85}},"45":{"start":{"line":222,"column":4},"end":{"line":222,"column":95}},"46":{"start":{"line":223,"column":4},"end":{"line":223,"column":95}},"47":{"start":{"line":224,"column":4},"end":{"line":224,"column":97}},"48":{"start":{"line":226,"column":4},"end":{"line":226,"column":31}},"49":{"start":{"line":240,"column":0},"end":{"line":345,"column":2}},"50":{"start":{"line":241,"column":4},"end":{"line":241,"column":24}},"51":{"start":{"line":242,"column":4},"end":{"line":344,"column":6}},"52":{"start":{"line":244,"column":12},"end":{"line":329,"column":15}},"53":{"start":{"line":245,"column":16},"end":{"line":250,"column":109}},"54":{"start":{"line":252,"column":16},"end":{"line":252,"column":52}},"55":{"start":{"line":255,"column":16},"end":{"line":263,"column":18}},"56":{"start":{"line":258,"column":24},"end":{"line":258,"column":71}},"57":{"start":{"line":259,"column":24},"end":{"line":259,"column":205}},"58":{"start":{"line":260,"column":24},"end":{"line":260,"column":149}},"59":{"start":{"line":261,"column":24},"end":{"line":261,"column":43}},"60":{"start":{"line":266,"column":16},"end":{"line":274,"column":18}},"61":{"start":{"line":269,"column":24},"end":{"line":269,"column":71}},"62":{"start":{"line":270,"column":24},"end":{"line":270,"column":205}},"63":{"start":{"line":271,"column":24},"end":{"line":271,"column":150}},"64":{"start":{"line":272,"column":24},"end":{"line":272,"column":43}},"65":{"start":{"line":276,"column":16},"end":{"line":328,"column":17}},"66":{"start":{"line":277,"column":20},"end":{"line":277,"column":63}},"67":{"start":{"line":281,"column":20},"end":{"line":282,"column":100}},"68":{"start":{"line":284,"column":20},"end":{"line":285,"column":61}},"69":{"start":{"line":287,"column":20},"end":{"line":287,"column":41}},"70":{"start":{"line":293,"column":20},"end":{"line":298,"column":21}},"71":{"start":{"line":294,"column":24},"end":{"line":294,"column":103}},"72":{"start":{"line":296,"column":25},"end":{"line":298,"column":21}},"73":{"start":{"line":297,"column":24},"end":{"line":297,"column":72}},"74":{"start":{"line":299,"column":20},"end":{"line":302,"column":21}},"75":{"start":{"line":300,"column":24},"end":{"line":300,"column":61}},"76":{"start":{"line":301,"column":24},"end":{"line":301,"column":63}},"77":{"start":{"line":303,"column":20},"end":{"line":303,"column":56}},"78":{"start":{"line":305,"column":20},"end":{"line":305,"column":68}},"79":{"start":{"line":307,"column":20},"end":{"line":307,"column":71}},"80":{"start":{"line":308,"column":20},"end":{"line":327,"column":23}},"81":{"start":{"line":309,"column":24},"end":{"line":309,"column":56}},"82":{"start":{"line":310,"column":28},"end":{"line":310,"column":75}},"83":{"start":{"line":311,"column":28},"end":{"line":311,"column":209}},"84":{"start":{"line":312,"column":24},"end":{"line":326,"column":25}},"85":{"start":{"line":313,"column":28},"end":{"line":313,"column":46}},"86":{"start":{"line":314,"column":28},"end":{"line":314,"column":53}},"87":{"start":{"line":315,"column":28},"end":{"line":315,"column":71}},"88":{"start":{"line":319,"column":28},"end":{"line":320,"column":108}},"89":{"start":{"line":322,"column":28},"end":{"line":323,"column":69}},"90":{"start":{"line":325,"column":28},"end":{"line":325,"column":49}},"91":{"start":{"line":334,"column":12},"end":{"line":334,"column":129}},"92":{"start":{"line":335,"column":12},"end":{"line":342,"column":15}},"93":{"start":{"line":336,"column":16},"end":{"line":341,"column":19}},"94":{"start":{"line":337,"column":20},"end":{"line":337,"column":114}},"95":{"start":{"line":339,"column":20},"end":{"line":339,"column":73}},"96":{"start":{"line":356,"column":0},"end":{"line":381,"column":2}},"97":{"start":{"line":357,"column":4},"end":{"line":358,"column":41}},"98":{"start":{"line":359,"column":4},"end":{"line":375,"column":6}},"99":{"start":{"line":360,"column":8},"end":{"line":374,"column":10}},"100":{"start":{"line":362,"column":16},"end":{"line":362,"column":47}},"101":{"start":{"line":364,"column":16},"end":{"line":364,"column":105}},"102":{"start":{"line":366,"column":16},"end":{"line":366,"column":58}},"103":{"start":{"line":376,"column":4},"end":{"line":379,"column":6}},"104":{"start":{"line":378,"column":8},"end":{"line":378,"column":101}},"105":{"start":{"line":380,"column":4},"end":{"line":380,"column":24}},"106":{"start":{"line":391,"column":0},"end":{"line":402,"column":2}},"107":{"start":{"line":392,"column":4},"end":{"line":392,"column":24}},"108":{"start":{"line":394,"column":4},"end":{"line":401,"column":5}},"109":{"start":{"line":396,"column":8},"end":{"line":396,"column":97}},"110":{"start":{"line":399,"column":8},"end":{"line":399,"column":57}},"111":{"start":{"line":400,"column":8},"end":{"line":400,"column":40}},"112":{"start":{"line":412,"column":0},"end":{"line":418,"column":2}},"113":{"start":{"line":413,"column":4},"end":{"line":413,"column":24}},"114":{"start":{"line":415,"column":4},"end":{"line":415,"column":92}},"115":{"start":{"line":417,"column":4},"end":{"line":417,"column":34}},"116":{"start":{"line":429,"column":0},"end":{"line":433,"column":2}},"117":{"start":{"line":431,"column":4},"end":{"line":431,"column":53}},"118":{"start":{"line":432,"column":4},"end":{"line":432,"column":41}},"119":{"start":{"line":435,"column":0},"end":{"line":435,"column":40}},"120":{"start":{"line":466,"column":0},"end":{"line":466,"column":132}},"121":{"start":{"line":520,"column":0},"end":{"line":520,"column":132}},"122":{"start":{"line":552,"column":0},"end":{"line":552,"column":102}},"123":{"start":{"line":584,"column":0},"end":{"line":584,"column":106}},"124":{"start":{"line":650,"column":0},"end":{"line":650,"column":117}},"125":{"start":{"line":682,"column":0},"end":{"line":682,"column":108}},"126":{"start":{"line":708,"column":0},"end":{"line":708,"column":112}},"127":{"start":{"line":760,"column":0},"end":{"line":760,"column":122}},"128":{"start":{"line":786,"column":0},"end":{"line":786,"column":108}},"129":{"start":{"line":813,"column":0},"end":{"line":813,"column":110}}},"branchMap":{"1":{"line":132,"type":"binary-expr","locations":[{"start":{"line":132,"column":31},"end":{"line":132,"column":61}},{"start":{"line":132,"column":67},"end":{"line":132,"column":82}},{"start":{"line":132,"column":86},"end":{"line":132,"column":103}},{"start":{"line":132,"column":110},"end":{"line":132,"column":130}},{"start":{"line":132,"column":135},"end":{"line":132,"column":194}}]},"2":{"line":132,"type":"cond-expr","locations":[{"start":{"line":132,"column":155},"end":{"line":132,"column":176}},{"start":{"line":132,"column":179},"end":{"line":132,"column":194}}]},"3":{"line":133,"type":"binary-expr","locations":[{"start":{"line":133,"column":31},"end":{"line":133,"column":41}},{"start":{"line":133,"column":46},"end":{"line":133,"column":75}},{"start":{"line":133,"column":81},"end":{"line":133,"column":90}},{"start":{"line":133,"column":94},"end":{"line":133,"column":118}}]},"4":{"line":135,"type":"binary-expr","locations":[{"start":{"line":135,"column":16},"end":{"line":135,"column":28}},{"start":{"line":135,"column":32},"end":{"line":135,"column":39}}]},"5":{"line":142,"type":"binary-expr","locations":[{"start":{"line":142,"column":6},"end":{"line":142,"column":18}},{"start":{"line":142,"column":23},"end":{"line":142,"column":29}},{"start":{"line":142,"column":35},"end":{"line":142,"column":58}}]},"6":{"line":143,"type":"binary-expr","locations":[{"start":{"line":143,"column":6},"end":{"line":143,"column":18}},{"start":{"line":143,"column":23},"end":{"line":143,"column":29}},{"start":{"line":143,"column":35},"end":{"line":143,"column":58}}]},"7":{"line":144,"type":"binary-expr","locations":[{"start":{"line":144,"column":6},"end":{"line":144,"column":19}},{"start":{"line":144,"column":24},"end":{"line":144,"column":30}},{"start":{"line":144,"column":36},"end":{"line":144,"column":60}}]},"8":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":4},"end":{"line":159,"column":4}},{"start":{"line":159,"column":4},"end":{"line":159,"column":4}}]},"9":{"line":162,"type":"binary-expr","locations":[{"start":{"line":162,"column":8},"end":{"line":162,"column":27}},{"start":{"line":162,"column":32},"end":{"line":162,"column":88}}]},"10":{"line":219,"type":"binary-expr","locations":[{"start":{"line":219,"column":5},"end":{"line":219,"column":41}},{"start":{"line":219,"column":47},"end":{"line":219,"column":81}}]},"11":{"line":220,"type":"binary-expr","locations":[{"start":{"line":220,"column":5},"end":{"line":220,"column":41}},{"start":{"line":220,"column":47},"end":{"line":220,"column":81}}]},"12":{"line":221,"type":"binary-expr","locations":[{"start":{"line":221,"column":5},"end":{"line":221,"column":42}},{"start":{"line":221,"column":48},"end":{"line":221,"column":83}}]},"13":{"line":222,"type":"binary-expr","locations":[{"start":{"line":222,"column":5},"end":{"line":222,"column":47}},{"start":{"line":222,"column":53},"end":{"line":222,"column":93}}]},"14":{"line":223,"type":"binary-expr","locations":[{"start":{"line":223,"column":5},"end":{"line":223,"column":47}},{"start":{"line":223,"column":53},"end":{"line":223,"column":93}}]},"15":{"line":224,"type":"binary-expr","locations":[{"start":{"line":224,"column":5},"end":{"line":224,"column":48}},{"start":{"line":224,"column":54},"end":{"line":224,"column":95}}]},"16":{"line":252,"type":"binary-expr","locations":[{"start":{"line":252,"column":16},"end":{"line":252,"column":39}},{"start":{"line":252,"column":43},"end":{"line":252,"column":51}}]},"17":{"line":259,"type":"binary-expr","locations":[{"start":{"line":259,"column":39},"end":{"line":259,"column":69}},{"start":{"line":259,"column":75},"end":{"line":259,"column":90}},{"start":{"line":259,"column":94},"end":{"line":259,"column":111}},{"start":{"line":259,"column":118},"end":{"line":259,"column":138}},{"start":{"line":259,"column":143},"end":{"line":259,"column":202}}]},"18":{"line":259,"type":"cond-expr","locations":[{"start":{"line":259,"column":163},"end":{"line":259,"column":184}},{"start":{"line":259,"column":187},"end":{"line":259,"column":202}}]},"19":{"line":260,"type":"binary-expr","locations":[{"start":{"line":260,"column":38},"end":{"line":260,"column":48}},{"start":{"line":260,"column":53},"end":{"line":260,"column":79}},{"start":{"line":260,"column":84},"end":{"line":260,"column":105}},{"start":{"line":260,"column":109},"end":{"line":260,"column":133}},{"start":{"line":260,"column":137},"end":{"line":260,"column":148}}]},"20":{"line":266,"type":"binary-expr","locations":[{"start":{"line":266,"column":16},"end":{"line":266,"column":27}},{"start":{"line":266,"column":31},"end":{"line":274,"column":17}}]},"21":{"line":270,"type":"binary-expr","locations":[{"start":{"line":270,"column":39},"end":{"line":270,"column":69}},{"start":{"line":270,"column":75},"end":{"line":270,"column":90}},{"start":{"line":270,"column":94},"end":{"line":270,"column":111}},{"start":{"line":270,"column":118},"end":{"line":270,"column":138}},{"start":{"line":270,"column":143},"end":{"line":270,"column":202}}]},"22":{"line":270,"type":"cond-expr","locations":[{"start":{"line":270,"column":163},"end":{"line":270,"column":184}},{"start":{"line":270,"column":187},"end":{"line":270,"column":202}}]},"23":{"line":271,"type":"binary-expr","locations":[{"start":{"line":271,"column":38},"end":{"line":271,"column":48}},{"start":{"line":271,"column":53},"end":{"line":271,"column":79}},{"start":{"line":271,"column":84},"end":{"line":271,"column":106}},{"start":{"line":271,"column":110},"end":{"line":271,"column":134}},{"start":{"line":271,"column":138},"end":{"line":271,"column":149}}]},"24":{"line":276,"type":"if","locations":[{"start":{"line":276,"column":16},"end":{"line":276,"column":16}},{"start":{"line":276,"column":16},"end":{"line":276,"column":16}}]},"25":{"line":281,"type":"binary-expr","locations":[{"start":{"line":281,"column":21},"end":{"line":281,"column":66}},{"start":{"line":281,"column":73},"end":{"line":281,"column":85}},{"start":{"line":281,"column":90},"end":{"line":281,"column":117}},{"start":{"line":281,"column":121},"end":{"line":281,"column":149}},{"start":{"line":282,"column":25},"end":{"line":282,"column":58}},{"start":{"line":282,"column":63},"end":{"line":282,"column":99}}]},"26":{"line":284,"type":"binary-expr","locations":[{"start":{"line":284,"column":21},"end":{"line":284,"column":66}},{"start":{"line":284,"column":73},"end":{"line":284,"column":86}},{"start":{"line":284,"column":91},"end":{"line":284,"column":119}},{"start":{"line":284,"column":125},"end":{"line":284,"column":158}},{"start":{"line":285,"column":24},"end":{"line":285,"column":60}}]},"27":{"line":293,"type":"if","locations":[{"start":{"line":293,"column":20},"end":{"line":293,"column":20}},{"start":{"line":293,"column":20},"end":{"line":293,"column":20}}]},"28":{"line":294,"type":"binary-expr","locations":[{"start":{"line":294,"column":44},"end":{"line":294,"column":71}},{"start":{"line":294,"column":75},"end":{"line":294,"column":102}}]},"29":{"line":296,"type":"if","locations":[{"start":{"line":296,"column":25},"end":{"line":296,"column":25}},{"start":{"line":296,"column":25},"end":{"line":296,"column":25}}]},"30":{"line":296,"type":"binary-expr","locations":[{"start":{"line":296,"column":30},"end":{"line":296,"column":42}},{"start":{"line":296,"column":48},"end":{"line":296,"column":77}}]},"31":{"line":299,"type":"if","locations":[{"start":{"line":299,"column":20},"end":{"line":299,"column":20}},{"start":{"line":299,"column":20},"end":{"line":299,"column":20}}]},"32":{"line":299,"type":"binary-expr","locations":[{"start":{"line":299,"column":24},"end":{"line":299,"column":41}},{"start":{"line":299,"column":45},"end":{"line":299,"column":73}}]},"33":{"line":305,"type":"binary-expr","locations":[{"start":{"line":305,"column":21},"end":{"line":305,"column":33}},{"start":{"line":305,"column":38},"end":{"line":305,"column":67}}]},"34":{"line":311,"type":"binary-expr","locations":[{"start":{"line":311,"column":43},"end":{"line":311,"column":73}},{"start":{"line":311,"column":79},"end":{"line":311,"column":94}},{"start":{"line":311,"column":98},"end":{"line":311,"column":115}},{"start":{"line":311,"column":122},"end":{"line":311,"column":142}},{"start":{"line":311,"column":147},"end":{"line":311,"column":206}}]},"35":{"line":311,"type":"cond-expr","locations":[{"start":{"line":311,"column":167},"end":{"line":311,"column":188}},{"start":{"line":311,"column":191},"end":{"line":311,"column":206}}]},"36":{"line":312,"type":"if","locations":[{"start":{"line":312,"column":24},"end":{"line":312,"column":24}},{"start":{"line":312,"column":24},"end":{"line":312,"column":24}}]},"37":{"line":312,"type":"binary-expr","locations":[{"start":{"line":312,"column":28},"end":{"line":312,"column":38}},{"start":{"line":312,"column":43},"end":{"line":312,"column":69}}]},"38":{"line":319,"type":"binary-expr","locations":[{"start":{"line":319,"column":29},"end":{"line":319,"column":74}},{"start":{"line":319,"column":81},"end":{"line":319,"column":93}},{"start":{"line":319,"column":98},"end":{"line":319,"column":125}},{"start":{"line":319,"column":129},"end":{"line":319,"column":157}},{"start":{"line":320,"column":33},"end":{"line":320,"column":66}},{"start":{"line":320,"column":71},"end":{"line":320,"column":107}}]},"39":{"line":322,"type":"binary-expr","locations":[{"start":{"line":322,"column":29},"end":{"line":322,"column":74}},{"start":{"line":322,"column":81},"end":{"line":322,"column":94}},{"start":{"line":322,"column":99},"end":{"line":322,"column":127}},{"start":{"line":322,"column":133},"end":{"line":322,"column":166}},{"start":{"line":323,"column":32},"end":{"line":323,"column":68}}]},"40":{"line":334,"type":"binary-expr","locations":[{"start":{"line":334,"column":27},"end":{"line":334,"column":40}},{"start":{"line":334,"column":46},"end":{"line":334,"column":75}},{"start":{"line":334,"column":81},"end":{"line":334,"column":93}},{"start":{"line":334,"column":98},"end":{"line":334,"column":126}}]},"41":{"line":335,"type":"cond-expr","locations":[{"start":{"line":335,"column":29},"end":{"line":335,"column":40}},{"start":{"line":335,"column":43},"end":{"line":342,"column":14}}]},"42":{"line":337,"type":"binary-expr","locations":[{"start":{"line":337,"column":31},"end":{"line":337,"column":60}},{"start":{"line":337,"column":66},"end":{"line":337,"column":78}},{"start":{"line":337,"column":83},"end":{"line":337,"column":111}}]},"43":{"line":339,"type":"binary-expr","locations":[{"start":{"line":339,"column":20},"end":{"line":339,"column":27}},{"start":{"line":339,"column":31},"end":{"line":339,"column":48}},{"start":{"line":339,"column":52},"end":{"line":339,"column":72}}]},"44":{"line":364,"type":"binary-expr","locations":[{"start":{"line":364,"column":17},"end":{"line":364,"column":44}},{"start":{"line":364,"column":48},"end":{"line":364,"column":74}},{"start":{"line":364,"column":79},"end":{"line":364,"column":104}}]},"45":{"line":378,"type":"binary-expr","locations":[{"start":{"line":378,"column":15},"end":{"line":378,"column":38}},{"start":{"line":378,"column":42},"end":{"line":378,"column":100}}]},"46":{"line":394,"type":"if","locations":[{"start":{"line":394,"column":4},"end":{"line":394,"column":4}},{"start":{"line":394,"column":4},"end":{"line":394,"column":4}}]},"47":{"line":396,"type":"binary-expr","locations":[{"start":{"line":396,"column":9},"end":{"line":396,"column":36}},{"start":{"line":396,"column":40},"end":{"line":396,"column":66}},{"start":{"line":396,"column":71},"end":{"line":396,"column":96}}]},"48":{"line":415,"type":"binary-expr","locations":[{"start":{"line":415,"column":5},"end":{"line":415,"column":32}},{"start":{"line":415,"column":36},"end":{"line":415,"column":62}},{"start":{"line":415,"column":67},"end":{"line":415,"column":91}}]}},"code":["(function () { YUI.add('gallery-itsamessageviewer', function (Y, NAME) {","","'use strict';","","/*jshint maxlen:215 */","","/**"," *"," * Extends Y.Model by adding methods through which they can create editable form-elements, which represent and are bound to the propery-value."," * This model is for defining the UI-structure for all Model's properties and for firing model-events for"," * Y.ITSAFormModel does not rendering to the dom itself. That needs to be done by an Y.View-instance, like Y.ITSAViewModel."," *"," * @module gallery-itsamessageviewer"," * @extends Base"," * @class ITSAMessageViewer"," * @constructor"," * @since 0.1"," *"," * <i>Copyright (c) 2013 Marco Asbreuk - http://itsasbreuk.nl</i>"," * YUI BSD License - http://developer.yahoo.com/yui/license.html"," *","*/","var YArray = Y.Array,","    ITSAMessageControllerInstance = Y.ITSAMessageController,","    ESSAGE = 'essage',","    MESSAGE = 'm'+ESSAGE,","    MAIL = 'mail',","    LOADICONSDELAY = 5000, // for gallerycss-itsa-form","    PROCESSING = '_processing',","    ERROR = 'error',","    WARN = 'warn',","    INFO = 'info',","    LEVEL = 'level',","    TARGET = 'target',","    SUSPENDED = '_suspended',","    NEWMESSAGE = 'new'+MESSAGE,","    DESTROYED = 'destroyed',","    PRIORITY = 'priority',","    EVT_LEVELCLEAR = 'levelclear',","    TIMEOUTRESOLVE = 'timeoutResolve',","    TIMEOUTREJECT = 'timeoutReject',","    GET = 'get',","    SHOW = 'show',","    CONFIRMATION = 'Confirmation',","    GET_RETRY_CONFIRMATION = GET+'Retry'+CONFIRMATION,","    GET_CONFIRMATION = GET+CONFIRMATION,","    GET_INPUT = GET+'Input',","    GET_NUMBER = GET+'Number',","    GET_EMAIL = GET+'E'+MAIL,","    GET_URL = GET+'URL',","    SHOW_MESSAGE = SHOW+'M'+ESSAGE,","    SHOW_WARNING = SHOW+'Warning',","    SHOW_ERROR = SHOW+'Error',","    SHOW_STATUS = SHOW+'Status',","    UNDERSCORE = '_',","    ITSADIALOG = 'itsadialog',","    AVAILABLE_LEVELS = {","        info: true,","        warn: true,","        error: true","    };","","function ITSAMessageViewer() {","    ITSAMessageViewer.superclass.constructor.apply(this, arguments);","}","","ITSAMessageViewer.NAME = 'itsamessageviewer';","Y.extend(ITSAMessageViewer, Y.Base);","","","/**"," * @method initializer"," * @protected"," * @since 0.1","*/","ITSAMessageViewer.prototype.initializer = function() {","    var instance = this;","","    /**","     * Flag that tells whether the MessageViewer can only handle simple messages: Y.showMessage(), showWarning()/Y.alert() and Y.showError().","     * @property simpleMessages","     * @default false","     * @type Boolean","     * @since 0.1","     */","    instance.simpleMessages = false;","","    /**","     * Holds the currently viewed message of all levels.","     * @property _lastMessage","     * @default {}","     * @private","     * @type Object","     * @since 0.1","     */","    instance._lastMessage = {};","","    /**","     * Unique name that is used to determine which messages it should handle","     *","     * @property _viewName","     * @private","     * @type String","     * @since 0.1","     */","    instance._viewName = Y.guid();","","    ITSAMessageControllerInstance.addTarget(instance);","    // now loading formicons with a delay --> should anyonde need it, then is nice to have the icons already available","    Y.later(LOADICONSDELAY, Y, Y.usePromise, ['gallerycss-itsa-base', 'gallerycss-itsa-animatespin', 'gallerycss-itsa-form']);","    instance._processQueue(INFO);","    instance._processQueue(WARN);","    instance._processQueue(ERROR);","};","","ITSAMessageViewer.prototype.countMessages = function(processed, level) {","    var instance = this,","        queue = ITSAMessageControllerInstance.queue,","        viewname = instance._viewName,","        simplemessages = instance.simpleMessages,","        total = 0,","        isTargeted, itsasimplemessage, validMessage, countLevel;","","    countLevel = function(onelevel) {","        var count = 0,","            handleAnonymous = (ITSAMessageControllerInstance._targets[onelevel]===viewname),","            handleAnonymousSimple = (ITSAMessageControllerInstance._simpleTargets[onelevel]===viewname);","        YArray.each(","            queue,","            function(itsamessage) {","                itsasimplemessage = itsamessage._simpleMessage;","                isTargeted = ((itsamessage[TARGET]===viewname) && (!simplemessages || itsasimplemessage)) || (!itsamessage[TARGET] && (itsasimplemessage ? handleAnonymousSimple : handleAnonymous));","                validMessage = isTargeted && (itsamessage[LEVEL]===onelevel) && (processed || !itsamessage[PROCESSING]);","/*jshint expr:true */","                validMessage && count++;","/*jshint expr:false */","            }","        );","        return count;","    };","/*jshint expr:true */","    ((level===INFO) || !level) && (total+=countLevel(INFO));","    ((level===WARN) || !level) && (total+=countLevel(WARN));","    ((level===ERROR) || !level) && (total+=countLevel(ERROR));","/*jshint expr:false */","    return total;","};","","/**"," * Makes this instance handle 'untargeted' messages of the specified level."," * If this.simpleMessage is set true, then only Y.showMessage, Y.showWarning, Y.alert and Y.showError messages are handled."," *"," * @method handleLevel"," * @param level {String} queue-level, should be either 'info', 'warn' or 'error'"," * @since 0.1","*/","ITSAMessageViewer.prototype.handleLevel = function(level) {","    var targetname = this._viewName;","    if (AVAILABLE_LEVELS[level]) {","        ITSAMessageControllerInstance._simpleTargets[level]=targetname;","/*jshint expr:true */","        this.simpleMessages || (ITSAMessageControllerInstance._targets[level]=targetname);","/*jshint expr:false */","    }","};","","/**"," * Makes the panel-instance -that belongs to the message- show up again, after it has been suspended.<br>"," * Should be overruled by a descendant-Class."," *"," * @method resurrect"," * @param itsamessage {Y.ITSAMessage} the Y.ITSAMessage-instance to be viewed."," * @since 0.1","*/","ITSAMessageViewer.prototype.resurrect = function(/* itsamessage */) {","    // should be overridden --> method that renderes the message in the dom","};","","/**"," * Makes the panel-instance -that belongs to the message- to hide, in order for a mesage at a higher level to show up.<br>"," * Should be overruled by a descendant-Class."," *"," * @method suspend"," * @param itsamessage {Y.ITSAMessage} the Y.ITSAMessage-instance to be viewed."," * @since 0.1","*/","ITSAMessageViewer.prototype.suspend = function(/* itsamessage */) {","    // could be overridden --> method that renderes the message in the dom","};","","/**"," * Views the message<br>"," * Should be overruled by a descendant-Class.<br>"," * <b>Note:</b> Make sure to return a Promise that fulfills when the message is read! otherwise all messsages are eaten up at once."," *"," * @method viewMessage"," * @param itsamessage {Y.ITSAMessage} the Y.ITSAMessage-instance to be viewed."," * @return {Y.Promise} will resolve when Y.ITSAMessage._promise gets fulfilled."," * @since 0.1","*/","ITSAMessageViewer.prototype.viewMessage = function(/* itsamessage */) {","    // should be overridden --> method that renderes the message in the dom","};","","/**"," * Cleans up bindings"," * @method destructor"," * @protected"," * @since 0.1","*/","ITSAMessageViewer.prototype.destructor = function() {","    var instance = this,","        targetname = instance._viewName,","        controllerTargets = ITSAMessageControllerInstance._targets,","        controllerSimpleTargets = ITSAMessageControllerInstance._simpleTargets;","    ITSAMessageControllerInstance.removeTarget(instance);","    // reset the target to 'itsadialog'","/*jshint expr:true */","    (controllerTargets[INFO]===targetname) && (controllerTargets[INFO]=ITSADIALOG);","    (controllerTargets[WARN]===targetname) && (controllerTargets[WARN]=ITSADIALOG);","    (controllerTargets[ERROR]===targetname) && (controllerTargets[ERROR]=ITSADIALOG);","    (controllerSimpleTargets[INFO]===targetname) && (controllerSimpleTargets[INFO]=ITSADIALOG);","    (controllerSimpleTargets[WARN]===targetname) && (controllerSimpleTargets[WARN]=ITSADIALOG);","    (controllerSimpleTargets[ERROR]===targetname) && (controllerSimpleTargets[ERROR]=ITSADIALOG);","/*jshint expr:false */","    instance._lastMessage = {};","};","","//--- private methods ---------------------------------------------------","","/**"," * Returns the next Y.ITSAMessage from the queue."," *"," * @method _nextMessagePromise"," * @param level {String} queue-level, should be either 'info', 'warn' or 'error'"," * @private"," * @return {Y.Promise} always returns a resolved Promise returning a Y.ITSAMessage-instance --> resolve(itsamessage)"," * @since 0.1","*/","ITSAMessageViewer.prototype._nextMessagePromise = function(level) {","    var instance = this;","    return ITSAMessageControllerInstance.isReady().then(","        function() {","            return new Y.Promise(function (resolve, reject) {","                var queue = ITSAMessageControllerInstance.queue,","                    viewname = instance._viewName,","                    simplemessages = instance.simpleMessages,","                    handleAnonymous = (ITSAMessageControllerInstance._targets[level]===viewname),","                    handleAnonymousSimple = (ITSAMessageControllerInstance._simpleTargets[level]===viewname),","                    nextMessage, listener, otherLevelMessage, destroylistener, isTargeted, itsasimplemessage;","/*jshint expr:true */","                instance.get(DESTROYED) && reject();","/*jshint expr:false */","                // first try to retrieve message with priority","                YArray.some(","                    queue,","                    function(itsamessage) {","                        itsasimplemessage = itsamessage._simpleMessage;","                        isTargeted = ((itsamessage[TARGET]===viewname) && (!simplemessages || itsasimplemessage)) || (!itsamessage[TARGET] && (itsasimplemessage ? handleAnonymousSimple : handleAnonymous));","                        nextMessage = isTargeted && (itsamessage[LEVEL]===level) && itsamessage[PRIORITY] && !itsamessage[PROCESSING] && itsamessage;","                        return nextMessage;","                    }","                );","                // if no prioritymessage, then try to retrieve message without priority","/*jshint expr:true */","                nextMessage || YArray.some(","                    queue,","                    function(itsamessage) {","                        itsasimplemessage = itsamessage._simpleMessage;","                        isTargeted = ((itsamessage[TARGET]===viewname) && (!simplemessages || itsasimplemessage)) || (!itsamessage[TARGET] && (itsasimplemessage ? handleAnonymousSimple : handleAnonymous));","                        nextMessage = isTargeted && (itsamessage[LEVEL]===level) && !itsamessage[PRIORITY] && !itsamessage[PROCESSING] && itsamessage;","                        return nextMessage;","                    }","                );","/*jshint expr:false */","                if (nextMessage) {","                    instance._lastMessage[level] = nextMessage;","                    // first: is level=warn or level=error then we might need to pauze previous levels","/*jshint expr:true */","                    // check if 'info' needs to be suspended:","                    (otherLevelMessage=instance._lastMessage[INFO]) && ((level!==INFO) || instance._lastMessage[WARN] || instance._lastMessage[ERROR]) &&","                        (otherLevelMessage[SUSPENDED]=true) && instance._suspend(otherLevelMessage);","                    // check if 'warn' needs to be suspended:","                    (otherLevelMessage=instance._lastMessage[WARN]) && ((level===ERROR) || instance._lastMessage[ERROR]) && (otherLevelMessage[SUSPENDED]=true) &&","                        instance._suspend(otherLevelMessage);","/*jshint expr:false */","                    resolve(nextMessage);","                }","                else {","                    // No message in the queue: wait for new messages to be added.","                    // first: is level=warn or level=error then we might need to reactivate previous levels","/*jshint expr:true */","                    if (level===ERROR) {","                        otherLevelMessage = instance._lastMessage[WARN] || instance._lastMessage[INFO];","                    }","                    else if ((level===WARN) && (!instance._lastMessage[ERROR])) {","                        otherLevelMessage = instance._lastMessage[INFO];","                    }","                    if (otherLevelMessage && otherLevelMessage[SUSPENDED]) {","                        otherLevelMessage[SUSPENDED] = false;","                        instance._resurrect(otherLevelMessage);","                    }","                    instance._lastMessage[level] = null;","                    // fire the levelclear-event to make 'waiting at other levels' at the first promise of _nextMessagePromise resolve:","                    (level!==INFO) && instance.fire(EVT_LEVELCLEAR);","/*jshint expr:false */","                    destroylistener = instance.once('destroy', reject);","                    listener=Y.on(NEWMESSAGE, function(e) {","                        var itsamessage = e.itsamessage;","                            itsasimplemessage = itsamessage._simpleMessage;","                            isTargeted = ((itsamessage[TARGET]===viewname) && (!simplemessages || itsasimplemessage)) || (!itsamessage[TARGET] && (itsasimplemessage ? handleAnonymousSimple : handleAnonymous));","                        if (isTargeted && (itsamessage[LEVEL]===level)) {","                            listener.detach();","                            destroylistener.detach();","                            instance._lastMessage[level] = itsamessage;","                    // next: is level=warn or level=error then we might need to pauze previous levels","/*jshint expr:true */","                            // check if 'info' needs to be suspended:","                            (otherLevelMessage=instance._lastMessage[INFO]) && ((level!==INFO) || instance._lastMessage[WARN] || instance._lastMessage[ERROR]) &&","                                (otherLevelMessage[SUSPENDED]=true) && instance._suspend(otherLevelMessage);","                            // check if 'warn' needs to be suspended:","                            (otherLevelMessage=instance._lastMessage[WARN]) && ((level===ERROR) || instance._lastMessage[ERROR]) && (otherLevelMessage[SUSPENDED]=true) &&","                                instance._suspend(otherLevelMessage);","/*jshint expr:false */","                            resolve(itsamessage);","                        }","                    });","                }","            });","        }","    ).then(","        function(itsamessage) {","            // if higher level is 'busy' then we need to wait until all those messages are cleaned up","            var proceed = (level===ERROR) || (!instance._lastMessage[ERROR] && ((level===WARN) || !instance._lastMessage[WARN]));","            return proceed ? itsamessage : new Y.Promise(function (resolve) {","                var listener = instance.on(EVT_LEVELCLEAR, function() {","                    proceed = (!instance._lastMessage[ERROR] && ((level===WARN) || !instance._lastMessage[WARN]));","/*jshint expr:true */","                    proceed && listener.detach() && resolve(itsamessage);","/*jshint expr:false */","                });","            });","        }","    );","};","","/**"," * Starts processing a queue-level. This will make messages (Y.ITSAMessage-instances) to be taken from Y.ITSAMessageController's queue and"," * to be handled by a descendant messageviewer, f.i. like Y.ITSADialog."," *"," * @method _processQueue"," * @param level {String} queue-level, should be either 'info', 'warn' or 'error'"," * @private"," * @since 0.1","*/","ITSAMessageViewer.prototype._processQueue = function(level) {","    var instance = this,","        handlePromise, handlePromiseLoop;","    handlePromise = function() {","        return instance._nextMessagePromise(level).then(","            function(itsamessage) {","                itsamessage[PROCESSING] = true;","/*jshint expr:true */","                (itsamessage[TIMEOUTRESOLVE] || itsamessage[TIMEOUTREJECT]) && itsamessage._startTimer();","/*jshint expr:false */","                return instance._viewMessage(itsamessage);","            }","        ).then(","            null,","            function(err) {","                // unfortunatly we cannot fire or log an error, because that could be caught by Y.ITSADialog and become a loop in the messageview","                // MUST log 'info'","            }","        );","    };","    handlePromiseLoop = function() {","        // will loop until rejected, which is at destruction of the class","        return instance.get(DESTROYED) || handlePromise().then(handlePromiseLoop, handlePromiseLoop);","    };","    handlePromiseLoop();","};","","/**"," * Calls resurrect() and also starts Y.ITSAMessage.timer - if appropriate."," *"," * @method _resurrect"," * @param itsamessage {Y.ITSAMessage} the Y.ITSAMessage-instance to be viewed."," * @private"," * @since 0.1","*/","ITSAMessageViewer.prototype._resurrect = function(itsamessage) {","    var instance = this;","    // should be overridden --> method that renderes the message in the dom","    if (!itsamessage.get(DESTROYED)) {","    /*jshint expr:true */","        (itsamessage[TIMEOUTRESOLVE] || itsamessage[TIMEOUTREJECT]) && itsamessage._startTimer();","    /*jshint expr:false */","        // first: play sound again:","        ITSAMessageControllerInstance.sound(itsamessage);","        instance.resurrect(itsamessage);","    }","};","","/**"," * Calls suspend() and also interrupts Y.ITSAMessage.timer - if appropriate."," *"," * @method _suspend"," * @param itsamessage {Y.ITSAMessage} the Y.ITSAMessage-instance to be viewed."," * @private"," * @since 0.1","*/","ITSAMessageViewer.prototype._suspend = function(itsamessage) {","    var instance = this;","/*jshint expr:true */","    (itsamessage[TIMEOUTRESOLVE] || itsamessage[TIMEOUTREJECT]) && itsamessage._stopTimer();","/*jshint expr:false */","    instance.suspend(itsamessage);","};","","/**"," * Views the message through viewMessage(), but also makes the Y.ITSAMessage-instance create sound<br>"," *"," * @method _viewMessage"," * @param itsamessage {Y.ITSAMessage} the Y.ITSAMessage-instance to be viewed."," * @private"," * @return {Y.Promise}"," * @since 0.1","*/","ITSAMessageViewer.prototype._viewMessage = function(itsamessage) {","    // should be overridden --> method that renderes the message in the dom","    ITSAMessageControllerInstance.sound(itsamessage);","    return this.viewMessage(itsamessage);","};","","Y.ITSAMessageViewer = ITSAMessageViewer;","","// define public methods:","","/**"," * Informs the user with a message and three buttons: 'abort', 'ignore', 'retry'.<br>"," * The promise can resolve by either 'ignore' or 'retry' and will reject by 'abort'. Once resolved, look for result.button"," * to find out which button the user pressed.<br>"," * <b>Note:</b> You need a descendant of Y.ITSAMessageViewer (f.i. Y.ITSADialog) to make the message be displayed!"," *"," * @method Y.getRetryConfirmation"," * @param [title] {String} The title of the message"," * @param [message] {String} The message"," * @param [config] {Object} Config passed through to the Y.ITSAMessage instance and the next additional properties:","     * @param [config.closeButton] {Boolean} whether the closebutton should be visible.","     *                               By setting this, you the default setting of closeButton is overruled.","     * @param [config.icon] {String} Classname of the iconfont, for instance 'itsaicon-dialog-info' --> see gallerycss-itsa-base for more info about iconfonts.","     *                               By setting this, you the default icon is overruled.","     * @param [config.imageButtons] {Boolean} Whether to display imagebuttons.","     * @param [config.level] {String} The message-level, should be either 'info', warn' or 'error'.","     * @param [config.priority] {boolean} By setting this, the message will be positioned in the queue above messages that have no priority.","     * @param [config.primaryButton] {String} Name of the primary button, f.i. 'btn_ok'.","     *                               By setting this, you the default primaryButton ('btn_retry') is overruled.","     * @param [config.source] {String} Identification of the source (sender) of the message, which is 'application' by default.","     * @param [config.target] {String} Classname of the Y.ITSAMessageViewer that is targeted and should hanlde the message.","     * @param [config.timeoutReject] {Number} Timeout after which the message's visiblilty should be rejected","     * @param [config.timeoutResolve] {Number} Timeout after which the message's visiblilty should be resolved"," * @return {Y.Promise} Promise that holds the user-response. Check 'button' to find out what button was pressed."," *                     resolve(result) --> result.button==='ignore' || 'retry' OR reject(reason) --> reason==='abort' or error"," * @since 0.1","*/","Y[GET_RETRY_CONFIRMATION] = Y.bind(ITSAMessageControllerInstance[UNDERSCORE+GET_RETRY_CONFIRMATION], ITSAMessageControllerInstance);","","/**"," * Alias for Y.getConfirmation.<br>"," * Informs the user with a message and two buttons: 'no' and 'yes'.<br>"," * The promise can resolve by 'yes and will reject by 'no'."," * <b>Note:</b> You need a descendant of Y.ITSAMessageViewer (f.i. Y.ITSADialog) to make the message be displayed!"," *"," * @method Y.confirm"," * @param [title] {String} The title of the message"," * @param [message] {String} The message"," * @param [config] {Object} Config passed through to the Y.ITSAMessage instance and the next additional properties:","     * @param [config.closeButton] {Boolean} whether the closebutton should be visible.","     *                               By setting this, you the default setting of closeButton is overruled.","     * @param [config.icon] {String} Classname of the iconfont, for instance 'itsaicon-dialog-info' --> see gallerycss-itsa-base for more info about iconfonts.","     *                               By setting this, you the default icon is overruled.","     * @param [config.imageButtons] {Boolean} Whether to display imagebuttons.","     * @param [config.level] {String} The message-level, should be either 'info', warn' or 'error'.","     * @param [config.priority] {boolean} By setting this, the message will be positioned in the queue above messages that have no priority.","     * @param [config.primaryButton] {String} Name of the primary button, f.i. 'btn_ok'.","     *                               By setting this, you the default primaryButton 'btn_yes' is overruled.","     * @param [config.source] {String} Identification of the source (sender) of the message, which is 'application' by default.","     * @param [config.target] {String} Classname of the Y.ITSAMessageViewer that is targeted and should hanlde the message.","     * @param [config.timeoutReject] {Number} Timeout after which the message's visiblilty should be rejected","     * @param [config.timeoutResolve] {Number} Timeout after which the message's visiblilty should be resolved"," * @return {Y.Promise} Promise that holds the user-response. Resolves by 'ok' and rejects by 'no'."," * @since 0.1","*/","","/**"," * Informs the user with a message and two buttons: 'no' and 'yes'.<br>"," * The promise can resolve by 'yes and will reject by 'no'."," * <b>Note:</b> You need a descendant of Y.ITSAMessageViewer (f.i. Y.ITSADialog) to make the message be displayed!"," *"," * @method Y.getConfirmation"," * @param [title] {String} The title of the message"," * @param [message] {String} The message"," * @param [config] {Object} Config passed through to the Y.ITSAMessage instance and the next additional properties:","     * @param [config.closeButton] {Boolean} whether the closebutton should be visible.","     *                               By setting this, you the default setting of closeButton is overruled.","     * @param [config.icon] {String} Classname of the iconfont, for instance 'itsaicon-dialog-info' --> see gallerycss-itsa-base for more info about iconfonts.","     *                               By setting this, you the default icon is overruled.","     * @param [config.imageButtons] {Boolean} Whether to display imagebuttons.","     * @param [config.level] {String} The message-level, should be either 'info', warn' or 'error'.","     * @param [config.priority] {boolean} By setting this, the message will be positioned in the queue above messages that have no priority.","     * @param [config.primaryButton] {String} Name of the primary button, f.i. 'btn_ok'.","     *                               By setting this, you the default primaryButton 'btn_yes' is overruled.","     * @param [config.source] {String} Identification of the source (sender) of the message, which is 'application' by default.","     * @param [config.target] {String} Classname of the Y.ITSAMessageViewer that is targeted and should hanlde the message.","     * @param [config.timeoutReject] {Number} Timeout after which the message's visiblilty should be rejected","     * @param [config.timeoutResolve] {Number} Timeout after which the message's visiblilty should be resolved"," * @return {Y.Promise} Promise that holds the user-response. Resolves by 'ok' and rejects by 'no'."," * @since 0.1","*/","Y.confirm = Y[GET_CONFIRMATION] = Y.bind(ITSAMessageControllerInstance[UNDERSCORE+GET_CONFIRMATION], ITSAMessageControllerInstance);","","/**"," * Asks the user for an url.<br>"," * <b>Note:</b> You need a descendant of Y.ITSAMessageViewer (f.i. Y.ITSADialog) to make the message be displayed!"," *"," * @method Y.getURL"," * @param [title] {String} The title of the message"," * @param [message] {String} The message"," * @param [config] {Object} Config passed through to the Y.ITSAMessage instance and the next additional properties:","     * @param [config.closeButton] {Boolean} whether the closebutton should be visible.","     *                               By setting this, you the default setting of closeButton is overruled.","     * @param [config.formconfig] {Object} Config that passes through to the UI-element. See Y.ITSAFormModel for usage of formconfig.","     * @param [config.icon] {String} Classname of the iconfont, for instance 'itsaicon-dialog-info' --> see gallerycss-itsa-base for more info about iconfonts.","     *                               By setting this, you the default icon is overruled.","     * @param [config.imageButtons] {Boolean} Whether to display imagebuttons.","     * @param [config.level] {String} The message-level, should be either 'info', warn' or 'error'.","     * @param [config.priority] {boolean} By setting this, the message will be positioned in the queue above messages that have no priority.","     * @param [config.primaryButton] {String} Name of the primary button, f.i. 'btn_ok'.","     *                               By setting this, you the default primaryButton is overruled.","     * @param [config.required] {Boolean} Makes the input required: the promise cannot be rejected, there is no cancel or close-button.","     * @param [config.source] {String} Identification of the source (sender) of the message, which is 'application' by default.","     * @param [config.target] {String} Classname of the Y.ITSAMessageViewer that is targeted and should hanlde the message.","     * @param [config.timeoutReject] {Number} Timeout after which the message's visiblilty should be rejected","     * @param [config.timeoutResolve] {Number} Timeout after which the message's visiblilty should be resolved","     * @param [config.validationerror] {String} Message that Y.Tipsy uses when validation fails.","     * @param [config.validator] {Function} Validator function for the UI-element","     * @param [config.value] {Any} Initial value that passes through to the UI-element."," * @return {Y.Promise} Promise that holds the user-response."," *                     resolve(result) --> result.input===the url OR reject(reason) --> reason==='cancel' or error"," * @since 0.1","*/","Y[GET_URL] = Y.bind(ITSAMessageControllerInstance[UNDERSCORE+GET_URL], ITSAMessageControllerInstance);","","/**"," * Asks the user for an emailaddress.<br>"," * <b>Note:</b> You need a descendant of Y.ITSAMessageViewer (f.i. Y.ITSADialog) to make the message be displayed!"," *"," * @method Y.getEmail"," * @param [title] {String} The title of the message"," * @param [message] {String} The message"," * @param [config] {Object} Config passed through to the Y.ITSAMessage instance and the next additional properties:","     * @param [config.closeButton] {Boolean} whether the closebutton should be visible.","     *                               By setting this, you the default setting of closeButton is overruled.","     * @param [config.formconfig] {Object} Config that passes through to the UI-element. See Y.ITSAFormModel for usage of formconfig.","     * @param [config.icon] {String} Classname of the iconfont, for instance 'itsaicon-dialog-info' --> see gallerycss-itsa-base for more info about iconfonts.","     *                               By setting this, you the default icon is overruled.","     * @param [config.imageButtons] {Boolean} Whether to display imagebuttons.","     * @param [config.level] {String} The message-level, should be either 'info', warn' or 'error'.","     * @param [config.priority] {boolean} By setting this, the message will be positioned in the queue above messages that have no priority.","     * @param [config.primaryButton] {String} Name of the primary button, f.i. 'btn_ok'.","     *                               By setting this, you the default primaryButton is overruled.","     * @param [config.required] {Boolean} Makes the input required: the promise cannot be rejected, there is no cancel or close-button.","     * @param [config.source] {String} Identification of the source (sender) of the message, which is 'application' by default.","     * @param [config.target] {String} Classname of the Y.ITSAMessageViewer that is targeted and should hanlde the message.","     * @param [config.timeoutReject] {Number} Timeout after which the message's visiblilty should be rejected","     * @param [config.timeoutResolve] {Number} Timeout after which the message's visiblilty should be resolved","     * @param [config.validationerror] {String} Message that Y.Tipsy uses when validation fails.","     * @param [config.validator] {Function} Validator function for the UI-element","     * @param [config.value] {Any} Initial value that passes through to the UI-element."," * @return {Y.Promise} Promise that holds the user-response."," *                     resolve(result) --> result.input===the emailaddress OR reject(reason) --> reason==='cancel' or error"," * @since 0.1","*/","Y[GET_EMAIL] = Y.bind(ITSAMessageControllerInstance[UNDERSCORE+GET_EMAIL], ITSAMessageControllerInstance);","","/**"," * Alias for Y.getInput.<br>"," * Asks the user for any input.<br>"," * <b>Note:</b> You need a descendant of Y.ITSAMessageViewer (f.i. Y.ITSADialog) to make the message be displayed!"," *"," * @method Y.prompt"," * @param [title] {String} The title of the message"," * @param [message] {String} The message"," * @param [config] {Object} Config passed through to the Y.ITSAMessage instance and the next additional properties:","     * @param [config.closeButton] {Boolean} whether the closebutton should be visible.","     *                               By setting this, you the default setting of closeButton is overruled.","     * @param [config.formconfig] {Object} Config that passes through to the UI-element. See Y.ITSAFormModel for usage of formconfig.","     * @param [config.icon] {String} Classname of the iconfont, for instance 'itsaicon-dialog-info' --> see gallerycss-itsa-base for more info about iconfonts.","     *                               By setting this, you the default icon is overruled.","     * @param [config.imageButtons] {Boolean} Whether to display imagebuttons.","     * @param [config.level] {String} The message-level, should be either 'info', warn' or 'error'.","     * @param [config.priority] {boolean} By setting this, the message will be positioned in the queue above messages that have no priority.","     * @param [config.primaryButton] {String} Name of the primary button, f.i. 'btn_ok'.","     *                               By setting this, you the default primaryButton is overruled.","     * @param [config.required] {Boolean} Makes the input required: the promise cannot be rejected, there is no cancel or close-button.","     * @param [config.source] {String} Identification of the source (sender) of the message, which is 'application' by default.","     * @param [config.target] {String} Classname of the Y.ITSAMessageViewer that is targeted and should hanlde the message.","     * @param [config.textarea] {Boolean} Render a textarea instead of an input-element.","     * @param [config.timeoutReject] {Number} Timeout after which the message's visiblilty should be rejected","     * @param [config.timeoutResolve] {Number} Timeout after which the message's visiblilty should be resolved","     * @param [config.validationerror] {String} Message that Y.Tipsy uses when validation fails.","     * @param [config.validator] {Function} Validator function for the UI-element","     * @param [config.value] {Any} Initial value that passes through to the UI-element."," * @return {Y.Promise} Promise that holds the user-response."," *                     resolve(result) --> result.input===the input OR reject(reason) --> reason==='cancel' or error"," * @since 0.1","*/","","/**"," * Asks the user for any input.<br>"," * <b>Note:</b> You need a descendant of Y.ITSAMessageViewer (f.i. Y.ITSADialog) to make the message be displayed!"," *"," * @method Y.getInput"," * @param [title] {String} The title of the message"," * @param [message] {String} The message"," * @param [config] {Object} Config passed through to the Y.ITSAMessage instance and the next additional properties:","     * @param [config.closeButton] {Boolean} whether the closebutton should be visible.","     *                               By setting this, you the default setting of closeButton is overruled.","     * @param [config.formconfig] {Object} Config that passes through to the UI-element. See Y.ITSAFormModel for usage of formconfig.","     * @param [config.icon] {String} Classname of the iconfont, for instance 'itsaicon-dialog-info' --> see gallerycss-itsa-base for more info about iconfonts.","     *                               By setting this, you the default icon is overruled.","     * @param [config.imageButtons] {Boolean} Whether to display imagebuttons.","     * @param [config.level] {String} The message-level, should be either 'info', warn' or 'error'.","     * @param [config.priority] {boolean} By setting this, the message will be positioned in the queue above messages that have no priority.","     * @param [config.primaryButton] {String} Name of the primary button, f.i. 'btn_ok'.","     *                               By setting this, you the default primaryButton is overruled.","     * @param [config.required] {Boolean} Makes the input required: the promise cannot be rejected, there is no cancel or close-button.","     * @param [config.source] {String} Identification of the source (sender) of the message, which is 'application' by default.","     * @param [config.target] {String} Classname of the Y.ITSAMessageViewer that is targeted and should hanlde the message.","     * @param [config.textarea] {Boolean} Render a textarea instead of an input-element.","     * @param [config.timeoutReject] {Number} Timeout after which the message's visiblilty should be rejected","     * @param [config.timeoutResolve] {Number} Timeout after which the message's visiblilty should be resolved","     * @param [config.validationerror] {String} Message that Y.Tipsy uses when validation fails.","     * @param [config.validator] {Function} Validator function for the UI-element","     * @param [config.value] {Any} Initial value that passes through to the UI-element."," * @return {Y.Promise} Promise that holds the user-response."," *                     resolve(result) --> result.input===the input OR reject(reason) --> reason==='cancel' or error"," * @since 0.1","*/","Y.prompt = Y[GET_INPUT] = Y.bind(ITSAMessageControllerInstance[UNDERSCORE+GET_INPUT], ITSAMessageControllerInstance);","","/**"," * Asks the user for a number.<br>"," * <b>Note:</b> You need a descendant of Y.ITSAMessageViewer (f.i. Y.ITSADialog) to make the message be displayed!"," *"," * @method Y.getNumber"," * @param [title] {String} The title of the message"," * @param [message] {String} The message"," * @param [config] {Object} Config passed through to the Y.ITSAMessage instance and the next additional properties:","     * @param [config.closeButton] {Boolean} whether the closebutton should be visible.","     *                               By setting this, you the default setting of closeButton is overruled.","     * @param [config.formconfig] {Object} Config that passes through to the UI-element. See Y.ITSAFormModel for usage of formconfig.","     * @param [config.icon] {String} Classname of the iconfont, for instance 'itsaicon-dialog-info' --> see gallerycss-itsa-base for more info about iconfonts.","     *                               By setting this, you the default icon is overruled.","     * @param [config.imageButtons] {Boolean} Whether to display imagebuttons.","     * @param [config.level] {String} The message-level, should be either 'info', warn' or 'error'.","     * @param [config.priority] {boolean} By setting this, the message will be positioned in the queue above messages that have no priority.","     * @param [config.primaryButton] {String} Name of the primary button, f.i. 'btn_ok'.","     *                               By setting this, you the default primaryButton is overruled.","     * @param [config.required] {Boolean} Makes the input required: the promise cannot be rejected, there is no cancel or close-button.","     * @param [config.source] {String} Identification of the source (sender) of the message, which is 'application' by default.","     * @param [config.target] {String} Classname of the Y.ITSAMessageViewer that is targeted and should hanlde the message.","     * @param [config.timeoutReject] {Number} Timeout after which the message's visiblilty should be rejected","     * @param [config.timeoutResolve] {Number} Timeout after which the message's visiblilty should be resolved","     * @param [config.validationerror] {String} Message that Y.Tipsy uses when validation fails.","     * @param [config.validator] {Function} Validator function for the UI-element","     * @param [config.value] {Any} Initial value that passes through to the UI-element."," * @return {Y.Promise} Promise that holds the user-response."," *                     resolve(result) --> result.number===the number OR reject(reason) --> reason==='cancel' or error"," * @since 0.1","*/","Y[GET_NUMBER] = Y.bind(ITSAMessageControllerInstance[UNDERSCORE+GET_NUMBER], ITSAMessageControllerInstance);","","/**"," * Shows a message.<br>"," * <b>Note:</b> You need a descendant of Y.ITSAMessageViewer (f.i. Y.ITSADialog) to make the message be displayed!"," *"," * @method Y.showMessage"," * @param [title] {String} The title of the message"," * @param [message] {String} The message"," * @param [config] {Object} Config passed through to the Y.ITSAMessage instance and the next additional properties:","     * @param [config.closeButton] {Boolean} whether the closebutton should be visible.","     *                               By setting this, you the default setting of closeButton is overruled.","     * @param [config.icon] {String} Classname of the iconfont, for instance 'itsaicon-dialog-info' --> see gallerycss-itsa-base for more info about iconfonts.","     *                               By setting this, you the default icon is overruled.","     * @param [config.imageButtons] {Boolean} Whether to display imagebuttons.","     * @param [config.level] {String} The message-level, should be either 'info', warn' or 'error'.","     * @param [config.priority] {boolean} By setting this, the message will be positioned in the queue above messages that have no priority.","     * @param [config.primaryButton] {String} Name of the primary button, f.i. 'btn_ok'.","     *                               By setting this, you the default primaryButton is overruled.","     * @param [config.source] {String} Identification of the source (sender) of the message, which is 'application' by default.","     * @param [config.target] {String} Classname of the Y.ITSAMessageViewer that is targeted and should hanlde the message.","     * @param [config.timeoutReject] {Number} Timeout after which the message's visiblilty should be rejected","     * @param [config.timeoutResolve] {Number} Timeout after which the message's visiblilty should be resolved"," * @return {Y.Promise} Promise that holds the user-response. Resolved once the user presses the 'ok'-button."," * @since 0.1","*/","Y[SHOW_MESSAGE] = Y.bind(ITSAMessageControllerInstance[UNDERSCORE+SHOW_MESSAGE], ITSAMessageControllerInstance);","","/**"," * Alias for Y.showWarning.<br>"," * Shows a warning. Because the level will be 'warn', the message has precedence above normal messages.<br>"," * <b>Note:</b> You need a descendant of Y.ITSAMessageViewer (f.i. Y.ITSADialog) to make the message be displayed!"," *"," * @method Y.alert"," * @param [title] {String} The title of the message"," * @param [message] {String} The message"," * @param [config] {Object} Config passed through to the Y.ITSAMessage instance and the next additional properties:","     * @param [config.closeButton] {Boolean} whether the closebutton should be visible.","     *                               By setting this, you the default setting of closeButton is overruled.","     * @param [config.icon] {String} Classname of the iconfont, for instance 'itsaicon-dialog-info' --> see gallerycss-itsa-base for more info about iconfonts.","     *                               By setting this, you the default icon is overruled.","     * @param [config.imageButtons] {Boolean} Whether to display imagebuttons.","     * @param [config.level] {String} The message-level, should be either 'info', warn' or 'error'.","     * @param [config.priority] {boolean} By setting this, the message will be positioned in the queue above messages that have no priority.","     * @param [config.primaryButton] {String} Name of the primary button, f.i. 'btn_ok'.","     *                               By setting this, you the default primaryButton is overruled.","     * @param [config.source] {String} Identification of the source (sender) of the message, which is 'application' by default.","     * @param [config.target] {String} Classname of the Y.ITSAMessageViewer that is targeted and should hanlde the message.","     * @param [config.timeoutReject] {Number} Timeout after which the message's visiblilty should be rejected","     * @param [config.timeoutResolve] {Number} Timeout after which the message's visiblilty should be resolved"," * @return {Y.Promise} Promise that holds the user-response. Resolved once the user presses the 'ok'-button."," * @since 0.1","*/","","/**"," * Shows a warning. Because the level will be 'warn', the message has precedence above normal messages.<br>"," * <b>Note:</b> You need a descendant of Y.ITSAMessageViewer (f.i. Y.ITSADialog) to make the message be displayed!"," *"," * @method Y.showWarning"," * @param [title] {String} The title of the message"," * @param [message] {String} The message"," * @param [config] {Object} Config passed through to the Y.ITSAMessage instance and the next additional properties:","     * @param [config.closeButton] {Boolean} whether the closebutton should be visible.","     *                               By setting this, you the default setting of closeButton is overruled.","     * @param [config.icon] {String} Classname of the iconfont, for instance 'itsaicon-dialog-info' --> see gallerycss-itsa-base for more info about iconfonts.","     *                               By setting this, you the default icon is overruled.","     * @param [config.imageButtons] {Boolean} Whether to display imagebuttons.","     * @param [config.level] {String} The message-level, should be either 'info', warn' or 'error'.","     * @param [config.priority] {boolean} By setting this, the message will be positioned in the queue above messages that have no priority.","     * @param [config.primaryButton] {String} Name of the primary button, f.i. 'btn_ok'.","     *                               By setting this, you the default primaryButton is overruled.","     * @param [config.source] {String} Identification of the source (sender) of the message, which is 'application' by default.","     * @param [config.target] {String} Classname of the Y.ITSAMessageViewer that is targeted and should hanlde the message.","     * @param [config.timeoutReject] {Number} Timeout after which the message's visiblilty should be rejected","     * @param [config.timeoutResolve] {Number} Timeout after which the message's visiblilty should be resolved"," * @return {Y.Promise} Promise that holds the user-response. Resolved once the user presses the 'ok'-button."," * @since 0.1","*/","Y.alert = Y[SHOW_WARNING] = Y.bind(ITSAMessageControllerInstance[UNDERSCORE+SHOW_WARNING], ITSAMessageControllerInstance);","","/**"," * Shows an error. Because the level will be 'error', the message has precedence above warnings and normal messages.<br>"," * <b>Note:</b> You need a descendant of Y.ITSAMessageViewer (f.i. Y.ITSADialog) to make the message be displayed!"," *"," * @method Y.showError"," * @param [title] {String} The title of the message"," * @param [message] {String} The message"," * @param [config] {Object} Config passed through to the Y.ITSAMessage instance and the next additional properties:","     * @param [config.closeButton] {Boolean} whether the closebutton should be visible.","     *                               By setting this, you the default setting of closeButton is overruled.","     * @param [config.icon] {String} Classname of the iconfont, for instance 'itsaicon-dialog-info' --> see gallerycss-itsa-base for more info about iconfonts.","     *                               By setting this, you the default icon is overruled.","     * @param [config.imageButtons] {Boolean} Whether to display imagebuttons.","     * @param [config.level] {String} The message-level, should be either 'info', warn' or 'error'.","     * @param [config.priority] {boolean} By setting this, the message will be positioned in the queue above messages that have no priority.","     * @param [config.primaryButton] {String} Name of the primary button, f.i. 'btn_ok'.","     *                               By setting this, you the default primaryButton is overruled.","     * @param [config.source] {String} Identification of the source (sender) of the message, which is 'application' by default.","     * @param [config.target] {String} Classname of the Y.ITSAMessageViewer that is targeted and should hanlde the message.","     * @param [config.timeoutReject] {Number} Timeout after which the message's visiblilty should be rejected","     * @param [config.timeoutResolve] {Number} Timeout after which the message's visiblilty should be resolved"," * @return {Y.Promise} Promise that holds the user-response. Resolved once the user presses the 'ok'-button."," * @since 0.1","*/","Y[SHOW_ERROR] = Y.bind(ITSAMessageControllerInstance[UNDERSCORE+SHOW_ERROR], ITSAMessageControllerInstance);","","/**"," * Returns a promise with reference to the ITSAMessage-instance. The message itself is NOT fullfilled yet!<br>"," * Because there are no buttons to make it fullfilled, you must fullfil the message through itsamessage.resolve() or itsamessage.reject()<br>"," * <b>Note:</b> You need a descendant of Y.ITSAMessageViewer (f.i. Y.ITSADialog) to make the message be displayed!"," *"," * @method Y.showStatus"," * @param [title] {String} The title of the message"," * @param [message] {String} The message"," * @param [config] {Object} Config passed through to the Y.ITSAMessage instance and the next additional properties:","     * @param [config.closeButton] {Boolean} whether the closebutton should be visible.","     *                               By setting this, you the default setting of closeButton is overruled.","     * @param [config.icon] {String} Classname of the iconfont, for instance 'itsaicon-dialog-info' --> see gallerycss-itsa-base for more info about iconfonts.","     *                               By setting this, you the default icon is overruled.","     * @param [config.imageButtons] {Boolean} Whether to display imagebuttons.","     * @param [config.level] {String} The message-level, should be either 'info', warn' or 'error'.","     * @param [config.priority] {boolean} By setting this, the message will be positioned in the queue above messages that have no priority.","     * @param [config.primaryButton] {String} Name of the primary button, f.i. 'btn_ok'.","     *                               By setting this, you the default primaryButton is overruled.","     * @param [config.source] {String} Identification of the source (sender) of the message, which is 'application' by default.","     * @param [config.target] {String} Classname of the Y.ITSAMessageViewer that is targeted and should hanlde the message.","     * @param [config.timeoutReject] {Number} Timeout after which the message's visiblilty should be rejected","     * @param [config.timeoutResolve] {Number} Timeout after which the message's visiblilty should be resolved"," * @return {Y.Promise} Promise that holds the user-response. Resolves or rejects manually."," * @since 0.1","*/","Y[SHOW_STATUS] = Y.bind(ITSAMessageControllerInstance[UNDERSCORE+SHOW_STATUS], ITSAMessageControllerInstance);","","}, '@VERSION@', {","    \"requires\": [","        \"yui-base\",","        \"yui-later\",","        \"timers\",","        \"promise\",","        \"gallery-itsamodulesloadedpromise\",","        \"gallery-itsamessagecontroller\"","    ]","});","","}());"]};
}
var __cov_txyE0gLtgLEWSON5vNGHVQ = __coverage__['build/gallery-itsamessageviewer/gallery-itsamessageviewer.js'];
__cov_txyE0gLtgLEWSON5vNGHVQ.s['1']++;YUI.add('gallery-itsamessageviewer',function(Y,NAME){'use strict';__cov_txyE0gLtgLEWSON5vNGHVQ.f['1']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['2']++;var YArray=Y.Array,ITSAMessageControllerInstance=Y.ITSAMessageController,ESSAGE='essage',MESSAGE='m'+ESSAGE,MAIL='mail',LOADICONSDELAY=5000,PROCESSING='_processing',ERROR='error',WARN='warn',INFO='info',LEVEL='level',TARGET='target',SUSPENDED='_suspended',NEWMESSAGE='new'+MESSAGE,DESTROYED='destroyed',PRIORITY='priority',EVT_LEVELCLEAR='levelclear',TIMEOUTRESOLVE='timeoutResolve',TIMEOUTREJECT='timeoutReject',GET='get',SHOW='show',CONFIRMATION='Confirmation',GET_RETRY_CONFIRMATION=GET+'Retry'+CONFIRMATION,GET_CONFIRMATION=GET+CONFIRMATION,GET_INPUT=GET+'Input',GET_NUMBER=GET+'Number',GET_EMAIL=GET+'E'+MAIL,GET_URL=GET+'URL',SHOW_MESSAGE=SHOW+'M'+ESSAGE,SHOW_WARNING=SHOW+'Warning',SHOW_ERROR=SHOW+'Error',SHOW_STATUS=SHOW+'Status',UNDERSCORE='_',ITSADIALOG='itsadialog',AVAILABLE_LEVELS={info:true,warn:true,error:true};__cov_txyE0gLtgLEWSON5vNGHVQ.s['3']++;function ITSAMessageViewer(){__cov_txyE0gLtgLEWSON5vNGHVQ.f['2']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['4']++;ITSAMessageViewer.superclass.constructor.apply(this,arguments);}__cov_txyE0gLtgLEWSON5vNGHVQ.s['5']++;ITSAMessageViewer.NAME='itsamessageviewer';__cov_txyE0gLtgLEWSON5vNGHVQ.s['6']++;Y.extend(ITSAMessageViewer,Y.Base);__cov_txyE0gLtgLEWSON5vNGHVQ.s['7']++;ITSAMessageViewer.prototype.initializer=function(){__cov_txyE0gLtgLEWSON5vNGHVQ.f['3']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['8']++;var instance=this;__cov_txyE0gLtgLEWSON5vNGHVQ.s['9']++;instance.simpleMessages=false;__cov_txyE0gLtgLEWSON5vNGHVQ.s['10']++;instance._lastMessage={};__cov_txyE0gLtgLEWSON5vNGHVQ.s['11']++;instance._viewName=Y.guid();__cov_txyE0gLtgLEWSON5vNGHVQ.s['12']++;ITSAMessageControllerInstance.addTarget(instance);__cov_txyE0gLtgLEWSON5vNGHVQ.s['13']++;Y.later(LOADICONSDELAY,Y,Y.usePromise,['gallerycss-itsa-base','gallerycss-itsa-animatespin','gallerycss-itsa-form']);__cov_txyE0gLtgLEWSON5vNGHVQ.s['14']++;instance._processQueue(INFO);__cov_txyE0gLtgLEWSON5vNGHVQ.s['15']++;instance._processQueue(WARN);__cov_txyE0gLtgLEWSON5vNGHVQ.s['16']++;instance._processQueue(ERROR);};__cov_txyE0gLtgLEWSON5vNGHVQ.s['17']++;ITSAMessageViewer.prototype.countMessages=function(processed,level){__cov_txyE0gLtgLEWSON5vNGHVQ.f['4']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['18']++;var instance=this,queue=ITSAMessageControllerInstance.queue,viewname=instance._viewName,simplemessages=instance.simpleMessages,total=0,isTargeted,itsasimplemessage,validMessage,countLevel;__cov_txyE0gLtgLEWSON5vNGHVQ.s['19']++;countLevel=function(onelevel){__cov_txyE0gLtgLEWSON5vNGHVQ.f['5']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['20']++;var count=0,handleAnonymous=ITSAMessageControllerInstance._targets[onelevel]===viewname,handleAnonymousSimple=ITSAMessageControllerInstance._simpleTargets[onelevel]===viewname;__cov_txyE0gLtgLEWSON5vNGHVQ.s['21']++;YArray.each(queue,function(itsamessage){__cov_txyE0gLtgLEWSON5vNGHVQ.f['6']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['22']++;itsasimplemessage=itsamessage._simpleMessage;__cov_txyE0gLtgLEWSON5vNGHVQ.s['23']++;isTargeted=(__cov_txyE0gLtgLEWSON5vNGHVQ.b['1'][0]++,itsamessage[TARGET]===viewname)&&((__cov_txyE0gLtgLEWSON5vNGHVQ.b['1'][1]++,!simplemessages)||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['1'][2]++,itsasimplemessage))||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['1'][3]++,!itsamessage[TARGET])&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['1'][4]++,itsasimplemessage?(__cov_txyE0gLtgLEWSON5vNGHVQ.b['2'][0]++,handleAnonymousSimple):(__cov_txyE0gLtgLEWSON5vNGHVQ.b['2'][1]++,handleAnonymous));__cov_txyE0gLtgLEWSON5vNGHVQ.s['24']++;validMessage=(__cov_txyE0gLtgLEWSON5vNGHVQ.b['3'][0]++,isTargeted)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['3'][1]++,itsamessage[LEVEL]===onelevel)&&((__cov_txyE0gLtgLEWSON5vNGHVQ.b['3'][2]++,processed)||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['3'][3]++,!itsamessage[PROCESSING]));__cov_txyE0gLtgLEWSON5vNGHVQ.s['25']++;(__cov_txyE0gLtgLEWSON5vNGHVQ.b['4'][0]++,validMessage)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['4'][1]++,count++);});__cov_txyE0gLtgLEWSON5vNGHVQ.s['26']++;return count;};__cov_txyE0gLtgLEWSON5vNGHVQ.s['27']++;((__cov_txyE0gLtgLEWSON5vNGHVQ.b['5'][0]++,level===INFO)||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['5'][1]++,!level))&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['5'][2]++,total+=countLevel(INFO));__cov_txyE0gLtgLEWSON5vNGHVQ.s['28']++;((__cov_txyE0gLtgLEWSON5vNGHVQ.b['6'][0]++,level===WARN)||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['6'][1]++,!level))&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['6'][2]++,total+=countLevel(WARN));__cov_txyE0gLtgLEWSON5vNGHVQ.s['29']++;((__cov_txyE0gLtgLEWSON5vNGHVQ.b['7'][0]++,level===ERROR)||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['7'][1]++,!level))&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['7'][2]++,total+=countLevel(ERROR));__cov_txyE0gLtgLEWSON5vNGHVQ.s['30']++;return total;};__cov_txyE0gLtgLEWSON5vNGHVQ.s['31']++;ITSAMessageViewer.prototype.handleLevel=function(level){__cov_txyE0gLtgLEWSON5vNGHVQ.f['7']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['32']++;var targetname=this._viewName;__cov_txyE0gLtgLEWSON5vNGHVQ.s['33']++;if(AVAILABLE_LEVELS[level]){__cov_txyE0gLtgLEWSON5vNGHVQ.b['8'][0]++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['34']++;ITSAMessageControllerInstance._simpleTargets[level]=targetname;__cov_txyE0gLtgLEWSON5vNGHVQ.s['35']++;(__cov_txyE0gLtgLEWSON5vNGHVQ.b['9'][0]++,this.simpleMessages)||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['9'][1]++,ITSAMessageControllerInstance._targets[level]=targetname);}else{__cov_txyE0gLtgLEWSON5vNGHVQ.b['8'][1]++;}};__cov_txyE0gLtgLEWSON5vNGHVQ.s['36']++;ITSAMessageViewer.prototype.resurrect=function(){__cov_txyE0gLtgLEWSON5vNGHVQ.f['8']++;};__cov_txyE0gLtgLEWSON5vNGHVQ.s['37']++;ITSAMessageViewer.prototype.suspend=function(){__cov_txyE0gLtgLEWSON5vNGHVQ.f['9']++;};__cov_txyE0gLtgLEWSON5vNGHVQ.s['38']++;ITSAMessageViewer.prototype.viewMessage=function(){__cov_txyE0gLtgLEWSON5vNGHVQ.f['10']++;};__cov_txyE0gLtgLEWSON5vNGHVQ.s['39']++;ITSAMessageViewer.prototype.destructor=function(){__cov_txyE0gLtgLEWSON5vNGHVQ.f['11']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['40']++;var instance=this,targetname=instance._viewName,controllerTargets=ITSAMessageControllerInstance._targets,controllerSimpleTargets=ITSAMessageControllerInstance._simpleTargets;__cov_txyE0gLtgLEWSON5vNGHVQ.s['41']++;ITSAMessageControllerInstance.removeTarget(instance);__cov_txyE0gLtgLEWSON5vNGHVQ.s['42']++;(__cov_txyE0gLtgLEWSON5vNGHVQ.b['10'][0]++,controllerTargets[INFO]===targetname)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['10'][1]++,controllerTargets[INFO]=ITSADIALOG);__cov_txyE0gLtgLEWSON5vNGHVQ.s['43']++;(__cov_txyE0gLtgLEWSON5vNGHVQ.b['11'][0]++,controllerTargets[WARN]===targetname)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['11'][1]++,controllerTargets[WARN]=ITSADIALOG);__cov_txyE0gLtgLEWSON5vNGHVQ.s['44']++;(__cov_txyE0gLtgLEWSON5vNGHVQ.b['12'][0]++,controllerTargets[ERROR]===targetname)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['12'][1]++,controllerTargets[ERROR]=ITSADIALOG);__cov_txyE0gLtgLEWSON5vNGHVQ.s['45']++;(__cov_txyE0gLtgLEWSON5vNGHVQ.b['13'][0]++,controllerSimpleTargets[INFO]===targetname)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['13'][1]++,controllerSimpleTargets[INFO]=ITSADIALOG);__cov_txyE0gLtgLEWSON5vNGHVQ.s['46']++;(__cov_txyE0gLtgLEWSON5vNGHVQ.b['14'][0]++,controllerSimpleTargets[WARN]===targetname)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['14'][1]++,controllerSimpleTargets[WARN]=ITSADIALOG);__cov_txyE0gLtgLEWSON5vNGHVQ.s['47']++;(__cov_txyE0gLtgLEWSON5vNGHVQ.b['15'][0]++,controllerSimpleTargets[ERROR]===targetname)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['15'][1]++,controllerSimpleTargets[ERROR]=ITSADIALOG);__cov_txyE0gLtgLEWSON5vNGHVQ.s['48']++;instance._lastMessage={};};__cov_txyE0gLtgLEWSON5vNGHVQ.s['49']++;ITSAMessageViewer.prototype._nextMessagePromise=function(level){__cov_txyE0gLtgLEWSON5vNGHVQ.f['12']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['50']++;var instance=this;__cov_txyE0gLtgLEWSON5vNGHVQ.s['51']++;return ITSAMessageControllerInstance.isReady().then(function(){__cov_txyE0gLtgLEWSON5vNGHVQ.f['13']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['52']++;return new Y.Promise(function(resolve,reject){__cov_txyE0gLtgLEWSON5vNGHVQ.f['14']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['53']++;var queue=ITSAMessageControllerInstance.queue,viewname=instance._viewName,simplemessages=instance.simpleMessages,handleAnonymous=ITSAMessageControllerInstance._targets[level]===viewname,handleAnonymousSimple=ITSAMessageControllerInstance._simpleTargets[level]===viewname,nextMessage,listener,otherLevelMessage,destroylistener,isTargeted,itsasimplemessage;__cov_txyE0gLtgLEWSON5vNGHVQ.s['54']++;(__cov_txyE0gLtgLEWSON5vNGHVQ.b['16'][0]++,instance.get(DESTROYED))&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['16'][1]++,reject());__cov_txyE0gLtgLEWSON5vNGHVQ.s['55']++;YArray.some(queue,function(itsamessage){__cov_txyE0gLtgLEWSON5vNGHVQ.f['15']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['56']++;itsasimplemessage=itsamessage._simpleMessage;__cov_txyE0gLtgLEWSON5vNGHVQ.s['57']++;isTargeted=(__cov_txyE0gLtgLEWSON5vNGHVQ.b['17'][0]++,itsamessage[TARGET]===viewname)&&((__cov_txyE0gLtgLEWSON5vNGHVQ.b['17'][1]++,!simplemessages)||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['17'][2]++,itsasimplemessage))||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['17'][3]++,!itsamessage[TARGET])&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['17'][4]++,itsasimplemessage?(__cov_txyE0gLtgLEWSON5vNGHVQ.b['18'][0]++,handleAnonymousSimple):(__cov_txyE0gLtgLEWSON5vNGHVQ.b['18'][1]++,handleAnonymous));__cov_txyE0gLtgLEWSON5vNGHVQ.s['58']++;nextMessage=(__cov_txyE0gLtgLEWSON5vNGHVQ.b['19'][0]++,isTargeted)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['19'][1]++,itsamessage[LEVEL]===level)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['19'][2]++,itsamessage[PRIORITY])&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['19'][3]++,!itsamessage[PROCESSING])&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['19'][4]++,itsamessage);__cov_txyE0gLtgLEWSON5vNGHVQ.s['59']++;return nextMessage;});__cov_txyE0gLtgLEWSON5vNGHVQ.s['60']++;(__cov_txyE0gLtgLEWSON5vNGHVQ.b['20'][0]++,nextMessage)||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['20'][1]++,YArray.some(queue,function(itsamessage){__cov_txyE0gLtgLEWSON5vNGHVQ.f['16']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['61']++;itsasimplemessage=itsamessage._simpleMessage;__cov_txyE0gLtgLEWSON5vNGHVQ.s['62']++;isTargeted=(__cov_txyE0gLtgLEWSON5vNGHVQ.b['21'][0]++,itsamessage[TARGET]===viewname)&&((__cov_txyE0gLtgLEWSON5vNGHVQ.b['21'][1]++,!simplemessages)||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['21'][2]++,itsasimplemessage))||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['21'][3]++,!itsamessage[TARGET])&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['21'][4]++,itsasimplemessage?(__cov_txyE0gLtgLEWSON5vNGHVQ.b['22'][0]++,handleAnonymousSimple):(__cov_txyE0gLtgLEWSON5vNGHVQ.b['22'][1]++,handleAnonymous));__cov_txyE0gLtgLEWSON5vNGHVQ.s['63']++;nextMessage=(__cov_txyE0gLtgLEWSON5vNGHVQ.b['23'][0]++,isTargeted)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['23'][1]++,itsamessage[LEVEL]===level)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['23'][2]++,!itsamessage[PRIORITY])&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['23'][3]++,!itsamessage[PROCESSING])&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['23'][4]++,itsamessage);__cov_txyE0gLtgLEWSON5vNGHVQ.s['64']++;return nextMessage;}));__cov_txyE0gLtgLEWSON5vNGHVQ.s['65']++;if(nextMessage){__cov_txyE0gLtgLEWSON5vNGHVQ.b['24'][0]++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['66']++;instance._lastMessage[level]=nextMessage;__cov_txyE0gLtgLEWSON5vNGHVQ.s['67']++;(__cov_txyE0gLtgLEWSON5vNGHVQ.b['25'][0]++,otherLevelMessage=instance._lastMessage[INFO])&&((__cov_txyE0gLtgLEWSON5vNGHVQ.b['25'][1]++,level!==INFO)||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['25'][2]++,instance._lastMessage[WARN])||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['25'][3]++,instance._lastMessage[ERROR]))&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['25'][4]++,otherLevelMessage[SUSPENDED]=true)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['25'][5]++,instance._suspend(otherLevelMessage));__cov_txyE0gLtgLEWSON5vNGHVQ.s['68']++;(__cov_txyE0gLtgLEWSON5vNGHVQ.b['26'][0]++,otherLevelMessage=instance._lastMessage[WARN])&&((__cov_txyE0gLtgLEWSON5vNGHVQ.b['26'][1]++,level===ERROR)||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['26'][2]++,instance._lastMessage[ERROR]))&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['26'][3]++,otherLevelMessage[SUSPENDED]=true)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['26'][4]++,instance._suspend(otherLevelMessage));__cov_txyE0gLtgLEWSON5vNGHVQ.s['69']++;resolve(nextMessage);}else{__cov_txyE0gLtgLEWSON5vNGHVQ.b['24'][1]++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['70']++;if(level===ERROR){__cov_txyE0gLtgLEWSON5vNGHVQ.b['27'][0]++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['71']++;otherLevelMessage=(__cov_txyE0gLtgLEWSON5vNGHVQ.b['28'][0]++,instance._lastMessage[WARN])||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['28'][1]++,instance._lastMessage[INFO]);}else{__cov_txyE0gLtgLEWSON5vNGHVQ.b['27'][1]++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['72']++;if((__cov_txyE0gLtgLEWSON5vNGHVQ.b['30'][0]++,level===WARN)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['30'][1]++,!instance._lastMessage[ERROR])){__cov_txyE0gLtgLEWSON5vNGHVQ.b['29'][0]++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['73']++;otherLevelMessage=instance._lastMessage[INFO];}else{__cov_txyE0gLtgLEWSON5vNGHVQ.b['29'][1]++;}}__cov_txyE0gLtgLEWSON5vNGHVQ.s['74']++;if((__cov_txyE0gLtgLEWSON5vNGHVQ.b['32'][0]++,otherLevelMessage)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['32'][1]++,otherLevelMessage[SUSPENDED])){__cov_txyE0gLtgLEWSON5vNGHVQ.b['31'][0]++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['75']++;otherLevelMessage[SUSPENDED]=false;__cov_txyE0gLtgLEWSON5vNGHVQ.s['76']++;instance._resurrect(otherLevelMessage);}else{__cov_txyE0gLtgLEWSON5vNGHVQ.b['31'][1]++;}__cov_txyE0gLtgLEWSON5vNGHVQ.s['77']++;instance._lastMessage[level]=null;__cov_txyE0gLtgLEWSON5vNGHVQ.s['78']++;(__cov_txyE0gLtgLEWSON5vNGHVQ.b['33'][0]++,level!==INFO)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['33'][1]++,instance.fire(EVT_LEVELCLEAR));__cov_txyE0gLtgLEWSON5vNGHVQ.s['79']++;destroylistener=instance.once('destroy',reject);__cov_txyE0gLtgLEWSON5vNGHVQ.s['80']++;listener=Y.on(NEWMESSAGE,function(e){__cov_txyE0gLtgLEWSON5vNGHVQ.f['17']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['81']++;var itsamessage=e.itsamessage;__cov_txyE0gLtgLEWSON5vNGHVQ.s['82']++;itsasimplemessage=itsamessage._simpleMessage;__cov_txyE0gLtgLEWSON5vNGHVQ.s['83']++;isTargeted=(__cov_txyE0gLtgLEWSON5vNGHVQ.b['34'][0]++,itsamessage[TARGET]===viewname)&&((__cov_txyE0gLtgLEWSON5vNGHVQ.b['34'][1]++,!simplemessages)||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['34'][2]++,itsasimplemessage))||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['34'][3]++,!itsamessage[TARGET])&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['34'][4]++,itsasimplemessage?(__cov_txyE0gLtgLEWSON5vNGHVQ.b['35'][0]++,handleAnonymousSimple):(__cov_txyE0gLtgLEWSON5vNGHVQ.b['35'][1]++,handleAnonymous));__cov_txyE0gLtgLEWSON5vNGHVQ.s['84']++;if((__cov_txyE0gLtgLEWSON5vNGHVQ.b['37'][0]++,isTargeted)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['37'][1]++,itsamessage[LEVEL]===level)){__cov_txyE0gLtgLEWSON5vNGHVQ.b['36'][0]++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['85']++;listener.detach();__cov_txyE0gLtgLEWSON5vNGHVQ.s['86']++;destroylistener.detach();__cov_txyE0gLtgLEWSON5vNGHVQ.s['87']++;instance._lastMessage[level]=itsamessage;__cov_txyE0gLtgLEWSON5vNGHVQ.s['88']++;(__cov_txyE0gLtgLEWSON5vNGHVQ.b['38'][0]++,otherLevelMessage=instance._lastMessage[INFO])&&((__cov_txyE0gLtgLEWSON5vNGHVQ.b['38'][1]++,level!==INFO)||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['38'][2]++,instance._lastMessage[WARN])||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['38'][3]++,instance._lastMessage[ERROR]))&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['38'][4]++,otherLevelMessage[SUSPENDED]=true)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['38'][5]++,instance._suspend(otherLevelMessage));__cov_txyE0gLtgLEWSON5vNGHVQ.s['89']++;(__cov_txyE0gLtgLEWSON5vNGHVQ.b['39'][0]++,otherLevelMessage=instance._lastMessage[WARN])&&((__cov_txyE0gLtgLEWSON5vNGHVQ.b['39'][1]++,level===ERROR)||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['39'][2]++,instance._lastMessage[ERROR]))&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['39'][3]++,otherLevelMessage[SUSPENDED]=true)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['39'][4]++,instance._suspend(otherLevelMessage));__cov_txyE0gLtgLEWSON5vNGHVQ.s['90']++;resolve(itsamessage);}else{__cov_txyE0gLtgLEWSON5vNGHVQ.b['36'][1]++;}});}});}).then(function(itsamessage){__cov_txyE0gLtgLEWSON5vNGHVQ.f['18']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['91']++;var proceed=(__cov_txyE0gLtgLEWSON5vNGHVQ.b['40'][0]++,level===ERROR)||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['40'][1]++,!instance._lastMessage[ERROR])&&((__cov_txyE0gLtgLEWSON5vNGHVQ.b['40'][2]++,level===WARN)||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['40'][3]++,!instance._lastMessage[WARN]));__cov_txyE0gLtgLEWSON5vNGHVQ.s['92']++;return proceed?(__cov_txyE0gLtgLEWSON5vNGHVQ.b['41'][0]++,itsamessage):(__cov_txyE0gLtgLEWSON5vNGHVQ.b['41'][1]++,new Y.Promise(function(resolve){__cov_txyE0gLtgLEWSON5vNGHVQ.f['19']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['93']++;var listener=instance.on(EVT_LEVELCLEAR,function(){__cov_txyE0gLtgLEWSON5vNGHVQ.f['20']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['94']++;proceed=(__cov_txyE0gLtgLEWSON5vNGHVQ.b['42'][0]++,!instance._lastMessage[ERROR])&&((__cov_txyE0gLtgLEWSON5vNGHVQ.b['42'][1]++,level===WARN)||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['42'][2]++,!instance._lastMessage[WARN]));__cov_txyE0gLtgLEWSON5vNGHVQ.s['95']++;(__cov_txyE0gLtgLEWSON5vNGHVQ.b['43'][0]++,proceed)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['43'][1]++,listener.detach())&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['43'][2]++,resolve(itsamessage));});}));});};__cov_txyE0gLtgLEWSON5vNGHVQ.s['96']++;ITSAMessageViewer.prototype._processQueue=function(level){__cov_txyE0gLtgLEWSON5vNGHVQ.f['21']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['97']++;var instance=this,handlePromise,handlePromiseLoop;__cov_txyE0gLtgLEWSON5vNGHVQ.s['98']++;handlePromise=function(){__cov_txyE0gLtgLEWSON5vNGHVQ.f['22']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['99']++;return instance._nextMessagePromise(level).then(function(itsamessage){__cov_txyE0gLtgLEWSON5vNGHVQ.f['23']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['100']++;itsamessage[PROCESSING]=true;__cov_txyE0gLtgLEWSON5vNGHVQ.s['101']++;((__cov_txyE0gLtgLEWSON5vNGHVQ.b['44'][0]++,itsamessage[TIMEOUTRESOLVE])||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['44'][1]++,itsamessage[TIMEOUTREJECT]))&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['44'][2]++,itsamessage._startTimer());__cov_txyE0gLtgLEWSON5vNGHVQ.s['102']++;return instance._viewMessage(itsamessage);}).then(null,function(err){__cov_txyE0gLtgLEWSON5vNGHVQ.f['24']++;});};__cov_txyE0gLtgLEWSON5vNGHVQ.s['103']++;handlePromiseLoop=function(){__cov_txyE0gLtgLEWSON5vNGHVQ.f['25']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['104']++;return(__cov_txyE0gLtgLEWSON5vNGHVQ.b['45'][0]++,instance.get(DESTROYED))||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['45'][1]++,handlePromise().then(handlePromiseLoop,handlePromiseLoop));};__cov_txyE0gLtgLEWSON5vNGHVQ.s['105']++;handlePromiseLoop();};__cov_txyE0gLtgLEWSON5vNGHVQ.s['106']++;ITSAMessageViewer.prototype._resurrect=function(itsamessage){__cov_txyE0gLtgLEWSON5vNGHVQ.f['26']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['107']++;var instance=this;__cov_txyE0gLtgLEWSON5vNGHVQ.s['108']++;if(!itsamessage.get(DESTROYED)){__cov_txyE0gLtgLEWSON5vNGHVQ.b['46'][0]++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['109']++;((__cov_txyE0gLtgLEWSON5vNGHVQ.b['47'][0]++,itsamessage[TIMEOUTRESOLVE])||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['47'][1]++,itsamessage[TIMEOUTREJECT]))&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['47'][2]++,itsamessage._startTimer());__cov_txyE0gLtgLEWSON5vNGHVQ.s['110']++;ITSAMessageControllerInstance.sound(itsamessage);__cov_txyE0gLtgLEWSON5vNGHVQ.s['111']++;instance.resurrect(itsamessage);}else{__cov_txyE0gLtgLEWSON5vNGHVQ.b['46'][1]++;}};__cov_txyE0gLtgLEWSON5vNGHVQ.s['112']++;ITSAMessageViewer.prototype._suspend=function(itsamessage){__cov_txyE0gLtgLEWSON5vNGHVQ.f['27']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['113']++;var instance=this;__cov_txyE0gLtgLEWSON5vNGHVQ.s['114']++;((__cov_txyE0gLtgLEWSON5vNGHVQ.b['48'][0]++,itsamessage[TIMEOUTRESOLVE])||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['48'][1]++,itsamessage[TIMEOUTREJECT]))&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['48'][2]++,itsamessage._stopTimer());__cov_txyE0gLtgLEWSON5vNGHVQ.s['115']++;instance.suspend(itsamessage);};__cov_txyE0gLtgLEWSON5vNGHVQ.s['116']++;ITSAMessageViewer.prototype._viewMessage=function(itsamessage){__cov_txyE0gLtgLEWSON5vNGHVQ.f['28']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['117']++;ITSAMessageControllerInstance.sound(itsamessage);__cov_txyE0gLtgLEWSON5vNGHVQ.s['118']++;return this.viewMessage(itsamessage);};__cov_txyE0gLtgLEWSON5vNGHVQ.s['119']++;Y.ITSAMessageViewer=ITSAMessageViewer;__cov_txyE0gLtgLEWSON5vNGHVQ.s['120']++;Y[GET_RETRY_CONFIRMATION]=Y.bind(ITSAMessageControllerInstance[UNDERSCORE+GET_RETRY_CONFIRMATION],ITSAMessageControllerInstance);__cov_txyE0gLtgLEWSON5vNGHVQ.s['121']++;Y.confirm=Y[GET_CONFIRMATION]=Y.bind(ITSAMessageControllerInstance[UNDERSCORE+GET_CONFIRMATION],ITSAMessageControllerInstance);__cov_txyE0gLtgLEWSON5vNGHVQ.s['122']++;Y[GET_URL]=Y.bind(ITSAMessageControllerInstance[UNDERSCORE+GET_URL],ITSAMessageControllerInstance);__cov_txyE0gLtgLEWSON5vNGHVQ.s['123']++;Y[GET_EMAIL]=Y.bind(ITSAMessageControllerInstance[UNDERSCORE+GET_EMAIL],ITSAMessageControllerInstance);__cov_txyE0gLtgLEWSON5vNGHVQ.s['124']++;Y.prompt=Y[GET_INPUT]=Y.bind(ITSAMessageControllerInstance[UNDERSCORE+GET_INPUT],ITSAMessageControllerInstance);__cov_txyE0gLtgLEWSON5vNGHVQ.s['125']++;Y[GET_NUMBER]=Y.bind(ITSAMessageControllerInstance[UNDERSCORE+GET_NUMBER],ITSAMessageControllerInstance);__cov_txyE0gLtgLEWSON5vNGHVQ.s['126']++;Y[SHOW_MESSAGE]=Y.bind(ITSAMessageControllerInstance[UNDERSCORE+SHOW_MESSAGE],ITSAMessageControllerInstance);__cov_txyE0gLtgLEWSON5vNGHVQ.s['127']++;Y.alert=Y[SHOW_WARNING]=Y.bind(ITSAMessageControllerInstance[UNDERSCORE+SHOW_WARNING],ITSAMessageControllerInstance);__cov_txyE0gLtgLEWSON5vNGHVQ.s['128']++;Y[SHOW_ERROR]=Y.bind(ITSAMessageControllerInstance[UNDERSCORE+SHOW_ERROR],ITSAMessageControllerInstance);__cov_txyE0gLtgLEWSON5vNGHVQ.s['129']++;Y[SHOW_STATUS]=Y.bind(ITSAMessageControllerInstance[UNDERSCORE+SHOW_STATUS],ITSAMessageControllerInstance);},'@VERSION@',{'requires':['yui-base','yui-later','timers','promise','gallery-itsamodulesloadedpromise','gallery-itsamessagecontroller']});
