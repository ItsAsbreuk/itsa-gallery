if (typeof __coverage__ === 'undefined') { __coverage__ = {}; }
if (!__coverage__['build/gallery-itsamessageviewer/gallery-itsamessageviewer.js']) {
   __coverage__['build/gallery-itsamessageviewer/gallery-itsamessageviewer.js'] = {"path":"build/gallery-itsamessageviewer/gallery-itsamessageviewer.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0},"b":{"1":[0,0],"2":[0,0,0,0,0,0,0],"3":[0,0,0,0,0],"4":[0,0],"5":[0,0,0,0],"6":[0,0],"7":[0,0,0],"8":[0,0,0],"9":[0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0,0,0,0,0,0],"21":[0,0,0,0,0],"22":[0,0],"23":[0,0,0,0,0],"24":[0,0],"25":[0,0],"26":[0,0,0,0,0,0,0],"27":[0,0,0,0,0],"28":[0,0],"29":[0,0,0,0,0],"30":[0,0],"31":[0,0,0,0,0,0],"32":[0,0,0,0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0,0,0,0,0,0],"42":[0,0,0,0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0,0,0,0,0],"47":[0,0,0,0,0],"48":[0,0,0,0],"49":[0,0],"50":[0,0,0],"51":[0,0,0],"52":[0,0,0],"53":[0,0],"54":[0,0],"55":[0,0,0],"56":[0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":37},"end":{"line":1,"column":56}}},"2":{"name":"ITSAMessageViewer","line":69,"loc":{"start":{"line":69,"column":0},"end":{"line":69,"column":29}}},"3":{"name":"(anonymous_3)","line":82,"loc":{"start":{"line":82,"column":42},"end":{"line":82,"column":53}}},"4":{"name":"(anonymous_4)","line":131,"loc":{"start":{"line":131,"column":44},"end":{"line":131,"column":71}}},"5":{"name":"(anonymous_5)","line":139,"loc":{"start":{"line":139,"column":17},"end":{"line":139,"column":36}}},"6":{"name":"(anonymous_6)","line":147,"loc":{"start":{"line":147,"column":12},"end":{"line":147,"column":34}}},"7":{"name":"(anonymous_7)","line":179,"loc":{"start":{"line":179,"column":42},"end":{"line":179,"column":58}}},"8":{"name":"(anonymous_8)","line":196,"loc":{"start":{"line":196,"column":43},"end":{"line":196,"column":54}}},"9":{"name":"(anonymous_9)","line":206,"loc":{"start":{"line":206,"column":46},"end":{"line":206,"column":57}}},"10":{"name":"(anonymous_10)","line":219,"loc":{"start":{"line":219,"column":40},"end":{"line":219,"column":68}}},"11":{"name":"(anonymous_11)","line":246,"loc":{"start":{"line":246,"column":44},"end":{"line":246,"column":77}}},"12":{"name":"(anonymous_12)","line":275,"loc":{"start":{"line":275,"column":44},"end":{"line":275,"column":77}}},"13":{"name":"(anonymous_13)","line":304,"loc":{"start":{"line":304,"column":42},"end":{"line":304,"column":75}}},"14":{"name":"(anonymous_14)","line":333,"loc":{"start":{"line":333,"column":43},"end":{"line":333,"column":69}}},"15":{"name":"(anonymous_15)","line":347,"loc":{"start":{"line":347,"column":45},"end":{"line":347,"column":69}}},"16":{"name":"(anonymous_16)","line":359,"loc":{"start":{"line":359,"column":38},"end":{"line":359,"column":66}}},"17":{"name":"(anonymous_17)","line":373,"loc":{"start":{"line":373,"column":42},"end":{"line":373,"column":70}}},"18":{"name":"(anonymous_18)","line":383,"loc":{"start":{"line":383,"column":41},"end":{"line":383,"column":52}}},"19":{"name":"(anonymous_19)","line":412,"loc":{"start":{"line":412,"column":50},"end":{"line":412,"column":66}}},"20":{"name":"(anonymous_20)","line":415,"loc":{"start":{"line":415,"column":8},"end":{"line":415,"column":19}}},"21":{"name":"(anonymous_21)","line":416,"loc":{"start":{"line":416,"column":33},"end":{"line":416,"column":60}}},"22":{"name":"(anonymous_22)","line":431,"loc":{"start":{"line":431,"column":20},"end":{"line":431,"column":42}}},"23":{"name":"(anonymous_23)","line":446,"loc":{"start":{"line":446,"column":20},"end":{"line":446,"column":42}}},"24":{"name":"(anonymous_24)","line":490,"loc":{"start":{"line":490,"column":46},"end":{"line":490,"column":58}}},"25":{"name":"(anonymous_25)","line":518,"loc":{"start":{"line":518,"column":8},"end":{"line":518,"column":30}}},"26":{"name":"(anonymous_26)","line":521,"loc":{"start":{"line":521,"column":57},"end":{"line":521,"column":76}}},"27":{"name":"(anonymous_27)","line":522,"loc":{"start":{"line":522,"column":59},"end":{"line":522,"column":70}}},"28":{"name":"(anonymous_28)","line":542,"loc":{"start":{"line":542,"column":44},"end":{"line":542,"column":60}}},"29":{"name":"(anonymous_29)","line":545,"loc":{"start":{"line":545,"column":20},"end":{"line":545,"column":31}}},"30":{"name":"(anonymous_30)","line":547,"loc":{"start":{"line":547,"column":12},"end":{"line":547,"column":34}}},"31":{"name":"(anonymous_31)","line":556,"loc":{"start":{"line":556,"column":12},"end":{"line":556,"column":26}}},"32":{"name":"(anonymous_32)","line":562,"loc":{"start":{"line":562,"column":24},"end":{"line":562,"column":35}}},"33":{"name":"(anonymous_33)","line":577,"loc":{"start":{"line":577,"column":41},"end":{"line":577,"column":63}}},"34":{"name":"(anonymous_34)","line":598,"loc":{"start":{"line":598,"column":39},"end":{"line":598,"column":61}}},"35":{"name":"(anonymous_35)","line":615,"loc":{"start":{"line":615,"column":43},"end":{"line":615,"column":65}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1018,"column":3}},"2":{"start":{"line":23,"column":0},"end":{"line":67,"column":6}},"3":{"start":{"line":69,"column":0},"end":{"line":71,"column":1}},"4":{"start":{"line":70,"column":4},"end":{"line":70,"column":68}},"5":{"start":{"line":73,"column":0},"end":{"line":73,"column":45}},"6":{"start":{"line":74,"column":0},"end":{"line":74,"column":36}},"7":{"start":{"line":82,"column":0},"end":{"line":129,"column":2}},"8":{"start":{"line":83,"column":4},"end":{"line":83,"column":24}},"9":{"start":{"line":92,"column":4},"end":{"line":92,"column":36}},"10":{"start":{"line":101,"column":4},"end":{"line":101,"column":35}},"11":{"start":{"line":111,"column":4},"end":{"line":111,"column":31}},"12":{"start":{"line":121,"column":4},"end":{"line":121,"column":34}},"13":{"start":{"line":123,"column":4},"end":{"line":123,"column":54}},"14":{"start":{"line":125,"column":4},"end":{"line":125,"column":126}},"15":{"start":{"line":126,"column":4},"end":{"line":126,"column":33}},"16":{"start":{"line":127,"column":4},"end":{"line":127,"column":33}},"17":{"start":{"line":128,"column":4},"end":{"line":128,"column":34}},"18":{"start":{"line":131,"column":0},"end":{"line":168,"column":2}},"19":{"start":{"line":132,"column":4},"end":{"line":137,"column":127}},"20":{"start":{"line":139,"column":4},"end":{"line":161,"column":6}},"21":{"start":{"line":140,"column":8},"end":{"line":144,"column":102}},"22":{"start":{"line":145,"column":8},"end":{"line":159,"column":10}},"23":{"start":{"line":148,"column":16},"end":{"line":148,"column":63}},"24":{"start":{"line":149,"column":16},"end":{"line":149,"column":51}},"25":{"start":{"line":150,"column":16},"end":{"line":150,"column":93}},"26":{"start":{"line":151,"column":16},"end":{"line":152,"column":192}},"27":{"start":{"line":153,"column":16},"end":{"line":153,"column":203}},"28":{"start":{"line":154,"column":16},"end":{"line":154,"column":120}},"29":{"start":{"line":156,"column":16},"end":{"line":156,"column":40}},"30":{"start":{"line":160,"column":8},"end":{"line":160,"column":21}},"31":{"start":{"line":163,"column":4},"end":{"line":163,"column":60}},"32":{"start":{"line":164,"column":4},"end":{"line":164,"column":60}},"33":{"start":{"line":165,"column":4},"end":{"line":165,"column":62}},"34":{"start":{"line":167,"column":4},"end":{"line":167,"column":17}},"35":{"start":{"line":179,"column":0},"end":{"line":187,"column":2}},"36":{"start":{"line":180,"column":4},"end":{"line":180,"column":36}},"37":{"start":{"line":181,"column":4},"end":{"line":186,"column":5}},"38":{"start":{"line":182,"column":8},"end":{"line":182,"column":71}},"39":{"start":{"line":184,"column":8},"end":{"line":184,"column":90}},"40":{"start":{"line":196,"column":0},"end":{"line":198,"column":2}},"41":{"start":{"line":197,"column":4},"end":{"line":197,"column":66}},"42":{"start":{"line":206,"column":0},"end":{"line":209,"column":2}},"43":{"start":{"line":207,"column":4},"end":{"line":207,"column":69}},"44":{"start":{"line":208,"column":4},"end":{"line":208,"column":61}},"45":{"start":{"line":219,"column":0},"end":{"line":221,"column":2}},"46":{"start":{"line":246,"column":0},"end":{"line":250,"column":2}},"47":{"start":{"line":247,"column":4},"end":{"line":247,"column":87}},"48":{"start":{"line":248,"column":4},"end":{"line":248,"column":32}},"49":{"start":{"line":249,"column":4},"end":{"line":249,"column":111}},"50":{"start":{"line":275,"column":0},"end":{"line":279,"column":2}},"51":{"start":{"line":276,"column":4},"end":{"line":276,"column":87}},"52":{"start":{"line":277,"column":4},"end":{"line":277,"column":32}},"53":{"start":{"line":278,"column":4},"end":{"line":278,"column":111}},"54":{"start":{"line":304,"column":0},"end":{"line":308,"column":2}},"55":{"start":{"line":305,"column":4},"end":{"line":305,"column":87}},"56":{"start":{"line":306,"column":4},"end":{"line":306,"column":32}},"57":{"start":{"line":307,"column":4},"end":{"line":307,"column":109}},"58":{"start":{"line":333,"column":0},"end":{"line":338,"column":2}},"59":{"start":{"line":334,"column":4},"end":{"line":334,"column":86}},"60":{"start":{"line":335,"column":4},"end":{"line":335,"column":32}},"61":{"start":{"line":336,"column":0},"end":{"line":336,"column":53}},"62":{"start":{"line":337,"column":4},"end":{"line":337,"column":96}},"63":{"start":{"line":347,"column":0},"end":{"line":349,"column":2}},"64":{"start":{"line":348,"column":4},"end":{"line":348,"column":75}},"65":{"start":{"line":359,"column":0},"end":{"line":361,"column":2}},"66":{"start":{"line":373,"column":0},"end":{"line":375,"column":2}},"67":{"start":{"line":383,"column":0},"end":{"line":399,"column":2}},"68":{"start":{"line":384,"column":4},"end":{"line":387,"column":79}},"69":{"start":{"line":388,"column":4},"end":{"line":388,"column":57}},"70":{"start":{"line":391,"column":4},"end":{"line":391,"column":83}},"71":{"start":{"line":392,"column":4},"end":{"line":392,"column":83}},"72":{"start":{"line":393,"column":4},"end":{"line":393,"column":85}},"73":{"start":{"line":394,"column":4},"end":{"line":394,"column":95}},"74":{"start":{"line":395,"column":4},"end":{"line":395,"column":95}},"75":{"start":{"line":396,"column":4},"end":{"line":396,"column":97}},"76":{"start":{"line":398,"column":4},"end":{"line":398,"column":31}},"77":{"start":{"line":412,"column":0},"end":{"line":531,"column":2}},"78":{"start":{"line":413,"column":4},"end":{"line":413,"column":24}},"79":{"start":{"line":414,"column":4},"end":{"line":530,"column":6}},"80":{"start":{"line":416,"column":12},"end":{"line":515,"column":15}},"81":{"start":{"line":417,"column":16},"end":{"line":424,"column":172}},"82":{"start":{"line":426,"column":16},"end":{"line":426,"column":52}},"83":{"start":{"line":429,"column":16},"end":{"line":441,"column":18}},"84":{"start":{"line":432,"column":24},"end":{"line":432,"column":71}},"85":{"start":{"line":433,"column":24},"end":{"line":433,"column":59}},"86":{"start":{"line":434,"column":24},"end":{"line":434,"column":101}},"87":{"start":{"line":435,"column":24},"end":{"line":436,"column":200}},"88":{"start":{"line":437,"column":24},"end":{"line":437,"column":211}},"89":{"start":{"line":438,"column":24},"end":{"line":438,"column":149}},"90":{"start":{"line":439,"column":24},"end":{"line":439,"column":43}},"91":{"start":{"line":444,"column":16},"end":{"line":456,"column":18}},"92":{"start":{"line":447,"column":24},"end":{"line":447,"column":71}},"93":{"start":{"line":448,"column":24},"end":{"line":448,"column":59}},"94":{"start":{"line":449,"column":24},"end":{"line":449,"column":101}},"95":{"start":{"line":450,"column":24},"end":{"line":451,"column":200}},"96":{"start":{"line":452,"column":24},"end":{"line":452,"column":211}},"97":{"start":{"line":453,"column":24},"end":{"line":453,"column":150}},"98":{"start":{"line":454,"column":24},"end":{"line":454,"column":43}},"99":{"start":{"line":458,"column":16},"end":{"line":514,"column":17}},"100":{"start":{"line":459,"column":20},"end":{"line":459,"column":63}},"101":{"start":{"line":463,"column":20},"end":{"line":464,"column":100}},"102":{"start":{"line":466,"column":20},"end":{"line":467,"column":61}},"103":{"start":{"line":469,"column":20},"end":{"line":469,"column":41}},"104":{"start":{"line":475,"column":20},"end":{"line":480,"column":21}},"105":{"start":{"line":476,"column":24},"end":{"line":476,"column":103}},"106":{"start":{"line":478,"column":25},"end":{"line":480,"column":21}},"107":{"start":{"line":479,"column":24},"end":{"line":479,"column":72}},"108":{"start":{"line":481,"column":20},"end":{"line":484,"column":21}},"109":{"start":{"line":482,"column":24},"end":{"line":482,"column":61}},"110":{"start":{"line":483,"column":24},"end":{"line":483,"column":63}},"111":{"start":{"line":485,"column":20},"end":{"line":485,"column":56}},"112":{"start":{"line":487,"column":20},"end":{"line":487,"column":68}},"113":{"start":{"line":489,"column":20},"end":{"line":489,"column":71}},"114":{"start":{"line":490,"column":20},"end":{"line":513,"column":23}},"115":{"start":{"line":491,"column":24},"end":{"line":491,"column":56}},"116":{"start":{"line":492,"column":28},"end":{"line":492,"column":75}},"117":{"start":{"line":493,"column":28},"end":{"line":493,"column":63}},"118":{"start":{"line":494,"column":28},"end":{"line":494,"column":105}},"119":{"start":{"line":495,"column":28},"end":{"line":496,"column":204}},"120":{"start":{"line":497,"column":28},"end":{"line":497,"column":215}},"121":{"start":{"line":498,"column":24},"end":{"line":512,"column":25}},"122":{"start":{"line":499,"column":28},"end":{"line":499,"column":46}},"123":{"start":{"line":500,"column":28},"end":{"line":500,"column":53}},"124":{"start":{"line":501,"column":28},"end":{"line":501,"column":71}},"125":{"start":{"line":505,"column":28},"end":{"line":506,"column":108}},"126":{"start":{"line":508,"column":28},"end":{"line":509,"column":69}},"127":{"start":{"line":511,"column":28},"end":{"line":511,"column":49}},"128":{"start":{"line":520,"column":12},"end":{"line":520,"column":129}},"129":{"start":{"line":521,"column":12},"end":{"line":528,"column":15}},"130":{"start":{"line":522,"column":16},"end":{"line":527,"column":19}},"131":{"start":{"line":523,"column":20},"end":{"line":523,"column":114}},"132":{"start":{"line":525,"column":20},"end":{"line":525,"column":73}},"133":{"start":{"line":542,"column":0},"end":{"line":567,"column":2}},"134":{"start":{"line":543,"column":4},"end":{"line":544,"column":41}},"135":{"start":{"line":545,"column":4},"end":{"line":561,"column":6}},"136":{"start":{"line":546,"column":8},"end":{"line":560,"column":10}},"137":{"start":{"line":548,"column":16},"end":{"line":548,"column":47}},"138":{"start":{"line":550,"column":16},"end":{"line":550,"column":105}},"139":{"start":{"line":552,"column":16},"end":{"line":552,"column":58}},"140":{"start":{"line":562,"column":4},"end":{"line":565,"column":6}},"141":{"start":{"line":564,"column":8},"end":{"line":564,"column":101}},"142":{"start":{"line":566,"column":4},"end":{"line":566,"column":24}},"143":{"start":{"line":577,"column":0},"end":{"line":588,"column":2}},"144":{"start":{"line":578,"column":4},"end":{"line":578,"column":24}},"145":{"start":{"line":580,"column":4},"end":{"line":587,"column":5}},"146":{"start":{"line":582,"column":8},"end":{"line":582,"column":97}},"147":{"start":{"line":585,"column":8},"end":{"line":585,"column":57}},"148":{"start":{"line":586,"column":8},"end":{"line":586,"column":40}},"149":{"start":{"line":598,"column":0},"end":{"line":604,"column":2}},"150":{"start":{"line":599,"column":4},"end":{"line":599,"column":24}},"151":{"start":{"line":601,"column":4},"end":{"line":601,"column":92}},"152":{"start":{"line":603,"column":4},"end":{"line":603,"column":34}},"153":{"start":{"line":615,"column":0},"end":{"line":619,"column":2}},"154":{"start":{"line":617,"column":4},"end":{"line":617,"column":53}},"155":{"start":{"line":618,"column":4},"end":{"line":618,"column":41}},"156":{"start":{"line":621,"column":0},"end":{"line":621,"column":40}},"157":{"start":{"line":652,"column":0},"end":{"line":652,"column":132}},"158":{"start":{"line":706,"column":0},"end":{"line":706,"column":132}},"159":{"start":{"line":738,"column":0},"end":{"line":738,"column":102}},"160":{"start":{"line":770,"column":0},"end":{"line":770,"column":106}},"161":{"start":{"line":836,"column":0},"end":{"line":836,"column":117}},"162":{"start":{"line":868,"column":0},"end":{"line":868,"column":108}},"163":{"start":{"line":877,"column":0},"end":{"line":877,"column":114}},"164":{"start":{"line":903,"column":0},"end":{"line":903,"column":112}},"165":{"start":{"line":955,"column":0},"end":{"line":955,"column":122}},"166":{"start":{"line":981,"column":0},"end":{"line":981,"column":108}},"167":{"start":{"line":1007,"column":0},"end":{"line":1007,"column":110}}},"branchMap":{"1":{"line":150,"type":"binary-expr","locations":[{"start":{"line":150,"column":40},"end":{"line":150,"column":59}},{"start":{"line":150,"column":63},"end":{"line":150,"column":92}}]},"2":{"line":151,"type":"binary-expr","locations":[{"start":{"line":151,"column":43},"end":{"line":151,"column":64}},{"start":{"line":151,"column":68},"end":{"line":151,"column":95}},{"start":{"line":152,"column":43},"end":{"line":152,"column":69}},{"start":{"line":152,"column":75},"end":{"line":152,"column":96}},{"start":{"line":152,"column":101},"end":{"line":152,"column":126}},{"start":{"line":152,"column":133},"end":{"line":152,"column":157}},{"start":{"line":152,"column":162},"end":{"line":152,"column":187}}]},"3":{"line":153,"type":"binary-expr","locations":[{"start":{"line":153,"column":31},"end":{"line":153,"column":63}},{"start":{"line":153,"column":69},"end":{"line":153,"column":84}},{"start":{"line":153,"column":88},"end":{"line":153,"column":105}},{"start":{"line":153,"column":112},"end":{"line":153,"column":134}},{"start":{"line":153,"column":139},"end":{"line":153,"column":200}}]},"4":{"line":153,"type":"cond-expr","locations":[{"start":{"line":153,"column":159},"end":{"line":153,"column":182}},{"start":{"line":153,"column":185},"end":{"line":153,"column":200}}]},"5":{"line":154,"type":"binary-expr","locations":[{"start":{"line":154,"column":31},"end":{"line":154,"column":41}},{"start":{"line":154,"column":46},"end":{"line":154,"column":75}},{"start":{"line":154,"column":81},"end":{"line":154,"column":90}},{"start":{"line":154,"column":94},"end":{"line":154,"column":118}}]},"6":{"line":156,"type":"binary-expr","locations":[{"start":{"line":156,"column":16},"end":{"line":156,"column":28}},{"start":{"line":156,"column":32},"end":{"line":156,"column":39}}]},"7":{"line":163,"type":"binary-expr","locations":[{"start":{"line":163,"column":6},"end":{"line":163,"column":18}},{"start":{"line":163,"column":23},"end":{"line":163,"column":29}},{"start":{"line":163,"column":35},"end":{"line":163,"column":58}}]},"8":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":6},"end":{"line":164,"column":18}},{"start":{"line":164,"column":23},"end":{"line":164,"column":29}},{"start":{"line":164,"column":35},"end":{"line":164,"column":58}}]},"9":{"line":165,"type":"binary-expr","locations":[{"start":{"line":165,"column":6},"end":{"line":165,"column":19}},{"start":{"line":165,"column":24},"end":{"line":165,"column":30}},{"start":{"line":165,"column":36},"end":{"line":165,"column":60}}]},"10":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":4},"end":{"line":181,"column":4}},{"start":{"line":181,"column":4},"end":{"line":181,"column":4}}]},"11":{"line":184,"type":"binary-expr","locations":[{"start":{"line":184,"column":8},"end":{"line":184,"column":27}},{"start":{"line":184,"column":32},"end":{"line":184,"column":88}}]},"12":{"line":391,"type":"binary-expr","locations":[{"start":{"line":391,"column":5},"end":{"line":391,"column":41}},{"start":{"line":391,"column":47},"end":{"line":391,"column":81}}]},"13":{"line":392,"type":"binary-expr","locations":[{"start":{"line":392,"column":5},"end":{"line":392,"column":41}},{"start":{"line":392,"column":47},"end":{"line":392,"column":81}}]},"14":{"line":393,"type":"binary-expr","locations":[{"start":{"line":393,"column":5},"end":{"line":393,"column":42}},{"start":{"line":393,"column":48},"end":{"line":393,"column":83}}]},"15":{"line":394,"type":"binary-expr","locations":[{"start":{"line":394,"column":5},"end":{"line":394,"column":47}},{"start":{"line":394,"column":53},"end":{"line":394,"column":93}}]},"16":{"line":395,"type":"binary-expr","locations":[{"start":{"line":395,"column":5},"end":{"line":395,"column":47}},{"start":{"line":395,"column":53},"end":{"line":395,"column":93}}]},"17":{"line":396,"type":"binary-expr","locations":[{"start":{"line":396,"column":5},"end":{"line":396,"column":48}},{"start":{"line":396,"column":54},"end":{"line":396,"column":95}}]},"18":{"line":426,"type":"binary-expr","locations":[{"start":{"line":426,"column":16},"end":{"line":426,"column":39}},{"start":{"line":426,"column":43},"end":{"line":426,"column":51}}]},"19":{"line":434,"type":"binary-expr","locations":[{"start":{"line":434,"column":48},"end":{"line":434,"column":67}},{"start":{"line":434,"column":71},"end":{"line":434,"column":100}}]},"20":{"line":435,"type":"binary-expr","locations":[{"start":{"line":435,"column":51},"end":{"line":435,"column":72}},{"start":{"line":435,"column":76},"end":{"line":435,"column":103}},{"start":{"line":436,"column":51},"end":{"line":436,"column":77}},{"start":{"line":436,"column":83},"end":{"line":436,"column":104}},{"start":{"line":436,"column":109},"end":{"line":436,"column":134}},{"start":{"line":436,"column":141},"end":{"line":436,"column":165}},{"start":{"line":436,"column":170},"end":{"line":436,"column":195}}]},"21":{"line":437,"type":"binary-expr","locations":[{"start":{"line":437,"column":39},"end":{"line":437,"column":71}},{"start":{"line":437,"column":77},"end":{"line":437,"column":92}},{"start":{"line":437,"column":96},"end":{"line":437,"column":113}},{"start":{"line":437,"column":120},"end":{"line":437,"column":142}},{"start":{"line":437,"column":147},"end":{"line":437,"column":208}}]},"22":{"line":437,"type":"cond-expr","locations":[{"start":{"line":437,"column":167},"end":{"line":437,"column":190}},{"start":{"line":437,"column":193},"end":{"line":437,"column":208}}]},"23":{"line":438,"type":"binary-expr","locations":[{"start":{"line":438,"column":38},"end":{"line":438,"column":48}},{"start":{"line":438,"column":53},"end":{"line":438,"column":79}},{"start":{"line":438,"column":84},"end":{"line":438,"column":105}},{"start":{"line":438,"column":109},"end":{"line":438,"column":133}},{"start":{"line":438,"column":137},"end":{"line":438,"column":148}}]},"24":{"line":444,"type":"binary-expr","locations":[{"start":{"line":444,"column":16},"end":{"line":444,"column":27}},{"start":{"line":444,"column":31},"end":{"line":456,"column":17}}]},"25":{"line":449,"type":"binary-expr","locations":[{"start":{"line":449,"column":48},"end":{"line":449,"column":67}},{"start":{"line":449,"column":71},"end":{"line":449,"column":100}}]},"26":{"line":450,"type":"binary-expr","locations":[{"start":{"line":450,"column":51},"end":{"line":450,"column":72}},{"start":{"line":450,"column":76},"end":{"line":450,"column":103}},{"start":{"line":451,"column":51},"end":{"line":451,"column":77}},{"start":{"line":451,"column":83},"end":{"line":451,"column":104}},{"start":{"line":451,"column":109},"end":{"line":451,"column":134}},{"start":{"line":451,"column":141},"end":{"line":451,"column":165}},{"start":{"line":451,"column":170},"end":{"line":451,"column":195}}]},"27":{"line":452,"type":"binary-expr","locations":[{"start":{"line":452,"column":39},"end":{"line":452,"column":71}},{"start":{"line":452,"column":77},"end":{"line":452,"column":92}},{"start":{"line":452,"column":96},"end":{"line":452,"column":113}},{"start":{"line":452,"column":120},"end":{"line":452,"column":142}},{"start":{"line":452,"column":147},"end":{"line":452,"column":208}}]},"28":{"line":452,"type":"cond-expr","locations":[{"start":{"line":452,"column":167},"end":{"line":452,"column":190}},{"start":{"line":452,"column":193},"end":{"line":452,"column":208}}]},"29":{"line":453,"type":"binary-expr","locations":[{"start":{"line":453,"column":38},"end":{"line":453,"column":48}},{"start":{"line":453,"column":53},"end":{"line":453,"column":79}},{"start":{"line":453,"column":84},"end":{"line":453,"column":106}},{"start":{"line":453,"column":110},"end":{"line":453,"column":134}},{"start":{"line":453,"column":138},"end":{"line":453,"column":149}}]},"30":{"line":458,"type":"if","locations":[{"start":{"line":458,"column":16},"end":{"line":458,"column":16}},{"start":{"line":458,"column":16},"end":{"line":458,"column":16}}]},"31":{"line":463,"type":"binary-expr","locations":[{"start":{"line":463,"column":21},"end":{"line":463,"column":66}},{"start":{"line":463,"column":73},"end":{"line":463,"column":85}},{"start":{"line":463,"column":90},"end":{"line":463,"column":117}},{"start":{"line":463,"column":121},"end":{"line":463,"column":149}},{"start":{"line":464,"column":25},"end":{"line":464,"column":58}},{"start":{"line":464,"column":63},"end":{"line":464,"column":99}}]},"32":{"line":466,"type":"binary-expr","locations":[{"start":{"line":466,"column":21},"end":{"line":466,"column":66}},{"start":{"line":466,"column":73},"end":{"line":466,"column":86}},{"start":{"line":466,"column":91},"end":{"line":466,"column":119}},{"start":{"line":466,"column":125},"end":{"line":466,"column":158}},{"start":{"line":467,"column":24},"end":{"line":467,"column":60}}]},"33":{"line":475,"type":"if","locations":[{"start":{"line":475,"column":20},"end":{"line":475,"column":20}},{"start":{"line":475,"column":20},"end":{"line":475,"column":20}}]},"34":{"line":476,"type":"binary-expr","locations":[{"start":{"line":476,"column":44},"end":{"line":476,"column":71}},{"start":{"line":476,"column":75},"end":{"line":476,"column":102}}]},"35":{"line":478,"type":"if","locations":[{"start":{"line":478,"column":25},"end":{"line":478,"column":25}},{"start":{"line":478,"column":25},"end":{"line":478,"column":25}}]},"36":{"line":478,"type":"binary-expr","locations":[{"start":{"line":478,"column":30},"end":{"line":478,"column":42}},{"start":{"line":478,"column":48},"end":{"line":478,"column":77}}]},"37":{"line":481,"type":"if","locations":[{"start":{"line":481,"column":20},"end":{"line":481,"column":20}},{"start":{"line":481,"column":20},"end":{"line":481,"column":20}}]},"38":{"line":481,"type":"binary-expr","locations":[{"start":{"line":481,"column":24},"end":{"line":481,"column":41}},{"start":{"line":481,"column":45},"end":{"line":481,"column":73}}]},"39":{"line":487,"type":"binary-expr","locations":[{"start":{"line":487,"column":21},"end":{"line":487,"column":33}},{"start":{"line":487,"column":38},"end":{"line":487,"column":67}}]},"40":{"line":494,"type":"binary-expr","locations":[{"start":{"line":494,"column":52},"end":{"line":494,"column":71}},{"start":{"line":494,"column":75},"end":{"line":494,"column":104}}]},"41":{"line":495,"type":"binary-expr","locations":[{"start":{"line":495,"column":55},"end":{"line":495,"column":76}},{"start":{"line":495,"column":80},"end":{"line":495,"column":107}},{"start":{"line":496,"column":55},"end":{"line":496,"column":81}},{"start":{"line":496,"column":87},"end":{"line":496,"column":108}},{"start":{"line":496,"column":113},"end":{"line":496,"column":138}},{"start":{"line":496,"column":145},"end":{"line":496,"column":169}},{"start":{"line":496,"column":174},"end":{"line":496,"column":199}}]},"42":{"line":497,"type":"binary-expr","locations":[{"start":{"line":497,"column":43},"end":{"line":497,"column":75}},{"start":{"line":497,"column":81},"end":{"line":497,"column":96}},{"start":{"line":497,"column":100},"end":{"line":497,"column":117}},{"start":{"line":497,"column":124},"end":{"line":497,"column":146}},{"start":{"line":497,"column":151},"end":{"line":497,"column":212}}]},"43":{"line":497,"type":"cond-expr","locations":[{"start":{"line":497,"column":171},"end":{"line":497,"column":194}},{"start":{"line":497,"column":197},"end":{"line":497,"column":212}}]},"44":{"line":498,"type":"if","locations":[{"start":{"line":498,"column":24},"end":{"line":498,"column":24}},{"start":{"line":498,"column":24},"end":{"line":498,"column":24}}]},"45":{"line":498,"type":"binary-expr","locations":[{"start":{"line":498,"column":28},"end":{"line":498,"column":38}},{"start":{"line":498,"column":43},"end":{"line":498,"column":69}}]},"46":{"line":505,"type":"binary-expr","locations":[{"start":{"line":505,"column":29},"end":{"line":505,"column":74}},{"start":{"line":505,"column":81},"end":{"line":505,"column":93}},{"start":{"line":505,"column":98},"end":{"line":505,"column":125}},{"start":{"line":505,"column":129},"end":{"line":505,"column":157}},{"start":{"line":506,"column":33},"end":{"line":506,"column":66}},{"start":{"line":506,"column":71},"end":{"line":506,"column":107}}]},"47":{"line":508,"type":"binary-expr","locations":[{"start":{"line":508,"column":29},"end":{"line":508,"column":74}},{"start":{"line":508,"column":81},"end":{"line":508,"column":94}},{"start":{"line":508,"column":99},"end":{"line":508,"column":127}},{"start":{"line":508,"column":133},"end":{"line":508,"column":166}},{"start":{"line":509,"column":32},"end":{"line":509,"column":68}}]},"48":{"line":520,"type":"binary-expr","locations":[{"start":{"line":520,"column":27},"end":{"line":520,"column":40}},{"start":{"line":520,"column":46},"end":{"line":520,"column":75}},{"start":{"line":520,"column":81},"end":{"line":520,"column":93}},{"start":{"line":520,"column":98},"end":{"line":520,"column":126}}]},"49":{"line":521,"type":"cond-expr","locations":[{"start":{"line":521,"column":29},"end":{"line":521,"column":40}},{"start":{"line":521,"column":43},"end":{"line":528,"column":14}}]},"50":{"line":523,"type":"binary-expr","locations":[{"start":{"line":523,"column":31},"end":{"line":523,"column":60}},{"start":{"line":523,"column":66},"end":{"line":523,"column":78}},{"start":{"line":523,"column":83},"end":{"line":523,"column":111}}]},"51":{"line":525,"type":"binary-expr","locations":[{"start":{"line":525,"column":20},"end":{"line":525,"column":27}},{"start":{"line":525,"column":31},"end":{"line":525,"column":48}},{"start":{"line":525,"column":52},"end":{"line":525,"column":72}}]},"52":{"line":550,"type":"binary-expr","locations":[{"start":{"line":550,"column":17},"end":{"line":550,"column":44}},{"start":{"line":550,"column":48},"end":{"line":550,"column":74}},{"start":{"line":550,"column":79},"end":{"line":550,"column":104}}]},"53":{"line":564,"type":"binary-expr","locations":[{"start":{"line":564,"column":15},"end":{"line":564,"column":38}},{"start":{"line":564,"column":42},"end":{"line":564,"column":100}}]},"54":{"line":580,"type":"if","locations":[{"start":{"line":580,"column":4},"end":{"line":580,"column":4}},{"start":{"line":580,"column":4},"end":{"line":580,"column":4}}]},"55":{"line":582,"type":"binary-expr","locations":[{"start":{"line":582,"column":9},"end":{"line":582,"column":36}},{"start":{"line":582,"column":40},"end":{"line":582,"column":66}},{"start":{"line":582,"column":71},"end":{"line":582,"column":96}}]},"56":{"line":601,"type":"binary-expr","locations":[{"start":{"line":601,"column":5},"end":{"line":601,"column":32}},{"start":{"line":601,"column":36},"end":{"line":601,"column":62}},{"start":{"line":601,"column":67},"end":{"line":601,"column":91}}]}},"code":["(function () { YUI.add('gallery-itsamessageviewer', function (Y, NAME) {","","'use strict';","","/*jshint maxlen:215 */","","/**"," *"," * Extends Y.Model by adding methods through which they can create editable form-elements, which represent and are bound to the propery-value."," * This model is for defining the UI-structure for all Model's properties and for firing model-events for"," * Y.ITSAFormModel does not rendering to the dom itself. That needs to be done by an Y.View-instance, like Y.ITSAViewModel."," *"," * @module gallery-itsamessageviewer"," * @extends Base"," * @class ITSAMessageViewer"," * @constructor"," * @since 0.1"," *"," * <i>Copyright (c) 2013 Marco Asbreuk - http://itsasbreuk.nl</i>"," * YUI BSD License - http://developer.yahoo.com/yui/license.html"," *","*/","var YArray = Y.Array,","    ITSAMessageControllerInstance = Y.ITSAMessageController,","    ESSAGE = 'essage',","    MESSAGE = 'm'+ESSAGE,","    MODELSYNC = 'modelsync',","    STATUS = 'status',","    MAIL = 'mail',","    LOADICONSDELAY = 5000, // for gallerycss-itsa-form","    PROCESSING = '_processing',","    ERROR = 'error',","    WARN = 'warn',","    INFO = 'info',","    LEVEL = 'level',","    TARGET = 'target',","    SUSPENDED = '_suspended',","    NEWMESSAGE = 'new'+MESSAGE,","    DESTROYED = 'destroyed',","    PRIORITY = 'priority',","    EVT_LEVELCLEAR = 'levelclear',","    TIMEOUTRESOLVE = 'timeoutResolve',","    TIMEOUTREJECT = 'timeoutReject',","    GET = 'get',","    SHOW = 'show',","    REMOVE = 'remove',","    CONFIRMATION = 'Confirmation',","    GET_RETRY_CONFIRMATION = GET+'Retry'+CONFIRMATION,","    GET_CONFIRMATION = GET+CONFIRMATION,","    GET_INPUT = GET+'Input',","    GET_NUMBER = GET+'Number',","    GET_EMAIL = GET+'E'+MAIL,","    GET_URL = GET+'URL',","    SHOW_MESSAGE = SHOW+'M'+ESSAGE,","    SHOW_WARNING = SHOW+'Warning',","    SHOW_ERROR = SHOW+'Error',","    STATUSCAPITALIZED = 'Status',","    SHOW_STATUS = SHOW+STATUSCAPITALIZED,","    REMOVE_STATUS = REMOVE+STATUSCAPITALIZED,","    UNDERSCORE = '_',","    STATUSMESSAGE = UNDERSCORE+STATUS+'M'+ESSAGE,","    ITSADIALOG = 'itsadialog',","    AVAILABLE_LEVELS = {","        info: true,","        warn: true,","        error: true","    };","","function ITSAMessageViewer() {","    ITSAMessageViewer.superclass.constructor.apply(this, arguments);","}","","ITSAMessageViewer.NAME = 'itsamessageviewer';","Y.extend(ITSAMessageViewer, Y.Base);","","","/**"," * @method initializer"," * @protected"," * @since 0.1","*/","ITSAMessageViewer.prototype.initializer = function() {","    var instance = this;","","    /**","     * Flag that tells whether the MessageViewer can only handle simple messages: Y.showMessage(), showWarning()/Y.alert() and Y.showError().","     * @property simpleMessages","     * @default false","     * @type Boolean","     * @since 0.1","     */","    instance.simpleMessages = false;","","    /**","     * Flag that tells whether the MessageViewer should handle status messages without buttons, creates by Y.showStatus().","     * @property statusMessages","     * @default true","     * @type Boolean","     * @since 0.1","     */","    instance.statusMessages = true;","","    /**","     * Holds the currently viewed message of all levels.","     * @property _lastMessage","     * @default {}","     * @private","     * @type Object","     * @since 0.1","     */","    instance._lastMessage = {};","","    /**","     * Unique name that is used to determine which messages it should handle","     *","     * @property _viewName","     * @private","     * @type String","     * @since 0.1","     */","    instance._viewName = Y.guid();","","    ITSAMessageControllerInstance.addTarget(instance);","    // now loading formicons with a delay --> should anyonde need it, then is nice to have the icons already available","    Y.later(LOADICONSDELAY, Y, Y.usePromise, ['gallerycss-itsa-base', 'gallerycss-itsa-animatespin', 'gallerycss-itsa-form']);","    instance._processQueue(INFO);","    instance._processQueue(WARN);","    instance._processQueue(ERROR);","};","","ITSAMessageViewer.prototype.countMessages = function(processed, level) {","    var instance = this,","        queue = ITSAMessageControllerInstance.queue,","        viewname = instance._viewName,","        simplemessages = instance.simpleMessages,","        total = 0,","        isTargeted, itsasimplemessage, validMessage, countLevel, messagesource, doHandleAnonymousSimple, messagetargetViewname;","","    countLevel = function(onelevel) {","        var count = 0,","            handleAnonymous = (ITSAMessageControllerInstance._targets[onelevel]===viewname),","            handleAnonymousSimple = (ITSAMessageControllerInstance._simpleTargets[onelevel]===viewname),","            handleAnonymousStatus = (ITSAMessageControllerInstance._targets[STATUS]===viewname),","            handleAnonymousModelSync = (ITSAMessageControllerInstance._targets[MODELSYNC]===viewname);","        YArray.each(","            queue,","            function(itsamessage) {","                itsasimplemessage = itsamessage._simpleMessage;","                messagesource = itsamessage.source;","                messagetargetViewname = itsamessage[TARGET] && itsamessage[TARGET]._viewName;","                doHandleAnonymousSimple = (handleAnonymousSimple && !itsamessage[STATUSMESSAGE]) ||","                                          (itsamessage[STATUSMESSAGE] && ((handleAnonymousStatus && (messagesource!==MODELSYNC)) || (handleAnonymousModelSync && (messagesource===MODELSYNC))));","                isTargeted = ((messagetargetViewname===viewname) && (!simplemessages || itsasimplemessage)) || (!messagetargetViewname && (itsasimplemessage ? doHandleAnonymousSimple : handleAnonymous));","                validMessage = isTargeted && (itsamessage[LEVEL]===onelevel) && (processed || !itsamessage[PROCESSING]);","/*jshint expr:true */","                validMessage && count++;","/*jshint expr:false */","            }","        );","        return count;","    };","/*jshint expr:true */","    ((level===INFO) || !level) && (total+=countLevel(INFO));","    ((level===WARN) || !level) && (total+=countLevel(WARN));","    ((level===ERROR) || !level) && (total+=countLevel(ERROR));","/*jshint expr:false */","    return total;","};","","/**"," * Makes this instance handle 'untargeted' messages of the specified level."," * If this.simpleMessage is set true, then only Y.showMessage, Y.showWarning, Y.alert and Y.showError messages are handled.<br>"," * Handling level==='info' does not handle statusmessages or modelsync-messages. These should be set by handleStatus() or handleModelSync()."," *"," * @method handleLevel"," * @param level {String} queue-level, should be either 'info', 'warn', 'error'"," * @since 0.1","*/","ITSAMessageViewer.prototype.handleLevel = function(level) {","    var targetname = this._viewName;","    if (AVAILABLE_LEVELS[level]) {","        ITSAMessageControllerInstance._simpleTargets[level]=targetname;","/*jshint expr:true */","        this.simpleMessages || (ITSAMessageControllerInstance._targets[level]=targetname);","/*jshint expr:false */","    }","};","","/**"," * Making the statusbar handle untargeted Y.showStatus() messages. This excludes 'modelsync'-messages --> these"," * should be set by handleModelSync()."," *"," * @method handleStatus"," * @since 0.1","*/","ITSAMessageViewer.prototype.handleStatus = function() {","    ITSAMessageControllerInstance._targets[STATUS]=this._viewName;","};","","/**"," * Making the statusbar handle untargeted Model-sync-status messages, that appear when Models are busy syncing."," *"," * @method handleModelSync"," * @since 0.1","*/","ITSAMessageViewer.prototype.handleModelSync = function() {","    ITSAMessageControllerInstance._targets[MODELSYNC]=this._viewName;","    ITSAMessageControllerInstance._setupModelSyncListeners();","};","","/**"," * Makes the panel-instance -that belongs to the message- show up again, after it has been suspended.<br>"," * Should be overruled by a descendant-Class."," *"," * @method resurrect"," * @param itsamessage {Y.ITSAMessage} the Y.ITSAMessage-instance to be viewed."," * @since 0.1","*/","ITSAMessageViewer.prototype.resurrect = function(/* itsamessage */) {","    // should be overridden --> method that renderes the message in the dom","};","","/**"," * Shows a message to be shown by this MessageView-instance."," *"," * @method Y.showMessage"," * @param [title] {String} The title of the message"," * @param [message] {String} The message"," * @param [config] {Object} Config passed through to the Y.ITSAMessage instance and the next additional properties:","     * @param [config.closeButton] {Boolean} whether the closebutton should be visible.","     *                               By setting this, you the default setting of closeButton is overruled.","     * @param [config.icon] {String} Classname of the iconfont, for instance 'itsaicon-dialog-info' --> see gallerycss-itsa-base for more info about iconfonts.","     *                               By setting this, you the default icon is overruled.","     * @param [config.imageButtons] {Boolean} Whether to display imagebuttons.","     * @param [config.level] {String} The message-level, should be either 'info', warn' or 'error'.","     * @param [config.priority] {boolean} By setting this, the message will be positioned in the queue above messages that have no priority.","     * @param [config.primaryButton] {String} Name of the primary button, f.i. 'btn_ok'.","     *                               By setting this, you the default primaryButton is overruled.","     * @param [config.source] {String} Identification of the source (sender) of the message, which is 'application' by default.","     * @param [config.target] {Y.ITSAMessageViewer} MessageViewer-instance that is targeted and should handle the message.","     * @param [config.timeoutReject] {Number} Timeout after which the message's visiblilty should be rejected","     * @param [config.timeoutResolve] {Number} Timeout after which the message's visiblilty should be resolved"," * @return {Y.Promise} Promise that holds the user-response. Resolved once the user presses the 'ok'-button."," * @since 0.1","*/","ITSAMessageViewer.prototype[SHOW_MESSAGE] = function(title, message, config) {","    var params = ITSAMessageControllerInstance._retrieveParams(title, message, config);","    params.config.target = this;","    return ITSAMessageControllerInstance[UNDERSCORE+SHOW_MESSAGE](params.title, params.message, params.config);","};","","/**"," * Shows a warning to be shown by this MessageView-instance. Because the level will be 'warn', the message has precedence above normal messages."," *"," * @method Y.showWarning"," * @param [title] {String} The title of the message"," * @param [message] {String} The message"," * @param [config] {Object} Config passed through to the Y.ITSAMessage instance and the next additional properties:","     * @param [config.closeButton] {Boolean} whether the closebutton should be visible.","     *                               By setting this, you the default setting of closeButton is overruled.","     * @param [config.icon] {String} Classname of the iconfont, for instance 'itsaicon-dialog-info' --> see gallerycss-itsa-base for more info about iconfonts.","     *                               By setting this, you the default icon is overruled.","     * @param [config.imageButtons] {Boolean} Whether to display imagebuttons.","     * @param [config.level] {String} The message-level, should be either 'info', warn' or 'error'.","     * @param [config.priority] {boolean} By setting this, the message will be positioned in the queue above messages that have no priority.","     * @param [config.primaryButton] {String} Name of the primary button, f.i. 'btn_ok'.","     *                               By setting this, you the default primaryButton is overruled.","     * @param [config.source] {String} Identification of the source (sender) of the message, which is 'application' by default.","     * @param [config.target] {Y.ITSAMessageViewer} MessageViewer-instance that is targeted and should handle the message.","     * @param [config.timeoutReject] {Number} Timeout after which the message's visiblilty should be rejected","     * @param [config.timeoutResolve] {Number} Timeout after which the message's visiblilty should be resolved"," * @return {Y.Promise} Promise that holds the user-response. Resolved once the user presses the 'ok'-button."," * @since 0.1","*/","ITSAMessageViewer.prototype[SHOW_WARNING] = function(title, message, config) {","    var params = ITSAMessageControllerInstance._retrieveParams(title, message, config);","    params.config.target = this;","    return ITSAMessageControllerInstance[UNDERSCORE+SHOW_WARNING](params.title, params.message, params.config);","};","","/**"," * Shows an error to be shown by this MessageView-instance."," *"," * @method Y.showError"," * @param [title] {String} The title of the message"," * @param [message] {String} The message"," * @param [config] {Object} Config passed through to the Y.ITSAMessage instance and the next additional properties:","     * @param [config.closeButton] {Boolean} whether the closebutton should be visible.","     *                               By setting this, you the default setting of closeButton is overruled.","     * @param [config.icon] {String} Classname of the iconfont, for instance 'itsaicon-dialog-info' --> see gallerycss-itsa-base for more info about iconfonts.","     *                               By setting this, you the default icon is overruled.","     * @param [config.imageButtons] {Boolean} Whether to display imagebuttons.","     * @param [config.level] {String} The message-level, should be either 'info', warn' or 'error'.","     * @param [config.priority] {boolean} By setting this, the message will be positioned in the queue above messages that have no priority.","     * @param [config.primaryButton] {String} Name of the primary button, f.i. 'btn_ok'.","     *                               By setting this, you the default primaryButton is overruled.","     * @param [config.source] {String} Identification of the source (sender) of the message, which is 'application' by default.","     * @param [config.target] {Y.ITSAMessageViewer} MessageViewer-instance that is targeted and should handle the message.","     * @param [config.timeoutReject] {Number} Timeout after which the message's visiblilty should be rejected","     * @param [config.timeoutResolve] {Number} Timeout after which the message's visiblilty should be resolved"," * @return {Y.Promise} Promise that holds the user-response. Resolved once the user presses the 'ok'-button."," * @since 0.1","*/","ITSAMessageViewer.prototype[SHOW_ERROR] = function(title, message, config) {","    var params = ITSAMessageControllerInstance._retrieveParams(title, message, config);","    params.config.target = this;","    return ITSAMessageControllerInstance[UNDERSCORE+SHOW_ERROR](params.title, params.message, params.config);","};","","/**"," * Returns a handle with reference to the ITSAMessage-instance to be shown by this MessageView-instance. The message itself is NOT fullfilled yet!<br>"," * Because there are no buttons to make it fullfilled, you <u>must fullfil manually</u> by calling removeStatus(handle)."," *"," * @method Y.showStatus"," * @param message {String} The message"," * @param [config] {Object} Config passed through to the Y.ITSAMessage instance and the next additional properties:","     * @param [config.closeButton] {Boolean} whether the closebutton should be visible.","     *                               By setting this, you the default setting of closeButton is overruled.","     * @param [config.icon] {String} Classname of the iconfont, for instance 'itsaicon-dialog-info' --> see gallerycss-itsa-base for more info about iconfonts.","     *                               By setting this, you the default icon is overruled.","     * @param [config.imageButtons] {Boolean} Whether to display imagebuttons.","     * @param [config.level] {String} The message-level, should be either 'info', warn' or 'error'.","     * @param [config.priority] {boolean} By setting this, the message will be positioned in the queue above messages that have no priority.","     * @param [config.primaryButton] {String} Name of the primary button, f.i. 'btn_ok'.","     *                               By setting this, you the default primaryButton is overruled.","     * @param [config.source] {String} Identification of the source (sender) of the message, which is 'application' by default.","     * @param [config.target] {Y.ITSAMessageViewer} MessageViewer-instance that is targeted and should handle the message.","     * @param [config.timeoutReject] {Number} Timeout after which the message's visiblilty should be rejected","     * @param [config.timeoutResolve] {Number} Timeout after which the message's visiblilty should be resolved"," * @return {Y.Promise} handle with reference to the message, needs to be removed manually by Y.removeStatus(handle)."," * @since 0.1","*/","ITSAMessageViewer.prototype[SHOW_STATUS] = function(message, config) {","    var params = ITSAMessageControllerInstance._retrieveParams(null, message, config);","    params.config.target = this;","console.log('going to show message '+params.message);","    return ITSAMessageControllerInstance[UNDERSCORE+SHOW_STATUS](params.message, params.config);","};","","/**"," * Removes a message (that was shown using Y.showStatus) from the MessageView - or queue."," *"," * @method removeStatus"," * @param handle {Y.Promise} The returnvalue when Y.showStatus was called."," * @since 0.1","*/","ITSAMessageViewer.prototype[REMOVE_STATUS] = function(messageHandle) {","    ITSAMessageControllerInstance[UNDERSCORE+REMOVE_STATUS](messageHandle);","};","","/**"," * Makes the panel-instance -that belongs to the message- to hide, in order for a mesage at a higher level to show up.<br>"," * Should be overruled by a descendant-Class."," *"," * @method suspend"," * @param itsamessage {Y.ITSAMessage} the Y.ITSAMessage-instance to be viewed."," * @since 0.1","*/","ITSAMessageViewer.prototype.suspend = function(/* itsamessage */) {","    // could be overridden --> method that renderes the message in the dom","};","","/**"," * Views the message<br>"," * Should be overruled by a descendant-Class.<br>"," * <b>Note:</b> Make sure to return a Promise that fulfills when the message is read! otherwise all messsages are eaten up at once."," *"," * @method viewMessage"," * @param itsamessage {Y.ITSAMessage} the Y.ITSAMessage-instance to be viewed."," * @return {Y.Promise} will resolve when Y.ITSAMessage._promise gets fulfilled."," * @since 0.1","*/","ITSAMessageViewer.prototype.viewMessage = function(/* itsamessage */) {","    // should be overridden --> method that renderes the message in the dom","};","","/**"," * Cleans up bindings"," * @method destructor"," * @protected"," * @since 0.1","*/","ITSAMessageViewer.prototype.destructor = function() {","    var instance = this,","        targetname = instance._viewName,","        controllerTargets = ITSAMessageControllerInstance._targets,","        controllerSimpleTargets = ITSAMessageControllerInstance._simpleTargets;","    ITSAMessageControllerInstance.removeTarget(instance);","    // reset the target to 'itsadialog'","/*jshint expr:true */","    (controllerTargets[INFO]===targetname) && (controllerTargets[INFO]=ITSADIALOG);","    (controllerTargets[WARN]===targetname) && (controllerTargets[WARN]=ITSADIALOG);","    (controllerTargets[ERROR]===targetname) && (controllerTargets[ERROR]=ITSADIALOG);","    (controllerSimpleTargets[INFO]===targetname) && (controllerSimpleTargets[INFO]=ITSADIALOG);","    (controllerSimpleTargets[WARN]===targetname) && (controllerSimpleTargets[WARN]=ITSADIALOG);","    (controllerSimpleTargets[ERROR]===targetname) && (controllerSimpleTargets[ERROR]=ITSADIALOG);","/*jshint expr:false */","    instance._lastMessage = {};","};","","//--- private methods ---------------------------------------------------","","/**"," * Returns the next Y.ITSAMessage from the queue."," *"," * @method _nextMessagePromise"," * @param level {String} queue-level, should be either 'info', 'warn' or 'error'"," * @private"," * @return {Y.Promise} always returns a resolved Promise returning a Y.ITSAMessage-instance --> resolve(itsamessage)"," * @since 0.1","*/","ITSAMessageViewer.prototype._nextMessagePromise = function(level) {","    var instance = this;","    return ITSAMessageControllerInstance.isReady().then(","        function() {","            return new Y.Promise(function (resolve, reject) {","                var queue = ITSAMessageControllerInstance.queue,","                    viewname = instance._viewName,","                    simplemessages = instance.simpleMessages,","                    handleAnonymous = (ITSAMessageControllerInstance._targets[level]===viewname),","                    handleAnonymousSimple = (ITSAMessageControllerInstance._simpleTargets[level]===viewname),","                    handleAnonymousStatus = (ITSAMessageControllerInstance._targets[STATUS]===viewname),","                    handleAnonymousModelSync = (ITSAMessageControllerInstance._targets[MODELSYNC]===viewname),","                    nextMessage, listener, otherLevelMessage, destroylistener, isTargeted, itsasimplemessage, messagesource, doHandleAnonymousSimple, messagetargetViewname;","/*jshint expr:true */","                instance.get(DESTROYED) && reject();","/*jshint expr:false */","                // first try to retrieve message with priority","                YArray.some(","                    queue,","                    function(itsamessage) {","                        itsasimplemessage = itsamessage._simpleMessage;","                        messagesource = itsamessage.source;","                        messagetargetViewname = itsamessage[TARGET] && itsamessage[TARGET]._viewName;","                        doHandleAnonymousSimple = (handleAnonymousSimple && !itsamessage[STATUSMESSAGE]) ||","                                                  (itsamessage[STATUSMESSAGE] && ((handleAnonymousStatus && (messagesource!==MODELSYNC)) || (handleAnonymousModelSync && (messagesource===MODELSYNC))));","                        isTargeted = ((messagetargetViewname===viewname) && (!simplemessages || itsasimplemessage)) || (!messagetargetViewname && (itsasimplemessage ? doHandleAnonymousSimple : handleAnonymous));","                        nextMessage = isTargeted && (itsamessage[LEVEL]===level) && itsamessage[PRIORITY] && !itsamessage[PROCESSING] && itsamessage;","                        return nextMessage;","                    }","                );","                // if no prioritymessage, then try to retrieve message without priority","/*jshint expr:true */","                nextMessage || YArray.some(","                    queue,","                    function(itsamessage) {","                        itsasimplemessage = itsamessage._simpleMessage;","                        messagesource = itsamessage.source;","                        messagetargetViewname = itsamessage[TARGET] && itsamessage[TARGET]._viewName;","                        doHandleAnonymousSimple = (handleAnonymousSimple && !itsamessage[STATUSMESSAGE]) ||","                                                  (itsamessage[STATUSMESSAGE] && ((handleAnonymousStatus && (messagesource!==MODELSYNC)) || (handleAnonymousModelSync && (messagesource===MODELSYNC))));","                        isTargeted = ((messagetargetViewname===viewname) && (!simplemessages || itsasimplemessage)) || (!messagetargetViewname && (itsasimplemessage ? doHandleAnonymousSimple : handleAnonymous));","                        nextMessage = isTargeted && (itsamessage[LEVEL]===level) && !itsamessage[PRIORITY] && !itsamessage[PROCESSING] && itsamessage;","                        return nextMessage;","                    }","                );","/*jshint expr:false */","                if (nextMessage) {","                    instance._lastMessage[level] = nextMessage;","                    // first: is level=warn or level=error then we might need to pauze previous levels","/*jshint expr:true */","                    // check if 'info' needs to be suspended:","                    (otherLevelMessage=instance._lastMessage[INFO]) && ((level!==INFO) || instance._lastMessage[WARN] || instance._lastMessage[ERROR]) &&","                        (otherLevelMessage[SUSPENDED]=true) && instance._suspend(otherLevelMessage);","                    // check if 'warn' needs to be suspended:","                    (otherLevelMessage=instance._lastMessage[WARN]) && ((level===ERROR) || instance._lastMessage[ERROR]) && (otherLevelMessage[SUSPENDED]=true) &&","                        instance._suspend(otherLevelMessage);","/*jshint expr:false */","                    resolve(nextMessage);","                }","                else {","                    // No message in the queue: wait for new messages to be added.","                    // first: is level=warn or level=error then we might need to reactivate previous levels","/*jshint expr:true */","                    if (level===ERROR) {","                        otherLevelMessage = instance._lastMessage[WARN] || instance._lastMessage[INFO];","                    }","                    else if ((level===WARN) && (!instance._lastMessage[ERROR])) {","                        otherLevelMessage = instance._lastMessage[INFO];","                    }","                    if (otherLevelMessage && otherLevelMessage[SUSPENDED]) {","                        otherLevelMessage[SUSPENDED] = false;","                        instance._resurrect(otherLevelMessage);","                    }","                    instance._lastMessage[level] = null;","                    // fire the levelclear-event to make 'waiting at other levels' at the first promise of _nextMessagePromise resolve:","                    (level!==INFO) && instance.fire(EVT_LEVELCLEAR);","/*jshint expr:false */","                    destroylistener = instance.once('destroy', reject);","                    listener=Y.on(NEWMESSAGE, function(e) {","                        var itsamessage = e.itsamessage;","                            itsasimplemessage = itsamessage._simpleMessage;","                            messagesource = itsamessage.source;","                            messagetargetViewname = itsamessage[TARGET] && itsamessage[TARGET]._viewName;","                            doHandleAnonymousSimple = (handleAnonymousSimple && !itsamessage[STATUSMESSAGE]) ||","                                                      (itsamessage[STATUSMESSAGE] && ((handleAnonymousStatus && (messagesource!==MODELSYNC)) || (handleAnonymousModelSync && (messagesource===MODELSYNC))));","                            isTargeted = ((messagetargetViewname===viewname) && (!simplemessages || itsasimplemessage)) || (!messagetargetViewname && (itsasimplemessage ? doHandleAnonymousSimple : handleAnonymous));","                        if (isTargeted && (itsamessage[LEVEL]===level)) {","                            listener.detach();","                            destroylistener.detach();","                            instance._lastMessage[level] = itsamessage;","                    // next: is level=warn or level=error then we might need to pauze previous levels","/*jshint expr:true */","                            // check if 'info' needs to be suspended:","                            (otherLevelMessage=instance._lastMessage[INFO]) && ((level!==INFO) || instance._lastMessage[WARN] || instance._lastMessage[ERROR]) &&","                                (otherLevelMessage[SUSPENDED]=true) && instance._suspend(otherLevelMessage);","                            // check if 'warn' needs to be suspended:","                            (otherLevelMessage=instance._lastMessage[WARN]) && ((level===ERROR) || instance._lastMessage[ERROR]) && (otherLevelMessage[SUSPENDED]=true) &&","                                instance._suspend(otherLevelMessage);","/*jshint expr:false */","                            resolve(itsamessage);","                        }","                    });","                }","            });","        }","    ).then(","        function(itsamessage) {","            // if higher level is 'busy' then we need to wait until all those messages are cleaned up","            var proceed = (level===ERROR) || (!instance._lastMessage[ERROR] && ((level===WARN) || !instance._lastMessage[WARN]));","            return proceed ? itsamessage : new Y.Promise(function (resolve) {","                var listener = instance.on(EVT_LEVELCLEAR, function() {","                    proceed = (!instance._lastMessage[ERROR] && ((level===WARN) || !instance._lastMessage[WARN]));","/*jshint expr:true */","                    proceed && listener.detach() && resolve(itsamessage);","/*jshint expr:false */","                });","            });","        }","    );","};","","/**"," * Starts processing a queue-level. This will make messages (Y.ITSAMessage-instances) to be taken from Y.ITSAMessageController's queue and"," * to be handled by a descendant messageviewer, f.i. like Y.ITSADialog."," *"," * @method _processQueue"," * @param level {String} queue-level, should be either 'info', 'warn' or 'error'"," * @private"," * @since 0.1","*/","ITSAMessageViewer.prototype._processQueue = function(level) {","    var instance = this,","        handlePromise, handlePromiseLoop;","    handlePromise = function() {","        return instance._nextMessagePromise(level).then(","            function(itsamessage) {","                itsamessage[PROCESSING] = true;","/*jshint expr:true */","                (itsamessage[TIMEOUTRESOLVE] || itsamessage[TIMEOUTREJECT]) && itsamessage._startTimer();","/*jshint expr:false */","                return instance._viewMessage(itsamessage);","            }","        ).then(","            null,","            function(err) {","                // unfortunatly we cannot fire or log an error, because that could be caught by Y.ITSADialog and become a loop in the messageview","                // MUST log 'info'","            }","        );","    };","    handlePromiseLoop = function() {","        // will loop until rejected, which is at destruction of the class","        return instance.get(DESTROYED) || handlePromise().then(handlePromiseLoop, handlePromiseLoop);","    };","    handlePromiseLoop();","};","","/**"," * Calls resurrect() and also starts Y.ITSAMessage.timer - if appropriate."," *"," * @method _resurrect"," * @param itsamessage {Y.ITSAMessage} the Y.ITSAMessage-instance to be viewed."," * @private"," * @since 0.1","*/","ITSAMessageViewer.prototype._resurrect = function(itsamessage) {","    var instance = this;","    // should be overridden --> method that renderes the message in the dom","    if (!itsamessage.get(DESTROYED)) {","    /*jshint expr:true */","        (itsamessage[TIMEOUTRESOLVE] || itsamessage[TIMEOUTREJECT]) && itsamessage._startTimer();","    /*jshint expr:false */","        // first: play sound again:","        ITSAMessageControllerInstance.sound(itsamessage);","        instance.resurrect(itsamessage);","    }","};","","/**"," * Calls suspend() and also interrupts Y.ITSAMessage.timer - if appropriate."," *"," * @method _suspend"," * @param itsamessage {Y.ITSAMessage} the Y.ITSAMessage-instance to be viewed."," * @private"," * @since 0.1","*/","ITSAMessageViewer.prototype._suspend = function(itsamessage) {","    var instance = this;","/*jshint expr:true */","    (itsamessage[TIMEOUTRESOLVE] || itsamessage[TIMEOUTREJECT]) && itsamessage._stopTimer();","/*jshint expr:false */","    instance.suspend(itsamessage);","};","","/**"," * Views the message through viewMessage(), but also makes the Y.ITSAMessage-instance create sound<br>"," *"," * @method _viewMessage"," * @param itsamessage {Y.ITSAMessage} the Y.ITSAMessage-instance to be viewed."," * @private"," * @return {Y.Promise}"," * @since 0.1","*/","ITSAMessageViewer.prototype._viewMessage = function(itsamessage) {","    // should be overridden --> method that renderes the message in the dom","    ITSAMessageControllerInstance.sound(itsamessage);","    return this.viewMessage(itsamessage);","};","","Y.ITSAMessageViewer = ITSAMessageViewer;","","// define public methods:","","/**"," * Informs the user with a message and three buttons: 'abort', 'ignore', 'retry'.<br>"," * The promise can resolve by either 'ignore' or 'retry' and will reject by 'abort'. Once resolved, look for result.button"," * to find out which button the user pressed.<br>"," * <b>Note:</b> You need a descendant of Y.ITSAMessageViewer (f.i. Y.ITSADialog) to make the message be displayed!"," *"," * @method Y.getRetryConfirmation"," * @param [title] {String} The title of the message"," * @param [message] {String} The message"," * @param [config] {Object} Config passed through to the Y.ITSAMessage instance and the next additional properties:","     * @param [config.closeButton] {Boolean} whether the closebutton should be visible.","     *                               By setting this, you the default setting of closeButton is overruled.","     * @param [config.icon] {String} Classname of the iconfont, for instance 'itsaicon-dialog-info' --> see gallerycss-itsa-base for more info about iconfonts.","     *                               By setting this, you the default icon is overruled.","     * @param [config.imageButtons] {Boolean} Whether to display imagebuttons.","     * @param [config.level] {String} The message-level, should be either 'info', warn' or 'error'.","     * @param [config.priority] {boolean} By setting this, the message will be positioned in the queue above messages that have no priority.","     * @param [config.primaryButton] {String} Name of the primary button, f.i. 'btn_ok'.","     *                               By setting this, you the default primaryButton ('btn_retry') is overruled.","     * @param [config.source] {String} Identification of the source (sender) of the message, which is 'application' by default.","     * @param [config.target] {Y.ITSAMessageViewer} MessageViewer-instance that is targeted and should handle the message.","     * @param [config.timeoutReject] {Number} Timeout after which the message's visiblilty should be rejected","     * @param [config.timeoutResolve] {Number} Timeout after which the message's visiblilty should be resolved"," * @return {Y.Promise} Promise that holds the user-response. Check 'button' to find out what button was pressed."," *                     resolve(result) --> result.button==='ignore' || 'retry' OR reject(reason) --> reason==='abort' or error"," * @since 0.1","*/","Y[GET_RETRY_CONFIRMATION] = Y.bind(ITSAMessageControllerInstance[UNDERSCORE+GET_RETRY_CONFIRMATION], ITSAMessageControllerInstance);","","/**"," * Alias for Y.getConfirmation.<br>"," * Informs the user with a message and two buttons: 'no' and 'yes'.<br>"," * The promise can resolve by 'yes and will reject by 'no'."," * <b>Note:</b> You need a descendant of Y.ITSAMessageViewer (f.i. Y.ITSADialog) to make the message be displayed!"," *"," * @method Y.confirm"," * @param [title] {String} The title of the message"," * @param [message] {String} The message"," * @param [config] {Object} Config passed through to the Y.ITSAMessage instance and the next additional properties:","     * @param [config.closeButton] {Boolean} whether the closebutton should be visible.","     *                               By setting this, you the default setting of closeButton is overruled.","     * @param [config.icon] {String} Classname of the iconfont, for instance 'itsaicon-dialog-info' --> see gallerycss-itsa-base for more info about iconfonts.","     *                               By setting this, you the default icon is overruled.","     * @param [config.imageButtons] {Boolean} Whether to display imagebuttons.","     * @param [config.level] {String} The message-level, should be either 'info', warn' or 'error'.","     * @param [config.priority] {boolean} By setting this, the message will be positioned in the queue above messages that have no priority.","     * @param [config.primaryButton] {String} Name of the primary button, f.i. 'btn_ok'.","     *                               By setting this, you the default primaryButton 'btn_yes' is overruled.","     * @param [config.source] {String} Identification of the source (sender) of the message, which is 'application' by default.","     * @param [config.target] {Y.ITSAMessageViewer} MessageViewer-instance that is targeted and should handle the message.","     * @param [config.timeoutReject] {Number} Timeout after which the message's visiblilty should be rejected","     * @param [config.timeoutResolve] {Number} Timeout after which the message's visiblilty should be resolved"," * @return {Y.Promise} Promise that holds the user-response. Resolves by 'ok' and rejects by 'no'."," * @since 0.1","*/","","/**"," * Informs the user with a message and two buttons: 'no' and 'yes'.<br>"," * The promise can resolve by 'yes and will reject by 'no'."," * <b>Note:</b> You need a descendant of Y.ITSAMessageViewer (f.i. Y.ITSADialog) to make the message be displayed!"," *"," * @method Y.getConfirmation"," * @param [title] {String} The title of the message"," * @param [message] {String} The message"," * @param [config] {Object} Config passed through to the Y.ITSAMessage instance and the next additional properties:","     * @param [config.closeButton] {Boolean} whether the closebutton should be visible.","     *                               By setting this, you the default setting of closeButton is overruled.","     * @param [config.icon] {String} Classname of the iconfont, for instance 'itsaicon-dialog-info' --> see gallerycss-itsa-base for more info about iconfonts.","     *                               By setting this, you the default icon is overruled.","     * @param [config.imageButtons] {Boolean} Whether to display imagebuttons.","     * @param [config.level] {String} The message-level, should be either 'info', warn' or 'error'.","     * @param [config.priority] {boolean} By setting this, the message will be positioned in the queue above messages that have no priority.","     * @param [config.primaryButton] {String} Name of the primary button, f.i. 'btn_ok'.","     *                               By setting this, you the default primaryButton 'btn_yes' is overruled.","     * @param [config.source] {String} Identification of the source (sender) of the message, which is 'application' by default.","     * @param [config.target] {Y.ITSAMessageViewer} MessageViewer-instance that is targeted and should handle the message.","     * @param [config.timeoutReject] {Number} Timeout after which the message's visiblilty should be rejected","     * @param [config.timeoutResolve] {Number} Timeout after which the message's visiblilty should be resolved"," * @return {Y.Promise} Promise that holds the user-response. Resolves by 'ok' and rejects by 'no'."," * @since 0.1","*/","Y.confirm = Y[GET_CONFIRMATION] = Y.bind(ITSAMessageControllerInstance[UNDERSCORE+GET_CONFIRMATION], ITSAMessageControllerInstance);","","/**"," * Asks the user for an url.<br>"," * <b>Note:</b> You need a descendant of Y.ITSAMessageViewer (f.i. Y.ITSADialog) to make the message be displayed!"," *"," * @method Y.getURL"," * @param [title] {String} The title of the message"," * @param [message] {String} The message"," * @param [config] {Object} Config passed through to the Y.ITSAMessage instance and the next additional properties:","     * @param [config.closeButton] {Boolean} whether the closebutton should be visible.","     *                               By setting this, you the default setting of closeButton is overruled.","     * @param [config.formconfig] {Object} Config that passes through to the UI-element. See Y.ITSAFormModel for usage of formconfig.","     * @param [config.icon] {String} Classname of the iconfont, for instance 'itsaicon-dialog-info' --> see gallerycss-itsa-base for more info about iconfonts.","     *                               By setting this, you the default icon is overruled.","     * @param [config.imageButtons] {Boolean} Whether to display imagebuttons.","     * @param [config.level] {String} The message-level, should be either 'info', warn' or 'error'.","     * @param [config.priority] {boolean} By setting this, the message will be positioned in the queue above messages that have no priority.","     * @param [config.primaryButton] {String} Name of the primary button, f.i. 'btn_ok'.","     *                               By setting this, you the default primaryButton is overruled.","     * @param [config.required] {Boolean} Makes the input required: the promise cannot be rejected, there is no cancel or close-button.","     * @param [config.source] {String} Identification of the source (sender) of the message, which is 'application' by default.","     * @param [config.target] {Y.ITSAMessageViewer} MessageViewer-instance that is targeted and should handle the message.","     * @param [config.timeoutReject] {Number} Timeout after which the message's visiblilty should be rejected","     * @param [config.timeoutResolve] {Number} Timeout after which the message's visiblilty should be resolved","     * @param [config.validationerror] {String} Message that Y.Tipsy uses when validation fails.","     * @param [config.validator] {Function} Validator function for the UI-element","     * @param [config.value] {Any} Initial value that passes through to the UI-element."," * @return {Y.Promise} Promise that holds the user-response."," *                     resolve(result) --> result.input===the url OR reject(reason) --> reason==='cancel' or error"," * @since 0.1","*/","Y[GET_URL] = Y.bind(ITSAMessageControllerInstance[UNDERSCORE+GET_URL], ITSAMessageControllerInstance);","","/**"," * Asks the user for an emailaddress.<br>"," * <b>Note:</b> You need a descendant of Y.ITSAMessageViewer (f.i. Y.ITSADialog) to make the message be displayed!"," *"," * @method Y.getEmail"," * @param [title] {String} The title of the message"," * @param [message] {String} The message"," * @param [config] {Object} Config passed through to the Y.ITSAMessage instance and the next additional properties:","     * @param [config.closeButton] {Boolean} whether the closebutton should be visible.","     *                               By setting this, you the default setting of closeButton is overruled.","     * @param [config.formconfig] {Object} Config that passes through to the UI-element. See Y.ITSAFormModel for usage of formconfig.","     * @param [config.icon] {String} Classname of the iconfont, for instance 'itsaicon-dialog-info' --> see gallerycss-itsa-base for more info about iconfonts.","     *                               By setting this, you the default icon is overruled.","     * @param [config.imageButtons] {Boolean} Whether to display imagebuttons.","     * @param [config.level] {String} The message-level, should be either 'info', warn' or 'error'.","     * @param [config.priority] {boolean} By setting this, the message will be positioned in the queue above messages that have no priority.","     * @param [config.primaryButton] {String} Name of the primary button, f.i. 'btn_ok'.","     *                               By setting this, you the default primaryButton is overruled.","     * @param [config.required] {Boolean} Makes the input required: the promise cannot be rejected, there is no cancel or close-button.","     * @param [config.source] {String} Identification of the source (sender) of the message, which is 'application' by default.","     * @param [config.target] {Y.ITSAMessageViewer} MessageViewer-instance that is targeted and should handle the message.","     * @param [config.timeoutReject] {Number} Timeout after which the message's visiblilty should be rejected","     * @param [config.timeoutResolve] {Number} Timeout after which the message's visiblilty should be resolved","     * @param [config.validationerror] {String} Message that Y.Tipsy uses when validation fails.","     * @param [config.validator] {Function} Validator function for the UI-element","     * @param [config.value] {Any} Initial value that passes through to the UI-element."," * @return {Y.Promise} Promise that holds the user-response."," *                     resolve(result) --> result.input===the emailaddress OR reject(reason) --> reason==='cancel' or error"," * @since 0.1","*/","Y[GET_EMAIL] = Y.bind(ITSAMessageControllerInstance[UNDERSCORE+GET_EMAIL], ITSAMessageControllerInstance);","","/**"," * Alias for Y.getInput.<br>"," * Asks the user for any input.<br>"," * <b>Note:</b> You need a descendant of Y.ITSAMessageViewer (f.i. Y.ITSADialog) to make the message be displayed!"," *"," * @method Y.prompt"," * @param [title] {String} The title of the message"," * @param [message] {String} The message"," * @param [config] {Object} Config passed through to the Y.ITSAMessage instance and the next additional properties:","     * @param [config.closeButton] {Boolean} whether the closebutton should be visible.","     *                               By setting this, you the default setting of closeButton is overruled.","     * @param [config.formconfig] {Object} Config that passes through to the UI-element. See Y.ITSAFormModel for usage of formconfig.","     * @param [config.icon] {String} Classname of the iconfont, for instance 'itsaicon-dialog-info' --> see gallerycss-itsa-base for more info about iconfonts.","     *                               By setting this, you the default icon is overruled.","     * @param [config.imageButtons] {Boolean} Whether to display imagebuttons.","     * @param [config.level] {String} The message-level, should be either 'info', warn' or 'error'.","     * @param [config.priority] {boolean} By setting this, the message will be positioned in the queue above messages that have no priority.","     * @param [config.primaryButton] {String} Name of the primary button, f.i. 'btn_ok'.","     *                               By setting this, you the default primaryButton is overruled.","     * @param [config.required] {Boolean} Makes the input required: the promise cannot be rejected, there is no cancel or close-button.","     * @param [config.source] {String} Identification of the source (sender) of the message, which is 'application' by default.","     * @param [config.target] {Y.ITSAMessageViewer} MessageViewer-instance that is targeted and should handle the message.","     * @param [config.textarea] {Boolean} Render a textarea instead of an input-element.","     * @param [config.timeoutReject] {Number} Timeout after which the message's visiblilty should be rejected","     * @param [config.timeoutResolve] {Number} Timeout after which the message's visiblilty should be resolved","     * @param [config.validationerror] {String} Message that Y.Tipsy uses when validation fails.","     * @param [config.validator] {Function} Validator function for the UI-element","     * @param [config.value] {Any} Initial value that passes through to the UI-element."," * @return {Y.Promise} Promise that holds the user-response."," *                     resolve(result) --> result.input===the input OR reject(reason) --> reason==='cancel' or error"," * @since 0.1","*/","","/**"," * Asks the user for any input.<br>"," * <b>Note:</b> You need a descendant of Y.ITSAMessageViewer (f.i. Y.ITSADialog) to make the message be displayed!"," *"," * @method Y.getInput"," * @param [title] {String} The title of the message"," * @param [message] {String} The message"," * @param [config] {Object} Config passed through to the Y.ITSAMessage instance and the next additional properties:","     * @param [config.closeButton] {Boolean} whether the closebutton should be visible.","     *                               By setting this, you the default setting of closeButton is overruled.","     * @param [config.formconfig] {Object} Config that passes through to the UI-element. See Y.ITSAFormModel for usage of formconfig.","     * @param [config.icon] {String} Classname of the iconfont, for instance 'itsaicon-dialog-info' --> see gallerycss-itsa-base for more info about iconfonts.","     *                               By setting this, you the default icon is overruled.","     * @param [config.imageButtons] {Boolean} Whether to display imagebuttons.","     * @param [config.level] {String} The message-level, should be either 'info', warn' or 'error'.","     * @param [config.priority] {boolean} By setting this, the message will be positioned in the queue above messages that have no priority.","     * @param [config.primaryButton] {String} Name of the primary button, f.i. 'btn_ok'.","     *                               By setting this, you the default primaryButton is overruled.","     * @param [config.required] {Boolean} Makes the input required: the promise cannot be rejected, there is no cancel or close-button.","     * @param [config.source] {String} Identification of the source (sender) of the message, which is 'application' by default.","     * @param [config.target] {Y.ITSAMessageViewer} MessageViewer-instance that is targeted and should handle the message.","     * @param [config.textarea] {Boolean} Render a textarea instead of an input-element.","     * @param [config.timeoutReject] {Number} Timeout after which the message's visiblilty should be rejected","     * @param [config.timeoutResolve] {Number} Timeout after which the message's visiblilty should be resolved","     * @param [config.validationerror] {String} Message that Y.Tipsy uses when validation fails.","     * @param [config.validator] {Function} Validator function for the UI-element","     * @param [config.value] {Any} Initial value that passes through to the UI-element."," * @return {Y.Promise} Promise that holds the user-response."," *                     resolve(result) --> result.input===the input OR reject(reason) --> reason==='cancel' or error"," * @since 0.1","*/","Y.prompt = Y[GET_INPUT] = Y.bind(ITSAMessageControllerInstance[UNDERSCORE+GET_INPUT], ITSAMessageControllerInstance);","","/**"," * Asks the user for a number.<br>"," * <b>Note:</b> You need a descendant of Y.ITSAMessageViewer (f.i. Y.ITSADialog) to make the message be displayed!"," *"," * @method Y.getNumber"," * @param [title] {String} The title of the message"," * @param [message] {String} The message"," * @param [config] {Object} Config passed through to the Y.ITSAMessage instance and the next additional properties:","     * @param [config.closeButton] {Boolean} whether the closebutton should be visible.","     *                               By setting this, you the default setting of closeButton is overruled.","     * @param [config.formconfig] {Object} Config that passes through to the UI-element. See Y.ITSAFormModel for usage of formconfig.","     * @param [config.icon] {String} Classname of the iconfont, for instance 'itsaicon-dialog-info' --> see gallerycss-itsa-base for more info about iconfonts.","     *                               By setting this, you the default icon is overruled.","     * @param [config.imageButtons] {Boolean} Whether to display imagebuttons.","     * @param [config.level] {String} The message-level, should be either 'info', warn' or 'error'.","     * @param [config.priority] {boolean} By setting this, the message will be positioned in the queue above messages that have no priority.","     * @param [config.primaryButton] {String} Name of the primary button, f.i. 'btn_ok'.","     *                               By setting this, you the default primaryButton is overruled.","     * @param [config.required] {Boolean} Makes the input required: the promise cannot be rejected, there is no cancel or close-button.","     * @param [config.source] {String} Identification of the source (sender) of the message, which is 'application' by default.","     * @param [config.target] {Y.ITSAMessageViewer} MessageViewer-instance that is targeted and should handle the message.","     * @param [config.timeoutReject] {Number} Timeout after which the message's visiblilty should be rejected","     * @param [config.timeoutResolve] {Number} Timeout after which the message's visiblilty should be resolved","     * @param [config.validationerror] {String} Message that Y.Tipsy uses when validation fails.","     * @param [config.validator] {Function} Validator function for the UI-element","     * @param [config.value] {Any} Initial value that passes through to the UI-element."," * @return {Y.Promise} Promise that holds the user-response."," *                     resolve(result) --> result.number===the number OR reject(reason) --> reason==='cancel' or error"," * @since 0.1","*/","Y[GET_NUMBER] = Y.bind(ITSAMessageControllerInstance[UNDERSCORE+GET_NUMBER], ITSAMessageControllerInstance);","","/**"," * Removes a message (that was shown using Y.showStatus) from the MessageView - or queue."," *"," * @method removeStatus"," * @param handle {Y.Promise} The returnvalue when Y.showStatus was called."," * @since 0.1","*/","Y[REMOVE_STATUS] = Y.bind(ITSAMessageControllerInstance[UNDERSCORE+REMOVE_STATUS], ITSAMessageControllerInstance);","","/**"," * Shows a message.<br>"," * <b>Note:</b> You need a descendant of Y.ITSAMessageViewer (f.i. Y.ITSADialog) to make the message be displayed!"," *"," * @method Y.showMessage"," * @param [title] {String} The title of the message"," * @param [message] {String} The message"," * @param [config] {Object} Config passed through to the Y.ITSAMessage instance and the next additional properties:","     * @param [config.closeButton] {Boolean} whether the closebutton should be visible.","     *                               By setting this, you the default setting of closeButton is overruled.","     * @param [config.icon] {String} Classname of the iconfont, for instance 'itsaicon-dialog-info' --> see gallerycss-itsa-base for more info about iconfonts.","     *                               By setting this, you the default icon is overruled.","     * @param [config.imageButtons] {Boolean} Whether to display imagebuttons.","     * @param [config.level] {String} The message-level, should be either 'info', warn' or 'error'.","     * @param [config.priority] {boolean} By setting this, the message will be positioned in the queue above messages that have no priority.","     * @param [config.primaryButton] {String} Name of the primary button, f.i. 'btn_ok'.","     *                               By setting this, you the default primaryButton is overruled.","     * @param [config.source] {String} Identification of the source (sender) of the message, which is 'application' by default.","     * @param [config.target] {Y.ITSAMessageViewer} MessageViewer-instance that is targeted and should handle the message.","     * @param [config.timeoutReject] {Number} Timeout after which the message's visiblilty should be rejected","     * @param [config.timeoutResolve] {Number} Timeout after which the message's visiblilty should be resolved"," * @return {Y.Promise} Promise that holds the user-response. Resolved once the user presses the 'ok'-button."," * @since 0.1","*/","Y[SHOW_MESSAGE] = Y.bind(ITSAMessageControllerInstance[UNDERSCORE+SHOW_MESSAGE], ITSAMessageControllerInstance);","","/**"," * Alias for Y.showWarning.<br>"," * Shows a warning. Because the level will be 'warn', the message has precedence above normal messages.<br>"," * <b>Note:</b> You need a descendant of Y.ITSAMessageViewer (f.i. Y.ITSADialog) to make the message be displayed!"," *"," * @method Y.alert"," * @param [title] {String} The title of the message"," * @param [message] {String} The message"," * @param [config] {Object} Config passed through to the Y.ITSAMessage instance and the next additional properties:","     * @param [config.closeButton] {Boolean} whether the closebutton should be visible.","     *                               By setting this, you the default setting of closeButton is overruled.","     * @param [config.icon] {String} Classname of the iconfont, for instance 'itsaicon-dialog-info' --> see gallerycss-itsa-base for more info about iconfonts.","     *                               By setting this, you the default icon is overruled.","     * @param [config.imageButtons] {Boolean} Whether to display imagebuttons.","     * @param [config.level] {String} The message-level, should be either 'info', warn' or 'error'.","     * @param [config.priority] {boolean} By setting this, the message will be positioned in the queue above messages that have no priority.","     * @param [config.primaryButton] {String} Name of the primary button, f.i. 'btn_ok'.","     *                               By setting this, you the default primaryButton is overruled.","     * @param [config.source] {String} Identification of the source (sender) of the message, which is 'application' by default.","     * @param [config.target] {Y.ITSAMessageViewer} MessageViewer-instance that is targeted and should handle the message.","     * @param [config.timeoutReject] {Number} Timeout after which the message's visiblilty should be rejected","     * @param [config.timeoutResolve] {Number} Timeout after which the message's visiblilty should be resolved"," * @return {Y.Promise} Promise that holds the user-response. Resolved once the user presses the 'ok'-button."," * @since 0.1","*/","","/**"," * Shows a warning. Because the level will be 'warn', the message has precedence above normal messages.<br>"," * <b>Note:</b> You need a descendant of Y.ITSAMessageViewer (f.i. Y.ITSADialog) to make the message be displayed!"," *"," * @method Y.showWarning"," * @param [title] {String} The title of the message"," * @param [message] {String} The message"," * @param [config] {Object} Config passed through to the Y.ITSAMessage instance and the next additional properties:","     * @param [config.closeButton] {Boolean} whether the closebutton should be visible.","     *                               By setting this, you the default setting of closeButton is overruled.","     * @param [config.icon] {String} Classname of the iconfont, for instance 'itsaicon-dialog-info' --> see gallerycss-itsa-base for more info about iconfonts.","     *                               By setting this, you the default icon is overruled.","     * @param [config.imageButtons] {Boolean} Whether to display imagebuttons.","     * @param [config.level] {String} The message-level, should be either 'info', warn' or 'error'.","     * @param [config.priority] {boolean} By setting this, the message will be positioned in the queue above messages that have no priority.","     * @param [config.primaryButton] {String} Name of the primary button, f.i. 'btn_ok'.","     *                               By setting this, you the default primaryButton is overruled.","     * @param [config.source] {String} Identification of the source (sender) of the message, which is 'application' by default.","     * @param [config.target] {Y.ITSAMessageViewer} MessageViewer-instance that is targeted and should handle the message.","     * @param [config.timeoutReject] {Number} Timeout after which the message's visiblilty should be rejected","     * @param [config.timeoutResolve] {Number} Timeout after which the message's visiblilty should be resolved"," * @return {Y.Promise} Promise that holds the user-response. Resolved once the user presses the 'ok'-button."," * @since 0.1","*/","Y.alert = Y[SHOW_WARNING] = Y.bind(ITSAMessageControllerInstance[UNDERSCORE+SHOW_WARNING], ITSAMessageControllerInstance);","","/**"," * Shows an error. Because the level will be 'error', the message has precedence above warnings and normal messages.<br>"," * <b>Note:</b> You need a descendant of Y.ITSAMessageViewer (f.i. Y.ITSADialog) to make the message be displayed!"," *"," * @method Y.showError"," * @param [title] {String} The title of the message"," * @param [message] {String} The message"," * @param [config] {Object} Config passed through to the Y.ITSAMessage instance and the next additional properties:","     * @param [config.closeButton] {Boolean} whether the closebutton should be visible.","     *                               By setting this, you the default setting of closeButton is overruled.","     * @param [config.icon] {String} Classname of the iconfont, for instance 'itsaicon-dialog-info' --> see gallerycss-itsa-base for more info about iconfonts.","     *                               By setting this, you the default icon is overruled.","     * @param [config.imageButtons] {Boolean} Whether to display imagebuttons.","     * @param [config.level] {String} The message-level, should be either 'info', warn' or 'error'.","     * @param [config.priority] {boolean} By setting this, the message will be positioned in the queue above messages that have no priority.","     * @param [config.primaryButton] {String} Name of the primary button, f.i. 'btn_ok'.","     *                               By setting this, you the default primaryButton is overruled.","     * @param [config.source] {String} Identification of the source (sender) of the message, which is 'application' by default.","     * @param [config.target] {Y.ITSAMessageViewer} MessageViewer-instance that is targeted and should handle the message.","     * @param [config.timeoutReject] {Number} Timeout after which the message's visiblilty should be rejected","     * @param [config.timeoutResolve] {Number} Timeout after which the message's visiblilty should be resolved"," * @return {Y.Promise} Promise that holds the user-response. Resolved once the user presses the 'ok'-button."," * @since 0.1","*/","Y[SHOW_ERROR] = Y.bind(ITSAMessageControllerInstance[UNDERSCORE+SHOW_ERROR], ITSAMessageControllerInstance);","","/**"," * Returns a handle with reference to the ITSAMessage-instance. The message itself is NOT fullfilled yet!<br>"," * Because there are no buttons to make it fullfilled, you <u>must fullfil manually</u> by calling removeStatus(handle)<br>"," * <b>Note:</b> You need a descendant of Y.ITSAMessageViewer that has its property 'statusMessages' (f.i. Y.ITSAStatusbar) to make the message be displayed!"," *"," * @method Y.showStatus"," * @param message {String} The message"," * @param [config] {Object} Config passed through to the Y.ITSAMessage instance and the next additional properties:","     * @param [config.closeButton] {Boolean} whether the closebutton should be visible.","     *                               By setting this, you the default setting of closeButton is overruled.","     * @param [config.icon] {String} Classname of the iconfont, for instance 'itsaicon-dialog-info' --> see gallerycss-itsa-base for more info about iconfonts.","     *                               By setting this, you the default icon is overruled.","     * @param [config.imageButtons] {Boolean} Whether to display imagebuttons.","     * @param [config.level] {String} The message-level, should be either 'info', warn' or 'error'.","     * @param [config.priority] {boolean} By setting this, the message will be positioned in the queue above messages that have no priority.","     * @param [config.primaryButton] {String} Name of the primary button, f.i. 'btn_ok'.","     *                               By setting this, you the default primaryButton is overruled.","     * @param [config.source] {String} Identification of the source (sender) of the message, which is 'application' by default.","     * @param [config.target] {Y.ITSAMessageViewer} MessageViewer-instance that is targeted and should handle the message.","     * @param [config.timeoutReject] {Number} Timeout after which the message's visiblilty should be rejected","     * @param [config.timeoutResolve] {Number} Timeout after which the message's visiblilty should be resolved"," * @return {Y.Promise} handle with reference to the message, needs to be removed manually by Y.removeStatus(handle)."," * @since 0.1","*/","Y[SHOW_STATUS] = Y.bind(ITSAMessageControllerInstance[UNDERSCORE+SHOW_STATUS], ITSAMessageControllerInstance);","","}, '@VERSION@', {","    \"requires\": [","        \"yui-base\",","        \"yui-later\",","        \"timers\",","        \"promise\",","        \"gallery-itsamodulesloadedpromise\",","        \"gallery-itsamessagecontroller\"","    ]","});","","}());"]};
}
var __cov_txyE0gLtgLEWSON5vNGHVQ = __coverage__['build/gallery-itsamessageviewer/gallery-itsamessageviewer.js'];
__cov_txyE0gLtgLEWSON5vNGHVQ.s['1']++;YUI.add('gallery-itsamessageviewer',function(Y,NAME){'use strict';__cov_txyE0gLtgLEWSON5vNGHVQ.f['1']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['2']++;var YArray=Y.Array,ITSAMessageControllerInstance=Y.ITSAMessageController,ESSAGE='essage',MESSAGE='m'+ESSAGE,MODELSYNC='modelsync',STATUS='status',MAIL='mail',LOADICONSDELAY=5000,PROCESSING='_processing',ERROR='error',WARN='warn',INFO='info',LEVEL='level',TARGET='target',SUSPENDED='_suspended',NEWMESSAGE='new'+MESSAGE,DESTROYED='destroyed',PRIORITY='priority',EVT_LEVELCLEAR='levelclear',TIMEOUTRESOLVE='timeoutResolve',TIMEOUTREJECT='timeoutReject',GET='get',SHOW='show',REMOVE='remove',CONFIRMATION='Confirmation',GET_RETRY_CONFIRMATION=GET+'Retry'+CONFIRMATION,GET_CONFIRMATION=GET+CONFIRMATION,GET_INPUT=GET+'Input',GET_NUMBER=GET+'Number',GET_EMAIL=GET+'E'+MAIL,GET_URL=GET+'URL',SHOW_MESSAGE=SHOW+'M'+ESSAGE,SHOW_WARNING=SHOW+'Warning',SHOW_ERROR=SHOW+'Error',STATUSCAPITALIZED='Status',SHOW_STATUS=SHOW+STATUSCAPITALIZED,REMOVE_STATUS=REMOVE+STATUSCAPITALIZED,UNDERSCORE='_',STATUSMESSAGE=UNDERSCORE+STATUS+'M'+ESSAGE,ITSADIALOG='itsadialog',AVAILABLE_LEVELS={info:true,warn:true,error:true};__cov_txyE0gLtgLEWSON5vNGHVQ.s['3']++;function ITSAMessageViewer(){__cov_txyE0gLtgLEWSON5vNGHVQ.f['2']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['4']++;ITSAMessageViewer.superclass.constructor.apply(this,arguments);}__cov_txyE0gLtgLEWSON5vNGHVQ.s['5']++;ITSAMessageViewer.NAME='itsamessageviewer';__cov_txyE0gLtgLEWSON5vNGHVQ.s['6']++;Y.extend(ITSAMessageViewer,Y.Base);__cov_txyE0gLtgLEWSON5vNGHVQ.s['7']++;ITSAMessageViewer.prototype.initializer=function(){__cov_txyE0gLtgLEWSON5vNGHVQ.f['3']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['8']++;var instance=this;__cov_txyE0gLtgLEWSON5vNGHVQ.s['9']++;instance.simpleMessages=false;__cov_txyE0gLtgLEWSON5vNGHVQ.s['10']++;instance.statusMessages=true;__cov_txyE0gLtgLEWSON5vNGHVQ.s['11']++;instance._lastMessage={};__cov_txyE0gLtgLEWSON5vNGHVQ.s['12']++;instance._viewName=Y.guid();__cov_txyE0gLtgLEWSON5vNGHVQ.s['13']++;ITSAMessageControllerInstance.addTarget(instance);__cov_txyE0gLtgLEWSON5vNGHVQ.s['14']++;Y.later(LOADICONSDELAY,Y,Y.usePromise,['gallerycss-itsa-base','gallerycss-itsa-animatespin','gallerycss-itsa-form']);__cov_txyE0gLtgLEWSON5vNGHVQ.s['15']++;instance._processQueue(INFO);__cov_txyE0gLtgLEWSON5vNGHVQ.s['16']++;instance._processQueue(WARN);__cov_txyE0gLtgLEWSON5vNGHVQ.s['17']++;instance._processQueue(ERROR);};__cov_txyE0gLtgLEWSON5vNGHVQ.s['18']++;ITSAMessageViewer.prototype.countMessages=function(processed,level){__cov_txyE0gLtgLEWSON5vNGHVQ.f['4']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['19']++;var instance=this,queue=ITSAMessageControllerInstance.queue,viewname=instance._viewName,simplemessages=instance.simpleMessages,total=0,isTargeted,itsasimplemessage,validMessage,countLevel,messagesource,doHandleAnonymousSimple,messagetargetViewname;__cov_txyE0gLtgLEWSON5vNGHVQ.s['20']++;countLevel=function(onelevel){__cov_txyE0gLtgLEWSON5vNGHVQ.f['5']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['21']++;var count=0,handleAnonymous=ITSAMessageControllerInstance._targets[onelevel]===viewname,handleAnonymousSimple=ITSAMessageControllerInstance._simpleTargets[onelevel]===viewname,handleAnonymousStatus=ITSAMessageControllerInstance._targets[STATUS]===viewname,handleAnonymousModelSync=ITSAMessageControllerInstance._targets[MODELSYNC]===viewname;__cov_txyE0gLtgLEWSON5vNGHVQ.s['22']++;YArray.each(queue,function(itsamessage){__cov_txyE0gLtgLEWSON5vNGHVQ.f['6']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['23']++;itsasimplemessage=itsamessage._simpleMessage;__cov_txyE0gLtgLEWSON5vNGHVQ.s['24']++;messagesource=itsamessage.source;__cov_txyE0gLtgLEWSON5vNGHVQ.s['25']++;messagetargetViewname=(__cov_txyE0gLtgLEWSON5vNGHVQ.b['1'][0]++,itsamessage[TARGET])&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['1'][1]++,itsamessage[TARGET]._viewName);__cov_txyE0gLtgLEWSON5vNGHVQ.s['26']++;doHandleAnonymousSimple=(__cov_txyE0gLtgLEWSON5vNGHVQ.b['2'][0]++,handleAnonymousSimple)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['2'][1]++,!itsamessage[STATUSMESSAGE])||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['2'][2]++,itsamessage[STATUSMESSAGE])&&((__cov_txyE0gLtgLEWSON5vNGHVQ.b['2'][3]++,handleAnonymousStatus)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['2'][4]++,messagesource!==MODELSYNC)||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['2'][5]++,handleAnonymousModelSync)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['2'][6]++,messagesource===MODELSYNC));__cov_txyE0gLtgLEWSON5vNGHVQ.s['27']++;isTargeted=(__cov_txyE0gLtgLEWSON5vNGHVQ.b['3'][0]++,messagetargetViewname===viewname)&&((__cov_txyE0gLtgLEWSON5vNGHVQ.b['3'][1]++,!simplemessages)||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['3'][2]++,itsasimplemessage))||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['3'][3]++,!messagetargetViewname)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['3'][4]++,itsasimplemessage?(__cov_txyE0gLtgLEWSON5vNGHVQ.b['4'][0]++,doHandleAnonymousSimple):(__cov_txyE0gLtgLEWSON5vNGHVQ.b['4'][1]++,handleAnonymous));__cov_txyE0gLtgLEWSON5vNGHVQ.s['28']++;validMessage=(__cov_txyE0gLtgLEWSON5vNGHVQ.b['5'][0]++,isTargeted)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['5'][1]++,itsamessage[LEVEL]===onelevel)&&((__cov_txyE0gLtgLEWSON5vNGHVQ.b['5'][2]++,processed)||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['5'][3]++,!itsamessage[PROCESSING]));__cov_txyE0gLtgLEWSON5vNGHVQ.s['29']++;(__cov_txyE0gLtgLEWSON5vNGHVQ.b['6'][0]++,validMessage)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['6'][1]++,count++);});__cov_txyE0gLtgLEWSON5vNGHVQ.s['30']++;return count;};__cov_txyE0gLtgLEWSON5vNGHVQ.s['31']++;((__cov_txyE0gLtgLEWSON5vNGHVQ.b['7'][0]++,level===INFO)||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['7'][1]++,!level))&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['7'][2]++,total+=countLevel(INFO));__cov_txyE0gLtgLEWSON5vNGHVQ.s['32']++;((__cov_txyE0gLtgLEWSON5vNGHVQ.b['8'][0]++,level===WARN)||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['8'][1]++,!level))&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['8'][2]++,total+=countLevel(WARN));__cov_txyE0gLtgLEWSON5vNGHVQ.s['33']++;((__cov_txyE0gLtgLEWSON5vNGHVQ.b['9'][0]++,level===ERROR)||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['9'][1]++,!level))&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['9'][2]++,total+=countLevel(ERROR));__cov_txyE0gLtgLEWSON5vNGHVQ.s['34']++;return total;};__cov_txyE0gLtgLEWSON5vNGHVQ.s['35']++;ITSAMessageViewer.prototype.handleLevel=function(level){__cov_txyE0gLtgLEWSON5vNGHVQ.f['7']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['36']++;var targetname=this._viewName;__cov_txyE0gLtgLEWSON5vNGHVQ.s['37']++;if(AVAILABLE_LEVELS[level]){__cov_txyE0gLtgLEWSON5vNGHVQ.b['10'][0]++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['38']++;ITSAMessageControllerInstance._simpleTargets[level]=targetname;__cov_txyE0gLtgLEWSON5vNGHVQ.s['39']++;(__cov_txyE0gLtgLEWSON5vNGHVQ.b['11'][0]++,this.simpleMessages)||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['11'][1]++,ITSAMessageControllerInstance._targets[level]=targetname);}else{__cov_txyE0gLtgLEWSON5vNGHVQ.b['10'][1]++;}};__cov_txyE0gLtgLEWSON5vNGHVQ.s['40']++;ITSAMessageViewer.prototype.handleStatus=function(){__cov_txyE0gLtgLEWSON5vNGHVQ.f['8']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['41']++;ITSAMessageControllerInstance._targets[STATUS]=this._viewName;};__cov_txyE0gLtgLEWSON5vNGHVQ.s['42']++;ITSAMessageViewer.prototype.handleModelSync=function(){__cov_txyE0gLtgLEWSON5vNGHVQ.f['9']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['43']++;ITSAMessageControllerInstance._targets[MODELSYNC]=this._viewName;__cov_txyE0gLtgLEWSON5vNGHVQ.s['44']++;ITSAMessageControllerInstance._setupModelSyncListeners();};__cov_txyE0gLtgLEWSON5vNGHVQ.s['45']++;ITSAMessageViewer.prototype.resurrect=function(){__cov_txyE0gLtgLEWSON5vNGHVQ.f['10']++;};__cov_txyE0gLtgLEWSON5vNGHVQ.s['46']++;ITSAMessageViewer.prototype[SHOW_MESSAGE]=function(title,message,config){__cov_txyE0gLtgLEWSON5vNGHVQ.f['11']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['47']++;var params=ITSAMessageControllerInstance._retrieveParams(title,message,config);__cov_txyE0gLtgLEWSON5vNGHVQ.s['48']++;params.config.target=this;__cov_txyE0gLtgLEWSON5vNGHVQ.s['49']++;return ITSAMessageControllerInstance[UNDERSCORE+SHOW_MESSAGE](params.title,params.message,params.config);};__cov_txyE0gLtgLEWSON5vNGHVQ.s['50']++;ITSAMessageViewer.prototype[SHOW_WARNING]=function(title,message,config){__cov_txyE0gLtgLEWSON5vNGHVQ.f['12']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['51']++;var params=ITSAMessageControllerInstance._retrieveParams(title,message,config);__cov_txyE0gLtgLEWSON5vNGHVQ.s['52']++;params.config.target=this;__cov_txyE0gLtgLEWSON5vNGHVQ.s['53']++;return ITSAMessageControllerInstance[UNDERSCORE+SHOW_WARNING](params.title,params.message,params.config);};__cov_txyE0gLtgLEWSON5vNGHVQ.s['54']++;ITSAMessageViewer.prototype[SHOW_ERROR]=function(title,message,config){__cov_txyE0gLtgLEWSON5vNGHVQ.f['13']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['55']++;var params=ITSAMessageControllerInstance._retrieveParams(title,message,config);__cov_txyE0gLtgLEWSON5vNGHVQ.s['56']++;params.config.target=this;__cov_txyE0gLtgLEWSON5vNGHVQ.s['57']++;return ITSAMessageControllerInstance[UNDERSCORE+SHOW_ERROR](params.title,params.message,params.config);};__cov_txyE0gLtgLEWSON5vNGHVQ.s['58']++;ITSAMessageViewer.prototype[SHOW_STATUS]=function(message,config){__cov_txyE0gLtgLEWSON5vNGHVQ.f['14']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['59']++;var params=ITSAMessageControllerInstance._retrieveParams(null,message,config);__cov_txyE0gLtgLEWSON5vNGHVQ.s['60']++;params.config.target=this;__cov_txyE0gLtgLEWSON5vNGHVQ.s['61']++;console.log('going to show message '+params.message);__cov_txyE0gLtgLEWSON5vNGHVQ.s['62']++;return ITSAMessageControllerInstance[UNDERSCORE+SHOW_STATUS](params.message,params.config);};__cov_txyE0gLtgLEWSON5vNGHVQ.s['63']++;ITSAMessageViewer.prototype[REMOVE_STATUS]=function(messageHandle){__cov_txyE0gLtgLEWSON5vNGHVQ.f['15']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['64']++;ITSAMessageControllerInstance[UNDERSCORE+REMOVE_STATUS](messageHandle);};__cov_txyE0gLtgLEWSON5vNGHVQ.s['65']++;ITSAMessageViewer.prototype.suspend=function(){__cov_txyE0gLtgLEWSON5vNGHVQ.f['16']++;};__cov_txyE0gLtgLEWSON5vNGHVQ.s['66']++;ITSAMessageViewer.prototype.viewMessage=function(){__cov_txyE0gLtgLEWSON5vNGHVQ.f['17']++;};__cov_txyE0gLtgLEWSON5vNGHVQ.s['67']++;ITSAMessageViewer.prototype.destructor=function(){__cov_txyE0gLtgLEWSON5vNGHVQ.f['18']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['68']++;var instance=this,targetname=instance._viewName,controllerTargets=ITSAMessageControllerInstance._targets,controllerSimpleTargets=ITSAMessageControllerInstance._simpleTargets;__cov_txyE0gLtgLEWSON5vNGHVQ.s['69']++;ITSAMessageControllerInstance.removeTarget(instance);__cov_txyE0gLtgLEWSON5vNGHVQ.s['70']++;(__cov_txyE0gLtgLEWSON5vNGHVQ.b['12'][0]++,controllerTargets[INFO]===targetname)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['12'][1]++,controllerTargets[INFO]=ITSADIALOG);__cov_txyE0gLtgLEWSON5vNGHVQ.s['71']++;(__cov_txyE0gLtgLEWSON5vNGHVQ.b['13'][0]++,controllerTargets[WARN]===targetname)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['13'][1]++,controllerTargets[WARN]=ITSADIALOG);__cov_txyE0gLtgLEWSON5vNGHVQ.s['72']++;(__cov_txyE0gLtgLEWSON5vNGHVQ.b['14'][0]++,controllerTargets[ERROR]===targetname)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['14'][1]++,controllerTargets[ERROR]=ITSADIALOG);__cov_txyE0gLtgLEWSON5vNGHVQ.s['73']++;(__cov_txyE0gLtgLEWSON5vNGHVQ.b['15'][0]++,controllerSimpleTargets[INFO]===targetname)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['15'][1]++,controllerSimpleTargets[INFO]=ITSADIALOG);__cov_txyE0gLtgLEWSON5vNGHVQ.s['74']++;(__cov_txyE0gLtgLEWSON5vNGHVQ.b['16'][0]++,controllerSimpleTargets[WARN]===targetname)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['16'][1]++,controllerSimpleTargets[WARN]=ITSADIALOG);__cov_txyE0gLtgLEWSON5vNGHVQ.s['75']++;(__cov_txyE0gLtgLEWSON5vNGHVQ.b['17'][0]++,controllerSimpleTargets[ERROR]===targetname)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['17'][1]++,controllerSimpleTargets[ERROR]=ITSADIALOG);__cov_txyE0gLtgLEWSON5vNGHVQ.s['76']++;instance._lastMessage={};};__cov_txyE0gLtgLEWSON5vNGHVQ.s['77']++;ITSAMessageViewer.prototype._nextMessagePromise=function(level){__cov_txyE0gLtgLEWSON5vNGHVQ.f['19']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['78']++;var instance=this;__cov_txyE0gLtgLEWSON5vNGHVQ.s['79']++;return ITSAMessageControllerInstance.isReady().then(function(){__cov_txyE0gLtgLEWSON5vNGHVQ.f['20']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['80']++;return new Y.Promise(function(resolve,reject){__cov_txyE0gLtgLEWSON5vNGHVQ.f['21']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['81']++;var queue=ITSAMessageControllerInstance.queue,viewname=instance._viewName,simplemessages=instance.simpleMessages,handleAnonymous=ITSAMessageControllerInstance._targets[level]===viewname,handleAnonymousSimple=ITSAMessageControllerInstance._simpleTargets[level]===viewname,handleAnonymousStatus=ITSAMessageControllerInstance._targets[STATUS]===viewname,handleAnonymousModelSync=ITSAMessageControllerInstance._targets[MODELSYNC]===viewname,nextMessage,listener,otherLevelMessage,destroylistener,isTargeted,itsasimplemessage,messagesource,doHandleAnonymousSimple,messagetargetViewname;__cov_txyE0gLtgLEWSON5vNGHVQ.s['82']++;(__cov_txyE0gLtgLEWSON5vNGHVQ.b['18'][0]++,instance.get(DESTROYED))&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['18'][1]++,reject());__cov_txyE0gLtgLEWSON5vNGHVQ.s['83']++;YArray.some(queue,function(itsamessage){__cov_txyE0gLtgLEWSON5vNGHVQ.f['22']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['84']++;itsasimplemessage=itsamessage._simpleMessage;__cov_txyE0gLtgLEWSON5vNGHVQ.s['85']++;messagesource=itsamessage.source;__cov_txyE0gLtgLEWSON5vNGHVQ.s['86']++;messagetargetViewname=(__cov_txyE0gLtgLEWSON5vNGHVQ.b['19'][0]++,itsamessage[TARGET])&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['19'][1]++,itsamessage[TARGET]._viewName);__cov_txyE0gLtgLEWSON5vNGHVQ.s['87']++;doHandleAnonymousSimple=(__cov_txyE0gLtgLEWSON5vNGHVQ.b['20'][0]++,handleAnonymousSimple)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['20'][1]++,!itsamessage[STATUSMESSAGE])||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['20'][2]++,itsamessage[STATUSMESSAGE])&&((__cov_txyE0gLtgLEWSON5vNGHVQ.b['20'][3]++,handleAnonymousStatus)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['20'][4]++,messagesource!==MODELSYNC)||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['20'][5]++,handleAnonymousModelSync)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['20'][6]++,messagesource===MODELSYNC));__cov_txyE0gLtgLEWSON5vNGHVQ.s['88']++;isTargeted=(__cov_txyE0gLtgLEWSON5vNGHVQ.b['21'][0]++,messagetargetViewname===viewname)&&((__cov_txyE0gLtgLEWSON5vNGHVQ.b['21'][1]++,!simplemessages)||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['21'][2]++,itsasimplemessage))||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['21'][3]++,!messagetargetViewname)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['21'][4]++,itsasimplemessage?(__cov_txyE0gLtgLEWSON5vNGHVQ.b['22'][0]++,doHandleAnonymousSimple):(__cov_txyE0gLtgLEWSON5vNGHVQ.b['22'][1]++,handleAnonymous));__cov_txyE0gLtgLEWSON5vNGHVQ.s['89']++;nextMessage=(__cov_txyE0gLtgLEWSON5vNGHVQ.b['23'][0]++,isTargeted)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['23'][1]++,itsamessage[LEVEL]===level)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['23'][2]++,itsamessage[PRIORITY])&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['23'][3]++,!itsamessage[PROCESSING])&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['23'][4]++,itsamessage);__cov_txyE0gLtgLEWSON5vNGHVQ.s['90']++;return nextMessage;});__cov_txyE0gLtgLEWSON5vNGHVQ.s['91']++;(__cov_txyE0gLtgLEWSON5vNGHVQ.b['24'][0]++,nextMessage)||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['24'][1]++,YArray.some(queue,function(itsamessage){__cov_txyE0gLtgLEWSON5vNGHVQ.f['23']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['92']++;itsasimplemessage=itsamessage._simpleMessage;__cov_txyE0gLtgLEWSON5vNGHVQ.s['93']++;messagesource=itsamessage.source;__cov_txyE0gLtgLEWSON5vNGHVQ.s['94']++;messagetargetViewname=(__cov_txyE0gLtgLEWSON5vNGHVQ.b['25'][0]++,itsamessage[TARGET])&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['25'][1]++,itsamessage[TARGET]._viewName);__cov_txyE0gLtgLEWSON5vNGHVQ.s['95']++;doHandleAnonymousSimple=(__cov_txyE0gLtgLEWSON5vNGHVQ.b['26'][0]++,handleAnonymousSimple)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['26'][1]++,!itsamessage[STATUSMESSAGE])||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['26'][2]++,itsamessage[STATUSMESSAGE])&&((__cov_txyE0gLtgLEWSON5vNGHVQ.b['26'][3]++,handleAnonymousStatus)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['26'][4]++,messagesource!==MODELSYNC)||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['26'][5]++,handleAnonymousModelSync)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['26'][6]++,messagesource===MODELSYNC));__cov_txyE0gLtgLEWSON5vNGHVQ.s['96']++;isTargeted=(__cov_txyE0gLtgLEWSON5vNGHVQ.b['27'][0]++,messagetargetViewname===viewname)&&((__cov_txyE0gLtgLEWSON5vNGHVQ.b['27'][1]++,!simplemessages)||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['27'][2]++,itsasimplemessage))||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['27'][3]++,!messagetargetViewname)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['27'][4]++,itsasimplemessage?(__cov_txyE0gLtgLEWSON5vNGHVQ.b['28'][0]++,doHandleAnonymousSimple):(__cov_txyE0gLtgLEWSON5vNGHVQ.b['28'][1]++,handleAnonymous));__cov_txyE0gLtgLEWSON5vNGHVQ.s['97']++;nextMessage=(__cov_txyE0gLtgLEWSON5vNGHVQ.b['29'][0]++,isTargeted)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['29'][1]++,itsamessage[LEVEL]===level)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['29'][2]++,!itsamessage[PRIORITY])&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['29'][3]++,!itsamessage[PROCESSING])&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['29'][4]++,itsamessage);__cov_txyE0gLtgLEWSON5vNGHVQ.s['98']++;return nextMessage;}));__cov_txyE0gLtgLEWSON5vNGHVQ.s['99']++;if(nextMessage){__cov_txyE0gLtgLEWSON5vNGHVQ.b['30'][0]++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['100']++;instance._lastMessage[level]=nextMessage;__cov_txyE0gLtgLEWSON5vNGHVQ.s['101']++;(__cov_txyE0gLtgLEWSON5vNGHVQ.b['31'][0]++,otherLevelMessage=instance._lastMessage[INFO])&&((__cov_txyE0gLtgLEWSON5vNGHVQ.b['31'][1]++,level!==INFO)||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['31'][2]++,instance._lastMessage[WARN])||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['31'][3]++,instance._lastMessage[ERROR]))&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['31'][4]++,otherLevelMessage[SUSPENDED]=true)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['31'][5]++,instance._suspend(otherLevelMessage));__cov_txyE0gLtgLEWSON5vNGHVQ.s['102']++;(__cov_txyE0gLtgLEWSON5vNGHVQ.b['32'][0]++,otherLevelMessage=instance._lastMessage[WARN])&&((__cov_txyE0gLtgLEWSON5vNGHVQ.b['32'][1]++,level===ERROR)||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['32'][2]++,instance._lastMessage[ERROR]))&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['32'][3]++,otherLevelMessage[SUSPENDED]=true)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['32'][4]++,instance._suspend(otherLevelMessage));__cov_txyE0gLtgLEWSON5vNGHVQ.s['103']++;resolve(nextMessage);}else{__cov_txyE0gLtgLEWSON5vNGHVQ.b['30'][1]++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['104']++;if(level===ERROR){__cov_txyE0gLtgLEWSON5vNGHVQ.b['33'][0]++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['105']++;otherLevelMessage=(__cov_txyE0gLtgLEWSON5vNGHVQ.b['34'][0]++,instance._lastMessage[WARN])||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['34'][1]++,instance._lastMessage[INFO]);}else{__cov_txyE0gLtgLEWSON5vNGHVQ.b['33'][1]++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['106']++;if((__cov_txyE0gLtgLEWSON5vNGHVQ.b['36'][0]++,level===WARN)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['36'][1]++,!instance._lastMessage[ERROR])){__cov_txyE0gLtgLEWSON5vNGHVQ.b['35'][0]++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['107']++;otherLevelMessage=instance._lastMessage[INFO];}else{__cov_txyE0gLtgLEWSON5vNGHVQ.b['35'][1]++;}}__cov_txyE0gLtgLEWSON5vNGHVQ.s['108']++;if((__cov_txyE0gLtgLEWSON5vNGHVQ.b['38'][0]++,otherLevelMessage)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['38'][1]++,otherLevelMessage[SUSPENDED])){__cov_txyE0gLtgLEWSON5vNGHVQ.b['37'][0]++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['109']++;otherLevelMessage[SUSPENDED]=false;__cov_txyE0gLtgLEWSON5vNGHVQ.s['110']++;instance._resurrect(otherLevelMessage);}else{__cov_txyE0gLtgLEWSON5vNGHVQ.b['37'][1]++;}__cov_txyE0gLtgLEWSON5vNGHVQ.s['111']++;instance._lastMessage[level]=null;__cov_txyE0gLtgLEWSON5vNGHVQ.s['112']++;(__cov_txyE0gLtgLEWSON5vNGHVQ.b['39'][0]++,level!==INFO)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['39'][1]++,instance.fire(EVT_LEVELCLEAR));__cov_txyE0gLtgLEWSON5vNGHVQ.s['113']++;destroylistener=instance.once('destroy',reject);__cov_txyE0gLtgLEWSON5vNGHVQ.s['114']++;listener=Y.on(NEWMESSAGE,function(e){__cov_txyE0gLtgLEWSON5vNGHVQ.f['24']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['115']++;var itsamessage=e.itsamessage;__cov_txyE0gLtgLEWSON5vNGHVQ.s['116']++;itsasimplemessage=itsamessage._simpleMessage;__cov_txyE0gLtgLEWSON5vNGHVQ.s['117']++;messagesource=itsamessage.source;__cov_txyE0gLtgLEWSON5vNGHVQ.s['118']++;messagetargetViewname=(__cov_txyE0gLtgLEWSON5vNGHVQ.b['40'][0]++,itsamessage[TARGET])&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['40'][1]++,itsamessage[TARGET]._viewName);__cov_txyE0gLtgLEWSON5vNGHVQ.s['119']++;doHandleAnonymousSimple=(__cov_txyE0gLtgLEWSON5vNGHVQ.b['41'][0]++,handleAnonymousSimple)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['41'][1]++,!itsamessage[STATUSMESSAGE])||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['41'][2]++,itsamessage[STATUSMESSAGE])&&((__cov_txyE0gLtgLEWSON5vNGHVQ.b['41'][3]++,handleAnonymousStatus)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['41'][4]++,messagesource!==MODELSYNC)||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['41'][5]++,handleAnonymousModelSync)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['41'][6]++,messagesource===MODELSYNC));__cov_txyE0gLtgLEWSON5vNGHVQ.s['120']++;isTargeted=(__cov_txyE0gLtgLEWSON5vNGHVQ.b['42'][0]++,messagetargetViewname===viewname)&&((__cov_txyE0gLtgLEWSON5vNGHVQ.b['42'][1]++,!simplemessages)||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['42'][2]++,itsasimplemessage))||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['42'][3]++,!messagetargetViewname)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['42'][4]++,itsasimplemessage?(__cov_txyE0gLtgLEWSON5vNGHVQ.b['43'][0]++,doHandleAnonymousSimple):(__cov_txyE0gLtgLEWSON5vNGHVQ.b['43'][1]++,handleAnonymous));__cov_txyE0gLtgLEWSON5vNGHVQ.s['121']++;if((__cov_txyE0gLtgLEWSON5vNGHVQ.b['45'][0]++,isTargeted)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['45'][1]++,itsamessage[LEVEL]===level)){__cov_txyE0gLtgLEWSON5vNGHVQ.b['44'][0]++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['122']++;listener.detach();__cov_txyE0gLtgLEWSON5vNGHVQ.s['123']++;destroylistener.detach();__cov_txyE0gLtgLEWSON5vNGHVQ.s['124']++;instance._lastMessage[level]=itsamessage;__cov_txyE0gLtgLEWSON5vNGHVQ.s['125']++;(__cov_txyE0gLtgLEWSON5vNGHVQ.b['46'][0]++,otherLevelMessage=instance._lastMessage[INFO])&&((__cov_txyE0gLtgLEWSON5vNGHVQ.b['46'][1]++,level!==INFO)||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['46'][2]++,instance._lastMessage[WARN])||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['46'][3]++,instance._lastMessage[ERROR]))&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['46'][4]++,otherLevelMessage[SUSPENDED]=true)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['46'][5]++,instance._suspend(otherLevelMessage));__cov_txyE0gLtgLEWSON5vNGHVQ.s['126']++;(__cov_txyE0gLtgLEWSON5vNGHVQ.b['47'][0]++,otherLevelMessage=instance._lastMessage[WARN])&&((__cov_txyE0gLtgLEWSON5vNGHVQ.b['47'][1]++,level===ERROR)||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['47'][2]++,instance._lastMessage[ERROR]))&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['47'][3]++,otherLevelMessage[SUSPENDED]=true)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['47'][4]++,instance._suspend(otherLevelMessage));__cov_txyE0gLtgLEWSON5vNGHVQ.s['127']++;resolve(itsamessage);}else{__cov_txyE0gLtgLEWSON5vNGHVQ.b['44'][1]++;}});}});}).then(function(itsamessage){__cov_txyE0gLtgLEWSON5vNGHVQ.f['25']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['128']++;var proceed=(__cov_txyE0gLtgLEWSON5vNGHVQ.b['48'][0]++,level===ERROR)||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['48'][1]++,!instance._lastMessage[ERROR])&&((__cov_txyE0gLtgLEWSON5vNGHVQ.b['48'][2]++,level===WARN)||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['48'][3]++,!instance._lastMessage[WARN]));__cov_txyE0gLtgLEWSON5vNGHVQ.s['129']++;return proceed?(__cov_txyE0gLtgLEWSON5vNGHVQ.b['49'][0]++,itsamessage):(__cov_txyE0gLtgLEWSON5vNGHVQ.b['49'][1]++,new Y.Promise(function(resolve){__cov_txyE0gLtgLEWSON5vNGHVQ.f['26']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['130']++;var listener=instance.on(EVT_LEVELCLEAR,function(){__cov_txyE0gLtgLEWSON5vNGHVQ.f['27']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['131']++;proceed=(__cov_txyE0gLtgLEWSON5vNGHVQ.b['50'][0]++,!instance._lastMessage[ERROR])&&((__cov_txyE0gLtgLEWSON5vNGHVQ.b['50'][1]++,level===WARN)||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['50'][2]++,!instance._lastMessage[WARN]));__cov_txyE0gLtgLEWSON5vNGHVQ.s['132']++;(__cov_txyE0gLtgLEWSON5vNGHVQ.b['51'][0]++,proceed)&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['51'][1]++,listener.detach())&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['51'][2]++,resolve(itsamessage));});}));});};__cov_txyE0gLtgLEWSON5vNGHVQ.s['133']++;ITSAMessageViewer.prototype._processQueue=function(level){__cov_txyE0gLtgLEWSON5vNGHVQ.f['28']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['134']++;var instance=this,handlePromise,handlePromiseLoop;__cov_txyE0gLtgLEWSON5vNGHVQ.s['135']++;handlePromise=function(){__cov_txyE0gLtgLEWSON5vNGHVQ.f['29']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['136']++;return instance._nextMessagePromise(level).then(function(itsamessage){__cov_txyE0gLtgLEWSON5vNGHVQ.f['30']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['137']++;itsamessage[PROCESSING]=true;__cov_txyE0gLtgLEWSON5vNGHVQ.s['138']++;((__cov_txyE0gLtgLEWSON5vNGHVQ.b['52'][0]++,itsamessage[TIMEOUTRESOLVE])||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['52'][1]++,itsamessage[TIMEOUTREJECT]))&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['52'][2]++,itsamessage._startTimer());__cov_txyE0gLtgLEWSON5vNGHVQ.s['139']++;return instance._viewMessage(itsamessage);}).then(null,function(err){__cov_txyE0gLtgLEWSON5vNGHVQ.f['31']++;});};__cov_txyE0gLtgLEWSON5vNGHVQ.s['140']++;handlePromiseLoop=function(){__cov_txyE0gLtgLEWSON5vNGHVQ.f['32']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['141']++;return(__cov_txyE0gLtgLEWSON5vNGHVQ.b['53'][0]++,instance.get(DESTROYED))||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['53'][1]++,handlePromise().then(handlePromiseLoop,handlePromiseLoop));};__cov_txyE0gLtgLEWSON5vNGHVQ.s['142']++;handlePromiseLoop();};__cov_txyE0gLtgLEWSON5vNGHVQ.s['143']++;ITSAMessageViewer.prototype._resurrect=function(itsamessage){__cov_txyE0gLtgLEWSON5vNGHVQ.f['33']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['144']++;var instance=this;__cov_txyE0gLtgLEWSON5vNGHVQ.s['145']++;if(!itsamessage.get(DESTROYED)){__cov_txyE0gLtgLEWSON5vNGHVQ.b['54'][0]++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['146']++;((__cov_txyE0gLtgLEWSON5vNGHVQ.b['55'][0]++,itsamessage[TIMEOUTRESOLVE])||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['55'][1]++,itsamessage[TIMEOUTREJECT]))&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['55'][2]++,itsamessage._startTimer());__cov_txyE0gLtgLEWSON5vNGHVQ.s['147']++;ITSAMessageControllerInstance.sound(itsamessage);__cov_txyE0gLtgLEWSON5vNGHVQ.s['148']++;instance.resurrect(itsamessage);}else{__cov_txyE0gLtgLEWSON5vNGHVQ.b['54'][1]++;}};__cov_txyE0gLtgLEWSON5vNGHVQ.s['149']++;ITSAMessageViewer.prototype._suspend=function(itsamessage){__cov_txyE0gLtgLEWSON5vNGHVQ.f['34']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['150']++;var instance=this;__cov_txyE0gLtgLEWSON5vNGHVQ.s['151']++;((__cov_txyE0gLtgLEWSON5vNGHVQ.b['56'][0]++,itsamessage[TIMEOUTRESOLVE])||(__cov_txyE0gLtgLEWSON5vNGHVQ.b['56'][1]++,itsamessage[TIMEOUTREJECT]))&&(__cov_txyE0gLtgLEWSON5vNGHVQ.b['56'][2]++,itsamessage._stopTimer());__cov_txyE0gLtgLEWSON5vNGHVQ.s['152']++;instance.suspend(itsamessage);};__cov_txyE0gLtgLEWSON5vNGHVQ.s['153']++;ITSAMessageViewer.prototype._viewMessage=function(itsamessage){__cov_txyE0gLtgLEWSON5vNGHVQ.f['35']++;__cov_txyE0gLtgLEWSON5vNGHVQ.s['154']++;ITSAMessageControllerInstance.sound(itsamessage);__cov_txyE0gLtgLEWSON5vNGHVQ.s['155']++;return this.viewMessage(itsamessage);};__cov_txyE0gLtgLEWSON5vNGHVQ.s['156']++;Y.ITSAMessageViewer=ITSAMessageViewer;__cov_txyE0gLtgLEWSON5vNGHVQ.s['157']++;Y[GET_RETRY_CONFIRMATION]=Y.bind(ITSAMessageControllerInstance[UNDERSCORE+GET_RETRY_CONFIRMATION],ITSAMessageControllerInstance);__cov_txyE0gLtgLEWSON5vNGHVQ.s['158']++;Y.confirm=Y[GET_CONFIRMATION]=Y.bind(ITSAMessageControllerInstance[UNDERSCORE+GET_CONFIRMATION],ITSAMessageControllerInstance);__cov_txyE0gLtgLEWSON5vNGHVQ.s['159']++;Y[GET_URL]=Y.bind(ITSAMessageControllerInstance[UNDERSCORE+GET_URL],ITSAMessageControllerInstance);__cov_txyE0gLtgLEWSON5vNGHVQ.s['160']++;Y[GET_EMAIL]=Y.bind(ITSAMessageControllerInstance[UNDERSCORE+GET_EMAIL],ITSAMessageControllerInstance);__cov_txyE0gLtgLEWSON5vNGHVQ.s['161']++;Y.prompt=Y[GET_INPUT]=Y.bind(ITSAMessageControllerInstance[UNDERSCORE+GET_INPUT],ITSAMessageControllerInstance);__cov_txyE0gLtgLEWSON5vNGHVQ.s['162']++;Y[GET_NUMBER]=Y.bind(ITSAMessageControllerInstance[UNDERSCORE+GET_NUMBER],ITSAMessageControllerInstance);__cov_txyE0gLtgLEWSON5vNGHVQ.s['163']++;Y[REMOVE_STATUS]=Y.bind(ITSAMessageControllerInstance[UNDERSCORE+REMOVE_STATUS],ITSAMessageControllerInstance);__cov_txyE0gLtgLEWSON5vNGHVQ.s['164']++;Y[SHOW_MESSAGE]=Y.bind(ITSAMessageControllerInstance[UNDERSCORE+SHOW_MESSAGE],ITSAMessageControllerInstance);__cov_txyE0gLtgLEWSON5vNGHVQ.s['165']++;Y.alert=Y[SHOW_WARNING]=Y.bind(ITSAMessageControllerInstance[UNDERSCORE+SHOW_WARNING],ITSAMessageControllerInstance);__cov_txyE0gLtgLEWSON5vNGHVQ.s['166']++;Y[SHOW_ERROR]=Y.bind(ITSAMessageControllerInstance[UNDERSCORE+SHOW_ERROR],ITSAMessageControllerInstance);__cov_txyE0gLtgLEWSON5vNGHVQ.s['167']++;Y[SHOW_STATUS]=Y.bind(ITSAMessageControllerInstance[UNDERSCORE+SHOW_STATUS],ITSAMessageControllerInstance);},'@VERSION@',{'requires':['yui-base','yui-later','timers','promise','gallery-itsamodulesloadedpromise','gallery-itsamessagecontroller']});
