if (typeof __coverage__ === 'undefined') { __coverage__ = {}; }
if (!__coverage__['build/gallery-itsaeditmodel/gallery-itsaeditmodel.js']) {
   __coverage__['build/gallery-itsaeditmodel/gallery-itsaeditmodel.js'] = {"path":"build/gallery-itsaeditmodel/gallery-itsaeditmodel.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0,0],"12":[0,0],"13":[0,0],"14":[0,0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":33},"end":{"line":1,"column":52}}},"2":{"name":"(anonymous_2)","line":234,"loc":{"start":{"line":234,"column":22},"end":{"line":234,"column":33}}},"3":{"name":"(anonymous_3)","line":356,"loc":{"start":{"line":356,"column":17},"end":{"line":356,"column":28}}},"4":{"name":"(anonymous_4)","line":360,"loc":{"start":{"line":360,"column":17},"end":{"line":360,"column":28}}},"5":{"name":"(anonymous_5)","line":364,"loc":{"start":{"line":364,"column":18},"end":{"line":364,"column":29}}},"6":{"name":"(anonymous_6)","line":368,"loc":{"start":{"line":368,"column":16},"end":{"line":368,"column":27}}},"7":{"name":"(anonymous_7)","line":371,"loc":{"start":{"line":371,"column":13},"end":{"line":371,"column":24}}},"8":{"name":"(anonymous_8)","line":374,"loc":{"start":{"line":374,"column":15},"end":{"line":374,"column":26}}},"9":{"name":"(anonymous_9)","line":377,"loc":{"start":{"line":377,"column":15},"end":{"line":377,"column":26}}},"10":{"name":"(anonymous_10)","line":380,"loc":{"start":{"line":380,"column":14},"end":{"line":380,"column":25}}},"11":{"name":"(anonymous_11)","line":383,"loc":{"start":{"line":383,"column":13},"end":{"line":383,"column":24}}},"12":{"name":"(anonymous_12)","line":386,"loc":{"start":{"line":386,"column":19},"end":{"line":386,"column":31}}},"13":{"name":"(anonymous_13)","line":403,"loc":{"start":{"line":403,"column":8},"end":{"line":403,"column":26}}},"14":{"name":"(anonymous_14)","line":413,"loc":{"start":{"line":413,"column":8},"end":{"line":413,"column":19}}},"15":{"name":"(anonymous_15)","line":418,"loc":{"start":{"line":418,"column":8},"end":{"line":418,"column":19}}},"16":{"name":"(anonymous_16)","line":452,"loc":{"start":{"line":452,"column":20},"end":{"line":452,"column":49}}},"17":{"name":"(anonymous_17)","line":456,"loc":{"start":{"line":456,"column":21},"end":{"line":456,"column":73}}},"18":{"name":"(anonymous_18)","line":497,"loc":{"start":{"line":497,"column":26},"end":{"line":497,"column":55}}},"19":{"name":"(anonymous_19)","line":524,"loc":{"start":{"line":524,"column":27},"end":{"line":524,"column":56}}},"20":{"name":"(anonymous_20)","line":551,"loc":{"start":{"line":551,"column":24},"end":{"line":551,"column":53}}},"21":{"name":"(anonymous_21)","line":578,"loc":{"start":{"line":578,"column":25},"end":{"line":578,"column":54}}},"22":{"name":"(anonymous_22)","line":605,"loc":{"start":{"line":605,"column":24},"end":{"line":605,"column":53}}},"23":{"name":"(anonymous_23)","line":632,"loc":{"start":{"line":632,"column":26},"end":{"line":632,"column":55}}},"24":{"name":"(anonymous_24)","line":642,"loc":{"start":{"line":642,"column":21},"end":{"line":642,"column":32}}},"25":{"name":"(anonymous_25)","line":666,"loc":{"start":{"line":666,"column":18},"end":{"line":666,"column":29}}},"26":{"name":"(anonymous_26)","line":677,"loc":{"start":{"line":677,"column":20},"end":{"line":677,"column":32}}},"27":{"name":"(anonymous_27)","line":690,"loc":{"start":{"line":690,"column":20},"end":{"line":690,"column":46}}},"28":{"name":"(anonymous_28)","line":706,"loc":{"start":{"line":706,"column":30},"end":{"line":706,"column":41}}},"29":{"name":"(anonymous_29)","line":709,"loc":{"start":{"line":709,"column":16},"end":{"line":709,"column":30}}},"30":{"name":"(anonymous_30)","line":727,"loc":{"start":{"line":727,"column":27},"end":{"line":727,"column":41}}},"31":{"name":"(anonymous_31)","line":730,"loc":{"start":{"line":730,"column":24},"end":{"line":730,"column":38}}},"32":{"name":"(anonymous_32)","line":761,"loc":{"start":{"line":761,"column":27},"end":{"line":761,"column":41}}},"33":{"name":"(anonymous_33)","line":764,"loc":{"start":{"line":764,"column":24},"end":{"line":764,"column":38}}},"34":{"name":"(anonymous_34)","line":839,"loc":{"start":{"line":839,"column":4},"end":{"line":839,"column":24}}},"35":{"name":"(anonymous_35)","line":841,"loc":{"start":{"line":841,"column":16},"end":{"line":841,"column":56}}},"36":{"name":"(anonymous_36)","line":845,"loc":{"start":{"line":845,"column":54},"end":{"line":845,"column":67}}},"37":{"name":"(anonymous_37)","line":855,"loc":{"start":{"line":855,"column":20},"end":{"line":855,"column":50}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":879,"column":3}},"2":{"start":{"line":22,"column":0},"end":{"line":223,"column":50}},"3":{"start":{"line":225,"column":0},"end":{"line":785,"column":2}},"4":{"start":{"line":235,"column":12},"end":{"line":235,"column":32}},"5":{"start":{"line":246,"column":12},"end":{"line":246,"column":41}},"6":{"start":{"line":255,"column":12},"end":{"line":255,"column":38}},"7":{"start":{"line":264,"column":12},"end":{"line":264,"column":44}},"8":{"start":{"line":273,"column":12},"end":{"line":273,"column":43}},"9":{"start":{"line":275,"column":12},"end":{"line":281,"column":14}},"10":{"start":{"line":282,"column":12},"end":{"line":288,"column":14}},"11":{"start":{"line":289,"column":12},"end":{"line":295,"column":14}},"12":{"start":{"line":296,"column":12},"end":{"line":302,"column":14}},"13":{"start":{"line":303,"column":12},"end":{"line":309,"column":14}},"14":{"start":{"line":310,"column":12},"end":{"line":316,"column":14}},"15":{"start":{"line":317,"column":12},"end":{"line":323,"column":14}},"16":{"start":{"line":324,"column":12},"end":{"line":330,"column":14}},"17":{"start":{"line":331,"column":12},"end":{"line":337,"column":14}},"18":{"start":{"line":338,"column":12},"end":{"line":344,"column":14}},"19":{"start":{"line":345,"column":12},"end":{"line":351,"column":14}},"20":{"start":{"line":353,"column":12},"end":{"line":353,"column":31}},"21":{"start":{"line":387,"column":4},"end":{"line":391,"column":16}},"22":{"start":{"line":392,"column":4},"end":{"line":400,"column":5}},"23":{"start":{"line":393,"column":8},"end":{"line":393,"column":49}},"24":{"start":{"line":395,"column":9},"end":{"line":400,"column":5}},"25":{"start":{"line":396,"column":8},"end":{"line":396,"column":49}},"26":{"start":{"line":398,"column":9},"end":{"line":400,"column":5}},"27":{"start":{"line":399,"column":8},"end":{"line":399,"column":53}},"28":{"start":{"line":401,"column":4},"end":{"line":425,"column":6}},"29":{"start":{"line":414,"column":12},"end":{"line":414,"column":24}},"30":{"start":{"line":421,"column":12},"end":{"line":423,"column":13}},"31":{"start":{"line":422,"column":16},"end":{"line":422,"column":29}},"32":{"start":{"line":453,"column":12},"end":{"line":453,"column":69}},"33":{"start":{"line":457,"column":12},"end":{"line":458,"column":27}},"34":{"start":{"line":461,"column":12},"end":{"line":461,"column":36}},"35":{"start":{"line":462,"column":12},"end":{"line":462,"column":52}},"36":{"start":{"line":464,"column":12},"end":{"line":464,"column":43}},"37":{"start":{"line":466,"column":12},"end":{"line":466,"column":46}},"38":{"start":{"line":467,"column":12},"end":{"line":467,"column":86}},"39":{"start":{"line":469,"column":12},"end":{"line":469,"column":72}},"40":{"start":{"line":470,"column":12},"end":{"line":470,"column":65}},"41":{"start":{"line":471,"column":12},"end":{"line":471,"column":35}},"42":{"start":{"line":498,"column":12},"end":{"line":498,"column":69}},"43":{"start":{"line":525,"column":12},"end":{"line":525,"column":70}},"44":{"start":{"line":552,"column":12},"end":{"line":552,"column":67}},"45":{"start":{"line":579,"column":12},"end":{"line":579,"column":62}},"46":{"start":{"line":606,"column":12},"end":{"line":606,"column":67}},"47":{"start":{"line":633,"column":12},"end":{"line":633,"column":63}},"48":{"start":{"line":643,"column":12},"end":{"line":643,"column":32}},"49":{"start":{"line":644,"column":12},"end":{"line":646,"column":13}},"50":{"start":{"line":645,"column":16},"end":{"line":645,"column":49}},"51":{"start":{"line":647,"column":12},"end":{"line":649,"column":13}},"52":{"start":{"line":648,"column":16},"end":{"line":648,"column":50}},"53":{"start":{"line":650,"column":12},"end":{"line":650,"column":43}},"54":{"start":{"line":651,"column":12},"end":{"line":651,"column":38}},"55":{"start":{"line":667,"column":12},"end":{"line":669,"column":37}},"56":{"start":{"line":673,"column":12},"end":{"line":695,"column":14}},"57":{"start":{"line":678,"column":24},"end":{"line":686,"column":30}},"58":{"start":{"line":688,"column":24},"end":{"line":688,"column":53}},"59":{"start":{"line":692,"column":24},"end":{"line":692,"column":72}},"60":{"start":{"line":707,"column":12},"end":{"line":712,"column":14}},"61":{"start":{"line":710,"column":20},"end":{"line":710,"column":34}},"62":{"start":{"line":728,"column":20},"end":{"line":728,"column":81}},"63":{"start":{"line":731,"column":20},"end":{"line":732,"column":64}},"64":{"start":{"line":733,"column":20},"end":{"line":735,"column":21}},"65":{"start":{"line":734,"column":24},"end":{"line":734,"column":57}},"66":{"start":{"line":736,"column":20},"end":{"line":744,"column":21}},"67":{"start":{"line":737,"column":24},"end":{"line":743,"column":26}},"68":{"start":{"line":762,"column":20},"end":{"line":762,"column":79}},"69":{"start":{"line":765,"column":20},"end":{"line":766,"column":76}},"70":{"start":{"line":767,"column":20},"end":{"line":780,"column":21}},"71":{"start":{"line":768,"column":24},"end":{"line":774,"column":26}},"72":{"start":{"line":777,"column":24},"end":{"line":779,"column":25}},"73":{"start":{"line":778,"column":28},"end":{"line":778,"column":61}},"74":{"start":{"line":837,"column":0},"end":{"line":862,"column":2}},"75":{"start":{"line":840,"column":8},"end":{"line":860,"column":11}},"76":{"start":{"line":845,"column":16},"end":{"line":852,"column":19}},"77":{"start":{"line":846,"column":20},"end":{"line":846,"column":46}},"78":{"start":{"line":847,"column":20},"end":{"line":851,"column":21}},"79":{"start":{"line":850,"column":24},"end":{"line":850,"column":41}},"80":{"start":{"line":858,"column":16},"end":{"line":858,"column":46}}},"branchMap":{"1":{"line":392,"type":"if","locations":[{"start":{"line":392,"column":4},"end":{"line":392,"column":4}},{"start":{"line":392,"column":4},"end":{"line":392,"column":4}}]},"2":{"line":395,"type":"if","locations":[{"start":{"line":395,"column":9},"end":{"line":395,"column":9}},{"start":{"line":395,"column":9},"end":{"line":395,"column":9}}]},"3":{"line":398,"type":"if","locations":[{"start":{"line":398,"column":9},"end":{"line":398,"column":9}},{"start":{"line":398,"column":9},"end":{"line":398,"column":9}}]},"4":{"line":421,"type":"if","locations":[{"start":{"line":421,"column":12},"end":{"line":421,"column":12}},{"start":{"line":421,"column":12},"end":{"line":421,"column":12}}]},"5":{"line":461,"type":"binary-expr","locations":[{"start":{"line":461,"column":12},"end":{"line":461,"column":18}},{"start":{"line":461,"column":23},"end":{"line":461,"column":34}}]},"6":{"line":462,"type":"binary-expr","locations":[{"start":{"line":462,"column":12},"end":{"line":462,"column":22}},{"start":{"line":462,"column":27},"end":{"line":462,"column":50}}]},"7":{"line":466,"type":"binary-expr","locations":[{"start":{"line":466,"column":12},"end":{"line":466,"column":23}},{"start":{"line":466,"column":28},"end":{"line":466,"column":44}}]},"8":{"line":467,"type":"binary-expr","locations":[{"start":{"line":467,"column":12},"end":{"line":467,"column":21}},{"start":{"line":467,"column":26},"end":{"line":467,"column":84}}]},"9":{"line":644,"type":"if","locations":[{"start":{"line":644,"column":12},"end":{"line":644,"column":12}},{"start":{"line":644,"column":12},"end":{"line":644,"column":12}}]},"10":{"line":647,"type":"if","locations":[{"start":{"line":647,"column":12},"end":{"line":647,"column":12}},{"start":{"line":647,"column":12},"end":{"line":647,"column":12}}]},"11":{"line":728,"type":"binary-expr","locations":[{"start":{"line":728,"column":29},"end":{"line":728,"column":52}},{"start":{"line":728,"column":58},"end":{"line":728,"column":63}},{"start":{"line":728,"column":69},"end":{"line":728,"column":78}}]},"12":{"line":733,"type":"if","locations":[{"start":{"line":733,"column":20},"end":{"line":733,"column":20}},{"start":{"line":733,"column":20},"end":{"line":733,"column":20}}]},"13":{"line":736,"type":"if","locations":[{"start":{"line":736,"column":20},"end":{"line":736,"column":20}},{"start":{"line":736,"column":20},"end":{"line":736,"column":20}}]},"14":{"line":762,"type":"binary-expr","locations":[{"start":{"line":762,"column":29},"end":{"line":762,"column":52}},{"start":{"line":762,"column":58},"end":{"line":762,"column":64}},{"start":{"line":762,"column":70},"end":{"line":762,"column":76}}]},"15":{"line":767,"type":"if","locations":[{"start":{"line":767,"column":20},"end":{"line":767,"column":20}},{"start":{"line":767,"column":20},"end":{"line":767,"column":20}}]},"16":{"line":777,"type":"if","locations":[{"start":{"line":777,"column":24},"end":{"line":777,"column":24}},{"start":{"line":777,"column":24},"end":{"line":777,"column":24}}]},"17":{"line":847,"type":"if","locations":[{"start":{"line":847,"column":20},"end":{"line":847,"column":20}},{"start":{"line":847,"column":20},"end":{"line":847,"column":20}}]},"18":{"line":847,"type":"binary-expr","locations":[{"start":{"line":847,"column":25},"end":{"line":847,"column":75}},{"start":{"line":847,"column":81},"end":{"line":847,"column":137}}]}},"code":["(function () { YUI.add('gallery-itsaeditmodel', function (Y, NAME) {","","'use strict';","","/**"," *"," * Extends Y.Model by adding methods through which they can create editable form-elements, which represent and are bound to the propery-value."," * This model is for defining the UI-structure for all Model's properties and for firing model-events for"," * Y.ITSAEditModel does not rendering to the dom itself. That needs to be done by an Y.View-instance, like Y.ITSAViewModel."," *"," * @module gallery-itsaeditmodel"," * @class ITSAEditModel"," * @extends Model"," * @constructor"," * @since 0.1"," *"," * <i>Copyright (c) 2013 Marco Asbreuk - http://itsasbreuk.nl</i>"," * YUI BSD License - http://developer.yahoo.com/yui/license.html"," *","*/","","var YArray = Y.Array,","    ITSAFormElement = Y.ITSAFormElement,","","    CLICK = 'click',","    SAVE = 'save',","    DESTROY = 'destroy',","    CANCEL = 'cancel',","    EDIT = 'edit',","    SUBMIT = 'submit',","    RESET = 'reset',","","    DATE = 'date',","    TIME = 'time',","    PICKER = 'picker',","","    DATA = 'data',","    VALUE = 'value',","    BUTTON = 'button',","    TYPE = 'type',","    DATA_BUTTON_SUBTYPE = DATA+'-'+BUTTON+'sub'+TYPE,","    DATA_BUTTON_TYPE = DATA+'-'+BUTTON+TYPE,","","    /**","      * Fired by input-elements that can force a 'focusnext' when they detect an enter-key.","      * The defaultfunction: defFnFocusNext() is empty by default, but can be overridden.","      * This function always will be executed, unless the event is preventDefaulted or halted.","      *","      * @event focusnext","      * @param e {EventFacade} Event Facade including:","      * @param e.message {String} The warningmessage.","      * @since 0.1","    **/","    FOCUS_NEXT = 'focusnext',","","    /**","      * Event fired after an input-elements value is changed.","      * The defaultfunction: defFnUIChanged() is empty by default, but can be overridden.","      * This function always will be executed, unless the event is preventDefaulted or halted.","      *","      * @event uichanged","      * @param e {EventFacade} Event Facade including:","      * @param e.inputNode {Y.Node} The Input-Node that was clicked","      * @param e.elementId {String} Id of the Node that changed value.","      * @param e.property {String} The property-name of the Object (or the Model's attribute-name)","      * @param e.uiElement {Object} reference to the UI-element","      *","    **/","    UI_CHANGED = 'uichanged',","","    /**","      * Event fired when an input-elements value is changed (life, without blurring): valuechange.","      * The defaultfunction: defFnUIChanging() is empty by default, but can be overridden.","      * This function always will be executed, unless the event is preventDefaulted or halted.","      *","      * @event uichanging","      * @param e {EventFacade} Event Facade including:","      * @param e.inputNode {Y.Node} The Input-Node that was clicked","      * @param e.elementId {String} Id of the Node that chancged value.","      * @param e.property {String} The property-name of the Object (or the Model's attribute-name)","      * @param e.uiElement {Object} reference to the UI-element","      *","    **/","    UI_CHANGING = 'uichanging',","","    /**","      * Fired when a button -rendered by this modelinstance using renderBtn()- is clicked.","      * No defaultFunction, so listen to the 'on' and 'after' event are the same.","      *","      * @event buttonclick","      * @param e {EventFacade} Event Facade including:","      * @param e.target {Y.ITSAEditModel} The ITSAEditModel-instance","      * @param e.buttonNode {Y.Node} reference to the buttonnode","      * @param e.uiElement {Object} reference to the UI-element","      *","    **/","    BUTTON_CLICK = BUTTON+CLICK,","","    /**","      * Fired when a button -rendered by this modelinstance using renderDestroyBtn()- is clicked.","      * The defaultfunction: _defFnDestroy() always will be executed, unless the event is preventDefaulted or halted.","      *","      * @event destroyclick","      * @param e {EventFacade} Event Facade including:","      * @param e.target {Y.ITSAEditModel} The ITSAEditModel-instance","      * @param e.value {Any} Should be used to identify the button --> defined during rendering: is either config.value or buttonText","      * @param e.buttonNode {Y.Node} reference to the buttonnode","      * @param e.uiElement {Object} reference to the UI-element","      *","    **/","    DESTROY_CLICK = DESTROY+CLICK,","","    /**","      * Fired when a button -rendered by this modelinstance using renderSubmitBtn()- is clicked.","      * The defaultfunction: _defFnSubmit() always will be executed, unless the event is preventDefaulted or halted.","      *","      * @event submitclick","      * @param e {EventFacade} Event Facade including:","      * @param e.target {Y.ITSAEditModel} The ITSAEditModel-instance","      * @param e.value {Any} Could be used to identify the button --> defined during rendering by config.value","      * @param e.buttonNode {Y.Node} reference to the buttonnode","      * @param e.uiElement {Object} reference to the UI-element","      *","    **/","    SUBMIT_CLICK = SUBMIT+CLICK,","","    /**","      * Fired when a button -rendered by this modelinstance using renderCancelBtn()- is clicked.","      * The defaultfunction: _defFnCancel() always will be executed, unless the event is preventDefaulted or halted.","      *","      * @event cancelclick","      * @param e {EventFacade} Event Facade including:","      * @param e.target {Y.ITSAEditModel} The ITSAEditModel-instance","      * @param e.value {Any} Could be used to identify the button --> defined during rendering by config.value","      * @param e.buttonNode {Y.Node} reference to the buttonnode","      * @param e.uiElement {Object} reference to the UI-element","      *","    **/","    CANCEL_CLICK = CANCEL+CLICK,","","    /**","      * Fired when a button -rendered by this modelinstance using renderResetBtn()- is clicked.","      * The defaultfunction: _defFnReset() always will be executed, unless the event is preventDefaulted or halted.","      *","      * @event resetclick","      * @param e {EventFacade} Event Facade including:","      * @param e.target {Y.ITSAEditModel} The ITSAEditModel-instance","      * @param e.value {Any} Could be used to identify the button --> defined during rendering by config.value","      * @param e.buttonNode {Y.Node} reference to the buttonnode","      * @param e.uiElement {Object} reference to the UI-element","      *","    **/","    RESET_CLICK = RESET+CLICK,","","    /**","      * Fired when a button -rendered by this modelinstance using renderEditBtn()- is clicked.","      * The defaultfunction: _defFnEdit() always will be executed, unless the event is preventDefaulted or halted.","      *","      * @event editclick","      * @param e {EventFacade} Event Facade including:","      * @param e.target {Y.ITSAEditModel} The ITSAEditModel-instance","      * @param e.value {Any} Could be used to identify the button --> defined during rendering by config.value","      * @param e.buttonNode {Y.Node} reference to the buttonnode","      * @param e.uiElement {Object} reference to the UI-element","      *","    **/","    EDIT_CLICK = EDIT+CLICK,","","    /**","      * Fired when a button -rendered by this modelinstance using renderSaveBtn()- is clicked.","      * The defaultfunction: _defFnSave() always will be executed, unless the event is preventDefaulted or halted.","      *","      * @event saveclick","      * @param e {EventFacade} Event Facade including:","      * @param e.target {Y.ITSAEditModel} The ITSAEditModel-instance","      * @param e.value {Any} Could be used to identify the button --> defined during rendering by config.value","      * @param e.buttonNode {Y.Node} reference to the buttonnode","      * @param e.uiElement {Object} reference to the UI-element","      *","    **/","    SAVE_CLICK = SAVE+CLICK,","","    /**","      * Fired when a datepickerbutton -rendered by this modelinstance- is clicked.","      * The defaultfunction: _defFnChangeDate() always will be executed, unless the event is preventDefaulted or halted.","      *","      * @event datepickerclick","      * @param e {EventFacade} Event Facade including:","      * @param e.target {Y.ITSAEditModel} The ITSAEditModel-instance","      * @param e.value {Date} current value of the property","      * @param e.buttonNode {Y.Node} reference to the buttonnode","      * @param e.uiElement {Object} reference to the UI-element","      *","    **/","    DATEPICKER_CLICK = DATE+PICKER+CLICK,","","    /**","      * Fired when a timepickerbutton -rendered by this modelinstance- is clicked.","      * The defaultfunction: _defFnChangeDate() always will be executed, unless the event is preventDefaulted or halted.","      *","      * @event timepickerclick","      * @param e {EventFacade} Event Facade including:","      * @param e.target {Y.ITSAEditModel} The ITSAEditModel-instance","      * @param e.value {Date} current value of the property","      * @param e.buttonNode {Y.Node} reference to the buttonnode","      * @param e.uiElement {Object} reference to the UI-element","      *","    **/","    TIMEPICKER_CLICK = TIME+PICKER+CLICK,","","    /**","      * Fired when a datetimepickerbutton -rendered by this modelinstance- is clicked.","      * The defaultfunction: _defFnChangeDate() always will be executed, unless the event is preventDefaulted or halted.","      *","      * @event datetimepickerclick","      * @param e {EventFacade} Event Facade including:","      * @param e.target {Y.ITSAEditModel} The ITSAEditModel-instance","      * @param e.value {Date} current value of the property","      * @param e.buttonNode {Y.Node} reference to the buttonnode","      * @param e.uiElement {Object} reference to the UI-element","      *","    **/","    DATETIMEPICKER_CLICK = DATE+TIME+PICKER+CLICK;","","Y.namespace('Plugin').ITSAEditModel = Y.Base.create('itsaeditmodel', Y.Model, [], {","","        /**","         * Sets up the toolbar during initialisation. Calls render() as soon as the hosts-editorframe is ready","         *","         * @method initializer","         * @protected","         * @since 0.1","         */","        initializer : function() {","            var instance = this;","","           // -- Public Properties -------------------------------------------------","","           /**","            * Internal list that holds event-references","            * @property _eventhandlers","            * @default []","            * @private","            * @type Array","            */","            instance._eventhandlers = [];","","           /**","            * internal backup of all property-configs","            * @property _UIelements","            * @default {}","            * @private","            * @type Object","            */","            instance._UIelements = {};","","           /**","            * internal flag that tells whether automaicly saving needs to happen in case properties have changed","            * @property _needAutoSaved","            * @default false","            * @private","            * @type Boolean","            */","            instance._needAutoSaved = false;","","           /**","            * Internal reference to Y.later timerobject for autosaving","            * @property _autoSaveTimer","            * @default null","            * @private","            * @type timer-Object","            */","            instance._autoSaveTimer = null;","","            instance.publish(","                FOCUS_NEXT,","                {","                    defaultFn: Y.bind(instance.defFnFocusNext, instance),","                    emitFacade: true","                }","            );","            instance.publish(","                UI_CHANGED,","                {","                    defaultFn: Y.bind(instance.defFnUIChanged, instance),","                    emitFacade: true","                }","            );","            instance.publish(","                UI_CHANGING,","                {","                    defaultFn: Y.bind(instance.defFnUIChanging, instance),","                    emitFacade: true","                }","            );","            instance.publish(","                DESTROY,","                {","                    defaultFn: Y.bind(instance._defFnDestroy, instance),","                    emitFacade: true","                }","            );","            instance.publish(","                SUBMIT,","                {","                    defaultFn: Y.bind(instance._defFnSubmit, instance),","                    emitFacade: true","                }","            );","            instance.publish(","                CANCEL,","                {","                    defaultFn: Y.bind(instance._defFnCancel, instance),","                    emitFacade: true","                }","            );","            instance.publish(","                RESET,","                {","                    defaultFn: Y.bind(instance._defFnReset, instance),","                    emitFacade: true","                }","            );","            instance.publish(","                SAVE,","                {","                    defaultFn: Y.bind(instance._defFnSave, instance),","                    emitFacade: true","                }","            );","            instance.publish(","                DATEPICKER_CLICK,","                {","                    defaultFn: Y.bind(instance._defFnChangeDate, instance),","                    emitFacade: true","                }","            );","            instance.publish(","                TIMEPICKER_CLICK,","                {","                    defaultFn: Y.bind(instance._defFnChangeDate, instance),","                    emitFacade: true","                }","            );","            instance.publish(","                DATETIMEPICKER_CLICK,","                {","                    defaultFn: Y.bind(instance._defFnChangeDate, instance),","                    emitFacade: true","                }","            );","","            instance._bindUI();","        },","","defFnFocusNext : function() {","    // empty by default --> can be overridden","},","","defFnUIChanged : function() {","    // empty by default --> can be overridden","},","","defFnUIChanging : function() {","    // empty by default --> can be overridden","},","","_defFnDestroy : function() {","","},","_defFnEdit : function() {","","},","_defFnSubmit : function() {","","},","_defFnCancel : function() {","","},","_defFnReset : function() {","","},","_defFnSave : function() {","","},","_defFnChangeDate : function(e) {","    var instance = e.target,","        type = e.type,","        node = e.buttonNode,","        picker = Y.ItsaDateTimePicker,","        promise;","    if (type===DATEPICKER_CLICK) {","        promise = Y.bind(picker.getDate, picker);","    }","    else if (type===TIMEPICKER_CLICK) {","        promise = Y.bind(picker.getTime, picker);","    }","    else if (type===DATETIMEPICKER_CLICK) {","        promise = Y.bind(picker.getDateTime, picker);","    }","    promise(e.value, e.uiElement.config)","    .then(","        function(newdate) {","    //                            var newRenderedElement;","    //                            instance._storeProperty(valuespan, picker, propertyName, newdate, true);","            // because _setProperty setts the attribute with {fromEditModel: true},","            // the view does not re-render. We change the fieldvalue ourselves","            // first ask for ITSAFormElement how the render will look like","            // then axtract the value from within","    //                            newRenderedElement = instance.getElement(propertyName, uiElement, uiElement.value);","    //                            valuespan.setHTML(instance._getDateTimeValueFromRender(newRenderedElement));","        },","        function() {","            return true; // switch rejectstatus to fulfilled by returning a value","        }","    )","    .then(","        function() {","            // should always be called","            // be carefull: button might not exist anymore, when the view is rerendered","            if (node) {","                node.focus();","            }","        }","    );","},","","        /**","         *","         * Renderes a formelement-button. In order to be able to take action once the button is clicked, you can use config.value,","         * otherwise 'buttonText' will automaticly be the e.value inside the eventlistener. By specifying 'config',","         * the button can be configured in more detail.","         * <br />Imagebuttons can be set through 'buttonText', f.i.: '<i class=\"icon-press\"></i> press me'","         *","         * @method renderBtn","         * @param buttonText {String} Text on the button (equals buttonName whennot specified).","         * @param [config] {Object} config (which that is passed through to Y.ITSAFormElement)","         * @param [config.value] {Any} returnvalue which is available inside the eventlistener through e.value","         * @param [config.data] when wanting to add extra data to the button, f.i. 'data-someinfo=\"somedata\"'","         * @param [config.disabled]","         * @param [config.hidden]","         * @param [config.classname] for addeing extra classnames to the button","         * @param [config.focusable]","         * @param [config.primary] making it the primary-button","         * @param [config.tooltip] tooltip when Y.Tipsy or Y.Tooltip is used","         * @param [config.tooltipHeader] header of the tooltip, when using Y.Tooltip","         * @param [config.tooltipFooter] footer of the tooltip when using Y.Tooltip","         * @param [config.tooltipPlacement] tooltip's placement when using Y.Tooltip","         * @since 0.2","         *","         */","        renderBtn : function(buttonText, config) {","            return this._renderBtn(buttonText, config, BUTTON, true);","        },","","        _renderBtn : function(buttonText, config, buttontype, extradata) {","            var instance = this,","                formbutton;","","/*jshint expr:true */","            config || (config = {});","            buttonText || (buttonText = buttontype);","/*jshint expr:false */","            config.buttonText = buttonText;","/*jshint expr:true */","            config.data || (config.data = '');","            extradata && (config.data += ' '+DATA_BUTTON_SUBTYPE+'=\"'+buttontype+'\"');","/*jshint expr:false */","            formbutton = ITSAFormElement.getElement(buttontype, config);","            instance._UIelements[formbutton.nodeid] = formbutton;","            return formbutton.html;","        },","","        /**","         *","         * Renderes a formelement-cancelbutton.","         * By specifying 'config', the button can be configured in more detail.","         * <br />Imagebuttons can be set through 'buttonText', f.i.: '<i class=\"icon-cancel\"></i> cancel'","         *","         * @method renderCancelBtn","         * @param buttonText {String} Text on the button (equals buttonName whennot specified).","         * @param [config] {Object} config (which that is passed through to Y.ITSAFormElement)","         * @param [config.value] {Any} returnvalue which is available inside the eventlistener through e.value","         * @param [config.data] when wanting to add extra data to the button, f.i. 'data-someinfo=\"somedata\"'","         * @param [config.disabled]","         * @param [config.hidden]","         * @param [config.classname] for addeing extra classnames to the button","         * @param [config.focusable]","         * @param [config.primary] making it the primary-button","         * @param [config.tooltip] tooltip when Y.Tipsy or Y.Tooltip is used","         * @param [config.tooltipHeader] header of the tooltip, when using Y.Tooltip","         * @param [config.tooltipFooter] footer of the tooltip when using Y.Tooltip","         * @param [config.tooltipPlacement] tooltip's placement when using Y.Tooltip","         * @since 0.2","         *","         */","        renderCancelBtn : function(buttonText, config) {","            return this._renderBtn(buttonText, config, CANCEL, true);","        },","","        /**","         *","         * Renderes a formelement-destroybutton.","         * By specifying 'config', the button can be configured in more detail.","         * <br />Imagebuttons can be set through 'buttonText', f.i.: '<i class=\"icon-destroy\"></i> destroy'","         *","         * @method renderDestroyBtn","         * @param buttonText {String} Text on the button (equals buttonName whennot specified).","         * @param [config] {Object} config (which that is passed through to Y.ITSAFormElement)","         * @param [config.value] {Any} returnvalue which is available inside the eventlistener through e.value","         * @param [config.data] when wanting to add extra data to the button, f.i. 'data-someinfo=\"somedata\"'","         * @param [config.disabled]","         * @param [config.hidden]","         * @param [config.classname] for addeing extra classnames to the button","         * @param [config.focusable]","         * @param [config.primary] making it the primary-button","         * @param [config.tooltip] tooltip when Y.Tipsy or Y.Tooltip is used","         * @param [config.tooltipHeader] header of the tooltip, when using Y.Tooltip","         * @param [config.tooltipFooter] footer of the tooltip when using Y.Tooltip","         * @param [config.tooltipPlacement] tooltip's placement when using Y.Tooltip","         * @since 0.2","         *","         */","        renderDestroyBtn : function(buttonText, config) {","            return this._renderBtn(buttonText, config, DESTROY, true);","        },","","        /**","         *","         * Renderes a formelement-editbutton.","         * By specifying 'config', the button can be configured in more detail.","         * <br />Imagebuttons can be set through 'buttonText', f.i.: '<i class=\"icon-edit\"></i> edit'","         *","         * @method renderEditBtn","         * @param buttonText {String} Text on the button (equals buttonName whennot specified).","         * @param [config] {Object} config (which that is passed through to Y.ITSAFormElement)","         * @param [config.value] {Any} returnvalue which is available inside the eventlistener through e.value","         * @param [config.data] when wanting to add extra data to the button, f.i. 'data-someinfo=\"somedata\"'","         * @param [config.disabled]","         * @param [config.hidden]","         * @param [config.classname] for addeing extra classnames to the button","         * @param [config.focusable]","         * @param [config.primary] making it the primary-button","         * @param [config.tooltip] tooltip when Y.Tipsy or Y.Tooltip is used","         * @param [config.tooltipHeader] header of the tooltip, when using Y.Tooltip","         * @param [config.tooltipFooter] footer of the tooltip when using Y.Tooltip","         * @param [config.tooltipPlacement] tooltip's placement when using Y.Tooltip","         * @since 0.2","         *","         */","        renderEditBtn : function(buttonText, config) {","            return this._renderBtn(buttonText, config, EDIT, true);","        },","","        /**","         *","         * Renderes a formelement-resetbutton.","         * By specifying 'config', the button can be configured in more detail.","         * <br />Imagebuttons can be set through 'buttonText', f.i.: '<i class=\"icon-reset\"></i> reset'","         *","         * @method renderResetBtn","         * @param buttonText {String} Text on the button (equals buttonName whennot specified).","         * @param [config] {Object} config (which that is passed through to Y.ITSAFormElement)","         * @param [config.value] {Any} returnvalue which is available inside the eventlistener through e.value","         * @param [config.data] when wanting to add extra data to the button, f.i. 'data-someinfo=\"somedata\"'","         * @param [config.disabled]","         * @param [config.hidden]","         * @param [config.classname] for addeing extra classnames to the button","         * @param [config.focusable]","         * @param [config.primary] making it the primary-button","         * @param [config.tooltip] tooltip when Y.Tipsy or Y.Tooltip is used","         * @param [config.tooltipHeader] header of the tooltip, when using Y.Tooltip","         * @param [config.tooltipFooter] footer of the tooltip when using Y.Tooltip","         * @param [config.tooltipPlacement] tooltip's placement when using Y.Tooltip","         * @since 0.2","         *","         */","        renderResetBtn : function(buttonText, config) {","            return this._renderBtn(buttonText, config, RESET);","        },","","        /**","         *","         * Renderes a formelement-savebutton.","         * By specifying 'config', the button can be configured in more detail.","         * <br />Imagebuttons can be set through 'buttonText', f.i.: '<i class=\"icon-save\"></i> save'","         *","         * @method renderSaveBtn","         * @param buttonText {String} Text on the button (equals buttonName whennot specified).","         * @param [config] {Object} config (which that is passed through to Y.ITSAFormElement)","         * @param [config.value] {Any} returnvalue which is available inside the eventlistener through e.value","         * @param [config.data] when wanting to add extra data to the button, f.i. 'data-someinfo=\"somedata\"'","         * @param [config.disabled]","         * @param [config.hidden]","         * @param [config.classname] for addeing extra classnames to the button","         * @param [config.focusable]","         * @param [config.primary] making it the primary-button","         * @param [config.tooltip] tooltip when Y.Tipsy or Y.Tooltip is used","         * @param [config.tooltipHeader] header of the tooltip, when using Y.Tooltip","         * @param [config.tooltipFooter] footer of the tooltip when using Y.Tooltip","         * @param [config.tooltipPlacement] tooltip's placement when using Y.Tooltip","         * @since 0.2","         *","         */","        renderSaveBtn : function(buttonText, config) {","            return this._renderBtn(buttonText, config, SAVE, true);","        },","","        /**","         *","         * Renderes a formelement-submitbutton.","         * By specifying 'config', the button can be configured in more detail.","         * <br />Imagebuttons can be set through 'buttonText', f.i.: '<i class=\"icon-press\"></i> save'","         *","         * @method renderSubmitBtn","         * @param buttonText {String} Text on the button (equals buttonName whennot specified).","         * @param [config] {Object} config (which that is passed through to Y.ITSAFormElement)","         * @param [config.value] {Any} returnvalue which is available inside the eventlistener through e.value","         * @param [config.data] when wanting to add extra data to the button, f.i. 'data-someinfo=\"somedata\"'","         * @param [config.disabled]","         * @param [config.hidden]","         * @param [config.classname] for addeing extra classnames to the button","         * @param [config.focusable]","         * @param [config.primary] making it the primary-button","         * @param [config.tooltip] tooltip when Y.Tipsy or Y.Tooltip is used","         * @param [config.tooltipHeader] header of the tooltip, when using Y.Tooltip","         * @param [config.tooltipFooter] footer of the tooltip when using Y.Tooltip","         * @param [config.tooltipPlacement] tooltip's placement when using Y.Tooltip","         * @since 0.2","         *","         */","        renderSubmitBtn : function(buttonText, config) {","            return this._renderBtn(buttonText, config, SUBMIT);","        },","","        /**","         * Cleans up bindings and removes plugin","         * @method destructor","         * @protected","         * @since 0.1","        */","        destructor : function() {","            var instance = this;","            if (instance._autoSaveTimer) {","                instance._autoSaveTimer.cancel();","            }","            if (instance._fireEventTimer) {","                instance._fireEventTimer.cancel();","            }","            instance._clearEventhandlers();","            instance._UIelements = {};","        },","","        //===============================================================================================","        // private methods","        //===============================================================================================","","        /**","         * Setting up eventlisteners","         *","         * @method _bindUI","         * @private","         * @since 0.1","         *","        */","        _bindUI : function() {","            var instance = this,","                eventhandlers = instance._eventhandlers,","                body = Y.one('body');","","","            // listening for a click on any 'datetimepicker'-button or a click on any 'form-element'-button in the dom","            eventhandlers.push(","                body.delegate(","                    [DATEPICKER_CLICK, TIMEPICKER_CLICK, DATETIMEPICKER_CLICK, BUTTON_CLICK,","                     SAVE_CLICK, DESTROY_CLICK, EDIT_CLICK, CANCEL_CLICK, SUBMIT_CLICK, RESET_CLICK],","                    function(e) {","                        var node = e.target,","                          type = e.type,","                            payload = {","                                target: instance,","                                value: new Date(node.getAttribute(VALUE)),","                                uiElement: instance._UIelements[node.get('id')],","                                buttonNode: node,","                                type: type","                            };","                        // refireing, but now by the instance:","                        instance.fire(type, payload);","                    },","                    function(delegatedNode, e){ // node === e.target","                        // only process if node's id is part of this ITSAEditModel-instance:","                        return instance._UIelements[e.target.get('id')];","                    }","                )","            );","        },","","        /**","         * Cleaning up all eventlisteners","         *","         * @method _clearEventhandlers","         * @private","         * @since 0.1","         *","        */","        _clearEventhandlers : function() {","            YArray.each(","                this._eventhandlers,","                function(item){","                    item.detach();","                }","            );","        }","","    }, {","        ATTRS : {","            /**","             * Sets the interval to do an 'autosave' during editing input/textfields.","             * Only applies in situations where the attribute 'updateMode'===2. Value should be in <b>seconds</b> between 1-3600.","             * @attribute autosaveInterval","             * @type Int","             * @default 30","             * @since 0.1","            */","            autosaveInterval : {","                value: 30,","                validator: function(val) {","                    return ((typeof val === 'number') && (val>0) && (val<=3600));","                },","                setter: function(val) {","                    var instance = this,","                        updateMode = instance.get('updateMode');","                    if (instance._autoSaveTimer) {","                        instance._autoSaveTimer.cancel();","                    }","                    if (updateMode===2) {","                        instance._autoSaveTimer = Y.later(","                            1000*val,","                            instance,","                            instance._autoStore,","                            null,","                            true","                        );","                    }","                }","            },","            /**","             * When to update the edited value to the Model. You can use 4 states:<br /><br />","             * 0 = only on Model.save <i>(or when dave-button is pressed)</i><br />","             * 1 = after the attribute finished updating <i>in case of textfields: when blurring</i><br />","             * 2 = autosave, based on the interval defined with attribute 'autosaveInterval'<br />","             * 3 = life, immediate updates <i>in case of textfields: after every valueChange</i><br /><br />","             * @attribute updateMode","             * @type Int","             * @default 0","             * @since 0.1","            */","            updateMode : {","                value: 0,","                lazyAdd: false, // in case of value","                validator: function(val) {","                    return ((typeof val === 'number') && (val>=0) && (val<=3));","                },","                setter: function(val) {","                    var instance = this,","                        autosaveInterval = instance.get('autosaveInterval');","                    if (val) {","                        instance._autoSaveTimer = Y.later(","                            1000*autosaveInterval,","                            instance,","                            instance._autoStore,","                            null,","                            true","                        );","                    }","                    else {","                        if (instance._autoSaveTimer) {","                            instance._autoSaveTimer.cancel();","                        }","                    }","                }","            }","        }","    }",");","","//===================================================================","//===================================================================","","// Define synthetic events to Y.Event","/**","  * Node-event fired when the normal button is clicked.","  * that is: generated through renderBtn() and not a specified button like 'save', or 'submit'.","  *","  * @event Y.Node.buttonclick","  * @param e {EventFacade} Event Facade including:","  * @param e.target {Y.Node} The ButtonNode that was clicked","  *","**/","","/**","  * Node-event fired when the destroy-button is clicked.","  *","  * @event Y.Node.destroyclick","  * @param e {EventFacade} Event Facade including:","  * @param e.target {Y.Node} The ButtonNode that was clicked","  *","**/","","/**","  * Node-event fired when the save-button is clicked.","  *","  * @event Y.Node.saveclick","  * @param e {EventFacade} Event Facade including:","  * @param e.target {Y.Node} The ButtonNode that was clicked","  *","**/","","/**","  * Node-event fired when the edit-button is clicked.","  *","  * @event Y.Node.editclick","  * @param e {EventFacade} Event Facade including:","  * @param e.target {Y.Node} The ButtonNode that was clicked","  *","**/","","/**","  * Node-event fired when the cancel-button is clicked.","  *","  * @event Y.Node.cancelclick","  * @param e {EventFacade} Event Facade including:","  * @param e.target {Y.Node} The ButtonNode that was clicked","  *","**/","","YArray.each(","    [BUTTON, SAVE, DESTROY, EDIT, CANCEL],","    function(eventtype) {","        Y.Event.define(eventtype+CLICK, {","            on: function (node, subscription, notifier) {","                // To make detaching easy, a common pattern is to add the subscription","                // for the supporting DOM event to the subscription object passed in.","                // This is then referenced in the detach() method below.","                subscription._handle = node.on(CLICK, function (e) {","                    var targetNode = e.target;","                    if ((targetNode.getAttribute(DATA_BUTTON_TYPE)===BUTTON) && (targetNode.getAttribute(DATA_BUTTON_SUBTYPE)===eventtype)) {","                        // The notifier triggers the subscriptions to be executed.","                        // Pass its fire() method the triggering DOM event facade","                        notifier.fire(e);","                    }","                });","            },","            // The logic executed when the 'tripleclick' subscription is `detach()`ed","            detach: function (node, subscription) {","                // Clean up supporting DOM subscriptions and other external hooks","                // when the synthetic event subscription is detached.","                subscription._handle.detach();","            }","        });","    }",");","","}, '@VERSION@', {","    \"requires\": [","        \"yui-base\",","        \"attribute-base\",","        \"base-build\",","        \"node-base\",","        \"node-event-delegate\",","        \"event-synthetic\",","        \"plugin\",","        \"pluginhost-base\",","        \"lazy-model-list\",","        \"event-valuechange\",","        \"gallery-itsamodelsyncpromise\",","        \"gallery-itsaformelement\"","    ]","});","","}());"]};
}
var __cov_L2TLAwZNER9TG3Q_GxEVvA = __coverage__['build/gallery-itsaeditmodel/gallery-itsaeditmodel.js'];
__cov_L2TLAwZNER9TG3Q_GxEVvA.s['1']++;YUI.add('gallery-itsaeditmodel',function(Y,NAME){'use strict';__cov_L2TLAwZNER9TG3Q_GxEVvA.f['1']++;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['2']++;var YArray=Y.Array,ITSAFormElement=Y.ITSAFormElement,CLICK='click',SAVE='save',DESTROY='destroy',CANCEL='cancel',EDIT='edit',SUBMIT='submit',RESET='reset',DATE='date',TIME='time',PICKER='picker',DATA='data',VALUE='value',BUTTON='button',TYPE='type',DATA_BUTTON_SUBTYPE=DATA+'-'+BUTTON+'sub'+TYPE,DATA_BUTTON_TYPE=DATA+'-'+BUTTON+TYPE,FOCUS_NEXT='focusnext',UI_CHANGED='uichanged',UI_CHANGING='uichanging',BUTTON_CLICK=BUTTON+CLICK,DESTROY_CLICK=DESTROY+CLICK,SUBMIT_CLICK=SUBMIT+CLICK,CANCEL_CLICK=CANCEL+CLICK,RESET_CLICK=RESET+CLICK,EDIT_CLICK=EDIT+CLICK,SAVE_CLICK=SAVE+CLICK,DATEPICKER_CLICK=DATE+PICKER+CLICK,TIMEPICKER_CLICK=TIME+PICKER+CLICK,DATETIMEPICKER_CLICK=DATE+TIME+PICKER+CLICK;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['3']++;Y.namespace('Plugin').ITSAEditModel=Y.Base.create('itsaeditmodel',Y.Model,[],{initializer:function(){__cov_L2TLAwZNER9TG3Q_GxEVvA.f['2']++;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['4']++;var instance=this;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['5']++;instance._eventhandlers=[];__cov_L2TLAwZNER9TG3Q_GxEVvA.s['6']++;instance._UIelements={};__cov_L2TLAwZNER9TG3Q_GxEVvA.s['7']++;instance._needAutoSaved=false;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['8']++;instance._autoSaveTimer=null;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['9']++;instance.publish(FOCUS_NEXT,{defaultFn:Y.bind(instance.defFnFocusNext,instance),emitFacade:true});__cov_L2TLAwZNER9TG3Q_GxEVvA.s['10']++;instance.publish(UI_CHANGED,{defaultFn:Y.bind(instance.defFnUIChanged,instance),emitFacade:true});__cov_L2TLAwZNER9TG3Q_GxEVvA.s['11']++;instance.publish(UI_CHANGING,{defaultFn:Y.bind(instance.defFnUIChanging,instance),emitFacade:true});__cov_L2TLAwZNER9TG3Q_GxEVvA.s['12']++;instance.publish(DESTROY,{defaultFn:Y.bind(instance._defFnDestroy,instance),emitFacade:true});__cov_L2TLAwZNER9TG3Q_GxEVvA.s['13']++;instance.publish(SUBMIT,{defaultFn:Y.bind(instance._defFnSubmit,instance),emitFacade:true});__cov_L2TLAwZNER9TG3Q_GxEVvA.s['14']++;instance.publish(CANCEL,{defaultFn:Y.bind(instance._defFnCancel,instance),emitFacade:true});__cov_L2TLAwZNER9TG3Q_GxEVvA.s['15']++;instance.publish(RESET,{defaultFn:Y.bind(instance._defFnReset,instance),emitFacade:true});__cov_L2TLAwZNER9TG3Q_GxEVvA.s['16']++;instance.publish(SAVE,{defaultFn:Y.bind(instance._defFnSave,instance),emitFacade:true});__cov_L2TLAwZNER9TG3Q_GxEVvA.s['17']++;instance.publish(DATEPICKER_CLICK,{defaultFn:Y.bind(instance._defFnChangeDate,instance),emitFacade:true});__cov_L2TLAwZNER9TG3Q_GxEVvA.s['18']++;instance.publish(TIMEPICKER_CLICK,{defaultFn:Y.bind(instance._defFnChangeDate,instance),emitFacade:true});__cov_L2TLAwZNER9TG3Q_GxEVvA.s['19']++;instance.publish(DATETIMEPICKER_CLICK,{defaultFn:Y.bind(instance._defFnChangeDate,instance),emitFacade:true});__cov_L2TLAwZNER9TG3Q_GxEVvA.s['20']++;instance._bindUI();},defFnFocusNext:function(){__cov_L2TLAwZNER9TG3Q_GxEVvA.f['3']++;},defFnUIChanged:function(){__cov_L2TLAwZNER9TG3Q_GxEVvA.f['4']++;},defFnUIChanging:function(){__cov_L2TLAwZNER9TG3Q_GxEVvA.f['5']++;},_defFnDestroy:function(){__cov_L2TLAwZNER9TG3Q_GxEVvA.f['6']++;},_defFnEdit:function(){__cov_L2TLAwZNER9TG3Q_GxEVvA.f['7']++;},_defFnSubmit:function(){__cov_L2TLAwZNER9TG3Q_GxEVvA.f['8']++;},_defFnCancel:function(){__cov_L2TLAwZNER9TG3Q_GxEVvA.f['9']++;},_defFnReset:function(){__cov_L2TLAwZNER9TG3Q_GxEVvA.f['10']++;},_defFnSave:function(){__cov_L2TLAwZNER9TG3Q_GxEVvA.f['11']++;},_defFnChangeDate:function(e){__cov_L2TLAwZNER9TG3Q_GxEVvA.f['12']++;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['21']++;var instance=e.target,type=e.type,node=e.buttonNode,picker=Y.ItsaDateTimePicker,promise;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['22']++;if(type===DATEPICKER_CLICK){__cov_L2TLAwZNER9TG3Q_GxEVvA.b['1'][0]++;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['23']++;promise=Y.bind(picker.getDate,picker);}else{__cov_L2TLAwZNER9TG3Q_GxEVvA.b['1'][1]++;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['24']++;if(type===TIMEPICKER_CLICK){__cov_L2TLAwZNER9TG3Q_GxEVvA.b['2'][0]++;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['25']++;promise=Y.bind(picker.getTime,picker);}else{__cov_L2TLAwZNER9TG3Q_GxEVvA.b['2'][1]++;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['26']++;if(type===DATETIMEPICKER_CLICK){__cov_L2TLAwZNER9TG3Q_GxEVvA.b['3'][0]++;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['27']++;promise=Y.bind(picker.getDateTime,picker);}else{__cov_L2TLAwZNER9TG3Q_GxEVvA.b['3'][1]++;}}}__cov_L2TLAwZNER9TG3Q_GxEVvA.s['28']++;promise(e.value,e.uiElement.config).then(function(newdate){__cov_L2TLAwZNER9TG3Q_GxEVvA.f['13']++;},function(){__cov_L2TLAwZNER9TG3Q_GxEVvA.f['14']++;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['29']++;return true;}).then(function(){__cov_L2TLAwZNER9TG3Q_GxEVvA.f['15']++;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['30']++;if(node){__cov_L2TLAwZNER9TG3Q_GxEVvA.b['4'][0]++;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['31']++;node.focus();}else{__cov_L2TLAwZNER9TG3Q_GxEVvA.b['4'][1]++;}});},renderBtn:function(buttonText,config){__cov_L2TLAwZNER9TG3Q_GxEVvA.f['16']++;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['32']++;return this._renderBtn(buttonText,config,BUTTON,true);},_renderBtn:function(buttonText,config,buttontype,extradata){__cov_L2TLAwZNER9TG3Q_GxEVvA.f['17']++;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['33']++;var instance=this,formbutton;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['34']++;(__cov_L2TLAwZNER9TG3Q_GxEVvA.b['5'][0]++,config)||(__cov_L2TLAwZNER9TG3Q_GxEVvA.b['5'][1]++,config={});__cov_L2TLAwZNER9TG3Q_GxEVvA.s['35']++;(__cov_L2TLAwZNER9TG3Q_GxEVvA.b['6'][0]++,buttonText)||(__cov_L2TLAwZNER9TG3Q_GxEVvA.b['6'][1]++,buttonText=buttontype);__cov_L2TLAwZNER9TG3Q_GxEVvA.s['36']++;config.buttonText=buttonText;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['37']++;(__cov_L2TLAwZNER9TG3Q_GxEVvA.b['7'][0]++,config.data)||(__cov_L2TLAwZNER9TG3Q_GxEVvA.b['7'][1]++,config.data='');__cov_L2TLAwZNER9TG3Q_GxEVvA.s['38']++;(__cov_L2TLAwZNER9TG3Q_GxEVvA.b['8'][0]++,extradata)&&(__cov_L2TLAwZNER9TG3Q_GxEVvA.b['8'][1]++,config.data+=' '+DATA_BUTTON_SUBTYPE+'="'+buttontype+'"');__cov_L2TLAwZNER9TG3Q_GxEVvA.s['39']++;formbutton=ITSAFormElement.getElement(buttontype,config);__cov_L2TLAwZNER9TG3Q_GxEVvA.s['40']++;instance._UIelements[formbutton.nodeid]=formbutton;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['41']++;return formbutton.html;},renderCancelBtn:function(buttonText,config){__cov_L2TLAwZNER9TG3Q_GxEVvA.f['18']++;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['42']++;return this._renderBtn(buttonText,config,CANCEL,true);},renderDestroyBtn:function(buttonText,config){__cov_L2TLAwZNER9TG3Q_GxEVvA.f['19']++;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['43']++;return this._renderBtn(buttonText,config,DESTROY,true);},renderEditBtn:function(buttonText,config){__cov_L2TLAwZNER9TG3Q_GxEVvA.f['20']++;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['44']++;return this._renderBtn(buttonText,config,EDIT,true);},renderResetBtn:function(buttonText,config){__cov_L2TLAwZNER9TG3Q_GxEVvA.f['21']++;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['45']++;return this._renderBtn(buttonText,config,RESET);},renderSaveBtn:function(buttonText,config){__cov_L2TLAwZNER9TG3Q_GxEVvA.f['22']++;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['46']++;return this._renderBtn(buttonText,config,SAVE,true);},renderSubmitBtn:function(buttonText,config){__cov_L2TLAwZNER9TG3Q_GxEVvA.f['23']++;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['47']++;return this._renderBtn(buttonText,config,SUBMIT);},destructor:function(){__cov_L2TLAwZNER9TG3Q_GxEVvA.f['24']++;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['48']++;var instance=this;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['49']++;if(instance._autoSaveTimer){__cov_L2TLAwZNER9TG3Q_GxEVvA.b['9'][0]++;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['50']++;instance._autoSaveTimer.cancel();}else{__cov_L2TLAwZNER9TG3Q_GxEVvA.b['9'][1]++;}__cov_L2TLAwZNER9TG3Q_GxEVvA.s['51']++;if(instance._fireEventTimer){__cov_L2TLAwZNER9TG3Q_GxEVvA.b['10'][0]++;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['52']++;instance._fireEventTimer.cancel();}else{__cov_L2TLAwZNER9TG3Q_GxEVvA.b['10'][1]++;}__cov_L2TLAwZNER9TG3Q_GxEVvA.s['53']++;instance._clearEventhandlers();__cov_L2TLAwZNER9TG3Q_GxEVvA.s['54']++;instance._UIelements={};},_bindUI:function(){__cov_L2TLAwZNER9TG3Q_GxEVvA.f['25']++;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['55']++;var instance=this,eventhandlers=instance._eventhandlers,body=Y.one('body');__cov_L2TLAwZNER9TG3Q_GxEVvA.s['56']++;eventhandlers.push(body.delegate([DATEPICKER_CLICK,TIMEPICKER_CLICK,DATETIMEPICKER_CLICK,BUTTON_CLICK,SAVE_CLICK,DESTROY_CLICK,EDIT_CLICK,CANCEL_CLICK,SUBMIT_CLICK,RESET_CLICK],function(e){__cov_L2TLAwZNER9TG3Q_GxEVvA.f['26']++;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['57']++;var node=e.target,type=e.type,payload={target:instance,value:new Date(node.getAttribute(VALUE)),uiElement:instance._UIelements[node.get('id')],buttonNode:node,type:type};__cov_L2TLAwZNER9TG3Q_GxEVvA.s['58']++;instance.fire(type,payload);},function(delegatedNode,e){__cov_L2TLAwZNER9TG3Q_GxEVvA.f['27']++;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['59']++;return instance._UIelements[e.target.get('id')];}));},_clearEventhandlers:function(){__cov_L2TLAwZNER9TG3Q_GxEVvA.f['28']++;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['60']++;YArray.each(this._eventhandlers,function(item){__cov_L2TLAwZNER9TG3Q_GxEVvA.f['29']++;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['61']++;item.detach();});}},{ATTRS:{autosaveInterval:{value:30,validator:function(val){__cov_L2TLAwZNER9TG3Q_GxEVvA.f['30']++;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['62']++;return(__cov_L2TLAwZNER9TG3Q_GxEVvA.b['11'][0]++,typeof val==='number')&&(__cov_L2TLAwZNER9TG3Q_GxEVvA.b['11'][1]++,val>0)&&(__cov_L2TLAwZNER9TG3Q_GxEVvA.b['11'][2]++,val<=3600);},setter:function(val){__cov_L2TLAwZNER9TG3Q_GxEVvA.f['31']++;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['63']++;var instance=this,updateMode=instance.get('updateMode');__cov_L2TLAwZNER9TG3Q_GxEVvA.s['64']++;if(instance._autoSaveTimer){__cov_L2TLAwZNER9TG3Q_GxEVvA.b['12'][0]++;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['65']++;instance._autoSaveTimer.cancel();}else{__cov_L2TLAwZNER9TG3Q_GxEVvA.b['12'][1]++;}__cov_L2TLAwZNER9TG3Q_GxEVvA.s['66']++;if(updateMode===2){__cov_L2TLAwZNER9TG3Q_GxEVvA.b['13'][0]++;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['67']++;instance._autoSaveTimer=Y.later(1000*val,instance,instance._autoStore,null,true);}else{__cov_L2TLAwZNER9TG3Q_GxEVvA.b['13'][1]++;}}},updateMode:{value:0,lazyAdd:false,validator:function(val){__cov_L2TLAwZNER9TG3Q_GxEVvA.f['32']++;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['68']++;return(__cov_L2TLAwZNER9TG3Q_GxEVvA.b['14'][0]++,typeof val==='number')&&(__cov_L2TLAwZNER9TG3Q_GxEVvA.b['14'][1]++,val>=0)&&(__cov_L2TLAwZNER9TG3Q_GxEVvA.b['14'][2]++,val<=3);},setter:function(val){__cov_L2TLAwZNER9TG3Q_GxEVvA.f['33']++;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['69']++;var instance=this,autosaveInterval=instance.get('autosaveInterval');__cov_L2TLAwZNER9TG3Q_GxEVvA.s['70']++;if(val){__cov_L2TLAwZNER9TG3Q_GxEVvA.b['15'][0]++;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['71']++;instance._autoSaveTimer=Y.later(1000*autosaveInterval,instance,instance._autoStore,null,true);}else{__cov_L2TLAwZNER9TG3Q_GxEVvA.b['15'][1]++;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['72']++;if(instance._autoSaveTimer){__cov_L2TLAwZNER9TG3Q_GxEVvA.b['16'][0]++;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['73']++;instance._autoSaveTimer.cancel();}else{__cov_L2TLAwZNER9TG3Q_GxEVvA.b['16'][1]++;}}}}}});__cov_L2TLAwZNER9TG3Q_GxEVvA.s['74']++;YArray.each([BUTTON,SAVE,DESTROY,EDIT,CANCEL],function(eventtype){__cov_L2TLAwZNER9TG3Q_GxEVvA.f['34']++;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['75']++;Y.Event.define(eventtype+CLICK,{on:function(node,subscription,notifier){__cov_L2TLAwZNER9TG3Q_GxEVvA.f['35']++;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['76']++;subscription._handle=node.on(CLICK,function(e){__cov_L2TLAwZNER9TG3Q_GxEVvA.f['36']++;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['77']++;var targetNode=e.target;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['78']++;if((__cov_L2TLAwZNER9TG3Q_GxEVvA.b['18'][0]++,targetNode.getAttribute(DATA_BUTTON_TYPE)===BUTTON)&&(__cov_L2TLAwZNER9TG3Q_GxEVvA.b['18'][1]++,targetNode.getAttribute(DATA_BUTTON_SUBTYPE)===eventtype)){__cov_L2TLAwZNER9TG3Q_GxEVvA.b['17'][0]++;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['79']++;notifier.fire(e);}else{__cov_L2TLAwZNER9TG3Q_GxEVvA.b['17'][1]++;}});},detach:function(node,subscription){__cov_L2TLAwZNER9TG3Q_GxEVvA.f['37']++;__cov_L2TLAwZNER9TG3Q_GxEVvA.s['80']++;subscription._handle.detach();}});});},'@VERSION@',{'requires':['yui-base','attribute-base','base-build','node-base','node-event-delegate','event-synthetic','plugin','pluginhost-base','lazy-model-list','event-valuechange','gallery-itsamodelsyncpromise','gallery-itsaformelement']});
